{"version":3,"file":"use-resume-subscription-ef864602.js","sources":["../../../common/foundation/resources/client/ui/library/icons/material/OpenInNew.tsx","../../../common/foundation/resources/client/billing/billing-page/requests/use-cancel-subscription.ts","../../../common/foundation/resources/client/billing/billing-page/requests/use-resume-subscription.ts"],"sourcesContent":["import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const OpenInNewIcon = createSvgIcon(\r\n  <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\r\n, 'OpenInNewOutlined');\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {User} from '@ui/types/user';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\ninterface Payload {\r\n  subscriptionId: number;\r\n  delete?: boolean;\r\n}\r\n\r\nexport function useCancelSubscription() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => cancelSubscription(props),\r\n    onSuccess: (response, payload) => {\r\n      toast(\r\n        payload.delete\r\n          ? trans(message('Subscription deleted.'))\r\n          : trans(message('Subscription cancelled.')),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction cancelSubscription({\r\n  subscriptionId,\r\n  ...payload\r\n}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post(`billing/subscriptions/${subscriptionId}/cancel`, payload)\r\n    .then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {User} from '@ui/types/user';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\ninterface Payload {\r\n  subscriptionId: number;\r\n}\r\n\r\nexport function useResumeSubscription() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => resumeSubscription(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Subscription renewed.')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction resumeSubscription({subscriptionId}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post(`billing/subscriptions/${subscriptionId}/resume`)\r\n    .then(r => r.data);\r\n}\r\n"],"names":["OpenInNewIcon","createSvgIcon","jsx","useCancelSubscription","trans","useTrans","useMutation","props","cancelSubscription","response","payload","toast","message","err","showHttpErrorToast","subscriptionId","apiClient","r","useResumeSubscription","resumeSubscription"],"mappings":"yFAEO,MAAMA,EAAgBC,EAC3BC,EAAAA,IAAC,OAAK,CAAA,EAAE,oIAAqI,CAAA,EAC7I,mBAAmB,ECcd,SAASC,GAAwB,CAChC,KAAA,CAAC,MAAAC,GAASC,IAChB,OAAOC,EAAY,CACjB,WAAaC,GAAmBC,EAAmBD,CAAK,EACxD,UAAW,CAACE,EAAUC,IAAY,CAChCC,EACED,EAAQ,OACJN,EAAMQ,EAAQ,uBAAuB,CAAC,EACtCR,EAAMQ,EAAQ,yBAAyB,CAAC,CAAA,CAEhD,EACA,QAAgBC,GAAAC,EAAmBD,CAAG,CAAA,CACvC,CACH,CAEA,SAASL,EAAmB,CAC1B,eAAAO,EACA,GAAGL,CACL,EAA+B,CACtB,OAAAM,EACJ,KAAK,yBAAyBD,CAAc,UAAWL,CAAO,EAC9D,KAAUO,GAAAA,EAAE,IAAI,CACrB,CCvBO,SAASC,GAAwB,CAChC,KAAA,CAAC,MAAAd,GAASC,IAChB,OAAOC,EAAY,CACjB,WAAaC,GAAmBY,EAAmBZ,CAAK,EACxD,UAAW,IAAM,CACfI,EAAMP,EAAMQ,EAAQ,uBAAuB,CAAC,CAAC,CAC/C,EACA,QAAgBC,GAAAC,EAAmBD,CAAG,CAAA,CACvC,CACH,CAEA,SAASM,EAAmB,CAAC,eAAAJ,GAA6C,CACjE,OAAAC,EACJ,KAAK,yBAAyBD,CAAc,SAAS,EACrD,KAAUE,GAAAA,EAAE,IAAI,CACrB"}