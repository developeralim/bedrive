{"version":3,"file":"billing-redirect-message-8918fca2.js","sources":["../../../node_modules/@stripe/stripe-js/dist/stripe.esm.js","../../../common/foundation/resources/client/billing/checkout/stripe/use-stripe.ts","../../../common/foundation/resources/client/billing/checkout/stripe/stripe-elements-form.tsx","../../../common/foundation/resources/client/billing/billing-redirect-message.tsx"],"sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"2.1.11\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n","import {useEffect, useRef, useState} from 'react';\r\nimport {loadStripe, Stripe, StripeElements} from '@stripe/stripe-js';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useIsDarkMode} from '@ui/themes/use-is-dark-mode';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\n\r\ninterface UseStripeProps {\r\n  type: 'setupIntent' | 'subscription' | 'paymentIntent';\r\n  productId?: string | number;\r\n  priceId?: string | number;\r\n  amount?: number;\r\n}\r\nexport function useStripe({type, productId, priceId,amount}: UseStripeProps) {\r\n  const {user} = useAuth();\r\n  const isDarkMode = useIsDarkMode();\r\n  const isInitiatedRef = useRef<boolean>(false);\r\n  const paymentElementRef = useRef<HTMLDivElement>(null);\r\n  const {localeCode} = useSelectedLocale();\r\n  const [stripe, setStripe] = useState<Stripe | null>(null);\r\n  const [elements, setElements] = useState<StripeElements | null>(null);\r\n  const {\r\n    branding: {site_name},\r\n    billing: {\r\n      stripe_public_key,\r\n      stripe: {enable},\r\n    },\r\n  } = useSettings();\r\n\r\n  useEffect(() => {\r\n    if (!enable || !stripe_public_key || isInitiatedRef.current) return;\r\n\r\n    Promise.all([\r\n      // load stripe js library\r\n      loadStripe(stripe_public_key, {\r\n        apiVersion: '2022-08-01',\r\n        locale: localeCode as any,\r\n      }),\r\n      // create partial subscription for clientSecret\r\n      type === 'setupIntent'\r\n        ? createSetupIntent()\r\n        : type === 'subscription'\r\n        ? createSubscription(productId!, priceId)\r\n        : createPaymentIntent(amount!)\r\n\r\n    ]).then(([stripe, {clientSecret}]) => {\r\n      if (stripe && paymentElementRef.current) {\r\n        const elements = stripe.elements({\r\n          clientSecret,\r\n          appearance: {\r\n            theme: isDarkMode ? 'night' : 'stripe',\r\n          },\r\n        });\r\n\r\n        // Create and mount the Payment Element\r\n        const paymentElement = elements.create('payment', {\r\n          business: {name: site_name},\r\n          terms: {card: 'never'},\r\n          fields: {\r\n            billingDetails: {\r\n              address: 'auto',\r\n            },\r\n          },\r\n          defaultValues: {\r\n            billingDetails: {\r\n              email: user?.email,\r\n            },\r\n          },\r\n        });\r\n        paymentElement.mount(paymentElementRef.current);\r\n\r\n        setStripe(stripe);\r\n        setElements(elements);\r\n      }\r\n    });\r\n\r\n    isInitiatedRef.current = true;\r\n  }, [\r\n    productId,\r\n    stripe_public_key,\r\n    enable,\r\n    isDarkMode,\r\n    localeCode,\r\n    site_name,\r\n    type,\r\n    user?.email,\r\n  ]);\r\n\r\n  return {\r\n    stripe,\r\n    elements,\r\n    paymentElementRef,\r\n    stripeIsEnabled: stripe_public_key != null && enable,\r\n  };\r\n}\r\n\r\nfunction createSetupIntent(): Promise<{clientSecret: string}> {\r\n  return apiClient.post('billing/stripe/create-setup-intent').then(r => r.data);\r\n}\r\n\r\nfunction createSubscription(\r\n  productId: number | string,\r\n  priceId?: number | string,\r\n): Promise<{clientSecret: string}> {\r\n  return apiClient\r\n    .post('billing/stripe/create-partial-subscription', {\r\n      product_id: productId,\r\n      price_id: priceId,\r\n    })\r\n    .then(r => r.data);\r\n}\r\n\r\nfunction createPaymentIntent(amount: number): Promise<{clientSecret: string}> {\r\n  return apiClient\r\n    .post('billing/stripe/create-payment-intent', {\r\n      amount,\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","import clsx from 'clsx';\r\nimport { Button } from '@ui/buttons/button';\r\nimport { FormEventHandler, Fragment, ReactNode, useState } from 'react';\r\nimport { useStripe } from '@common/billing/checkout/stripe/use-stripe';\r\nimport { Skeleton } from '@ui/skeleton/skeleton';\r\n\r\ninterface StripeElementsFormProps {\r\n  productId?: string | number;\r\n  priceId?: string | number;\r\n  type: 'setupIntent' | 'subscription' | 'paymentIntent';\r\n  submitLabel: ReactNode;\r\n  returnUrl: string;\r\n  amount?: number;\r\n}\r\nexport function StripeElementsForm({\r\n  productId,\r\n  priceId,\r\n  type = 'subscription',\r\n  submitLabel,\r\n  returnUrl,\r\n  amount\r\n}: StripeElementsFormProps) {\r\n  const { stripe, elements, paymentElementRef, stripeIsEnabled } = useStripe({\r\n    type,\r\n    productId,\r\n    priceId,\r\n    amount\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // disable upgrade button if stripe is enabled, but not loaded yet\r\n  const stripeIsReady: boolean =\r\n    !stripeIsEnabled || (elements != null && stripe != null);\r\n\r\n  const handleSubmit: FormEventHandler = async e => {\r\n    e.preventDefault();\r\n\r\n    // stripe has not loaded yet\r\n    if (!stripe || !elements) return;\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      let result;\r\n\r\n      if (type === 'subscription' || type === 'paymentIntent') {\r\n        result = await stripe.confirmPayment({\r\n          elements,\r\n          confirmParams: {\r\n            return_url: returnUrl,\r\n          },\r\n        });\r\n      } else {\r\n        result = await stripe.confirmSetup({\r\n          elements,\r\n          confirmParams: {\r\n            return_url: returnUrl,\r\n          },\r\n        });\r\n      }\r\n\r\n      // don't show validation error as it will be shown already by stripe payment element\r\n      if (result.error?.type !== 'validation_error' && result.error?.message) {\r\n        setErrorMessage(result.error.message);\r\n      }\r\n\r\n    } catch { }\r\n\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div\r\n        ref={paymentElementRef}\r\n        className={clsx('min-h-[303px]', !stripeIsEnabled && 'hidden')}\r\n      >\r\n        {stripeIsEnabled && <StripeSkeleton />}\r\n      </div>\r\n      {errorMessage && !isSubmitting && (\r\n        <div className=\"mt-20 text-danger\">{errorMessage}</div>\r\n      )}\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        size=\"md\"\r\n        className=\"mt-40 w-full\"\r\n        type=\"submit\"\r\n        disabled={isSubmitting || !stripeIsReady}\r\n      >\r\n        {submitLabel}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction StripeSkeleton() {\r\n  return (\r\n    <Fragment>\r\n      <Skeleton className=\"mb-20 h-30\" />\r\n      <Skeleton className=\"mb-20 h-30\" />\r\n      <Skeleton className=\"mb-20 h-30\" />\r\n      <Skeleton className=\"h-30\" />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {Link, To} from 'react-router';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {TaskAltIcon} from '@ui/icons/material/TaskAlt';\r\nimport {ErrorIcon} from '@ui/icons/material/Error';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Skeleton} from '@ui/skeleton/skeleton';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\n\r\nexport interface BillingRedirectMessageConfig {\r\n  message: MessageDescriptor;\r\n  status: 'success' | 'error';\r\n  link: To;\r\n  buttonLabel: MessageDescriptor;\r\n}\r\n\r\ninterface BillingRedirectMessageProps {\r\n  config?: BillingRedirectMessageConfig;\r\n}\r\nexport function BillingRedirectMessage({config}: BillingRedirectMessageProps) {\r\n  return (\r\n    <AnimatePresence initial={false} mode=\"wait\">\r\n      <div className=\"mt-80\">\r\n        {config ? (\r\n          <m.div\r\n            className=\"text-center\"\r\n            key=\"payment-status\"\r\n            {...opacityAnimation}\r\n          >\r\n            {config.status === 'success' ? (\r\n              <TaskAltIcon className=\"text-6xl text-positive\" />\r\n            ) : (\r\n              <ErrorIcon className=\"text-6xl text-danger\" />\r\n            )}\r\n            <div className=\"mt-30 text-2xl font-semibold\">\r\n              <Trans {...config.message} />\r\n            </div>\r\n            <Button\r\n              variant=\"flat\"\r\n              color=\"primary\"\r\n              className=\"mt-30 w-full\"\r\n              size=\"md\"\r\n              elementType={Link}\r\n              to={config.link}\r\n            >\r\n              <Trans {...config.buttonLabel} />\r\n            </Button>\r\n          </m.div>\r\n        ) : (\r\n          <LoadingSkeleton key=\"loading-skeleton\" />\r\n        )}\r\n      </div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nfunction LoadingSkeleton() {\r\n  return (\r\n    <m.div\r\n      className=\"max-w-280 text-center\"\r\n      key=\"loading-skeleton\"\r\n      {...opacityAnimation}\r\n    >\r\n      <Skeleton size=\"w-50 h-50\" variant=\"rect\" />\r\n      <Skeleton className=\"mt-30 text-2xl\" />\r\n      <Skeleton size=\"h-42\" className=\"mt-30\" />\r\n    </m.div>\r\n  );\r\n}\r\n"],"names":["V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","findScript","scripts","i","script","injectScript","params","queryString","headOrBody","registerWrapper","stripe","startTime","stripePromise","loadScript","resolve","reject","error","initStripe","maybeStripe","args","stripePromise$1","loadCalled","err","loadStripe","_len","_key","useStripe","type","productId","priceId","amount","user","useAuth","isDarkMode","useIsDarkMode","isInitiatedRef","useRef","paymentElementRef","localeCode","useSelectedLocale","setStripe","useState","elements","setElements","site_name","stripe_public_key","enable","useSettings","useEffect","createSetupIntent","createSubscription","createPaymentIntent","clientSecret","apiClient","r","StripeElementsForm","submitLabel","returnUrl","stripeIsEnabled","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","stripeIsReady","handleSubmit","e","result","_a","_b","jsxs","jsx","clsx","StripeSkeleton","Button","Fragment","Skeleton","BillingRedirectMessage","config","AnimatePresence","m","opacityAnimation","TaskAltIcon","ErrorIcon","Trans","Link","LoadingSkeleton"],"mappings":"gMAAA,IAAIA,EAAS,2BACTC,EAAe,4CACfC,EAA0B,mJAC1BC,EAAa,UAAsB,CAGrC,QAFIC,EAAU,SAAS,iBAAiB,gBAAiB,OAAOJ,EAAQ,IAAK,CAAC,EAErEK,EAAI,EAAGA,EAAID,EAAQ,OAAQC,IAAK,CACvC,IAAIC,EAASF,EAAQC,CAAC,EAEtB,GAAKJ,EAAa,KAAKK,EAAO,GAAG,EAIjC,OAAOA,CACR,CAED,OAAO,IACT,EAEIC,EAAe,SAAsBC,EAAQ,CAC/C,IAAIC,EAAcD,GAAU,CAACA,EAAO,qBAAuB,8BAAgC,GACvFF,EAAS,SAAS,cAAc,QAAQ,EAC5CA,EAAO,IAAM,GAAG,OAAON,CAAM,EAAE,OAAOS,CAAW,EACjD,IAAIC,EAAa,SAAS,MAAQ,SAAS,KAE3C,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,6EAA6E,EAG/F,OAAAA,EAAW,YAAYJ,CAAM,EACtBA,CACT,EAEIK,EAAkB,SAAyBC,EAAQC,EAAW,CAC5D,CAACD,GAAU,CAACA,EAAO,kBAIvBA,EAAO,iBAAiB,CACtB,KAAM,YACN,QAAS,SACT,UAAWC,CACf,CAAG,CACH,EAEIC,EAAgB,KAChBC,EAAa,SAAoBP,EAAQ,CAE3C,OAAIM,IAAkB,OAItBA,EAAgB,IAAI,QAAQ,SAAUE,EAASC,EAAQ,CACrD,GAAI,OAAO,OAAW,KAAe,OAAO,SAAa,IAAa,CAGpED,EAAQ,IAAI,EACZ,MACD,CAMD,GAJI,OAAO,QAAUR,GACnB,QAAQ,KAAKN,CAAuB,EAGlC,OAAO,OAAQ,CACjBc,EAAQ,OAAO,MAAM,EACrB,MACD,CAED,GAAI,CACF,IAAIV,EAASH,IAETG,GAAUE,EACZ,QAAQ,KAAKN,CAAuB,EAC1BI,IACVA,EAASC,EAAaC,CAAM,GAG9BF,EAAO,iBAAiB,OAAQ,UAAY,CACtC,OAAO,OACTU,EAAQ,OAAO,MAAM,EAErBC,EAAO,IAAI,MAAM,yBAAyB,CAAC,CAErD,CAAO,EACDX,EAAO,iBAAiB,QAAS,UAAY,CAC3CW,EAAO,IAAI,MAAM,0BAA0B,CAAC,CACpD,CAAO,CACF,OAAQC,EAAO,CACdD,EAAOC,CAAK,EACZ,MACD,CACL,CAAG,GACMJ,CACT,EACIK,EAAa,SAAoBC,EAAaC,EAAMR,EAAW,CACjE,GAAIO,IAAgB,KAClB,OAAO,KAGT,IAAIR,EAASQ,EAAY,MAAM,OAAWC,CAAI,EAC9C,OAAAV,EAAgBC,EAAQC,CAAS,EAC1BD,CACT,EAIIU,EAAkB,QAAQ,QAAS,EAAC,KAAK,UAAY,CACvD,OAAOP,EAAW,IAAI,CACxB,CAAC,EACGQ,EAAa,GACjBD,EAAgB,MAAS,SAAUE,EAAK,CACjCD,GACH,QAAQ,KAAKC,CAAG,CAEpB,CAAC,EACE,IAACC,EAAa,UAAsB,CACrC,QAASC,EAAO,UAAU,OAAQL,EAAO,IAAI,MAAMK,CAAI,EAAGC,EAAO,EAAGA,EAAOD,EAAMC,IAC/EN,EAAKM,CAAI,EAAI,UAAUA,CAAI,EAG7BJ,EAAa,GACb,IAAIV,EAAY,KAAK,MACrB,OAAOS,EAAgB,KAAK,SAAUF,EAAa,CACjD,OAAOD,EAAWC,EAAaC,EAAMR,CAAS,CAClD,CAAG,CACH,EChHO,SAASe,EAAU,CAAC,KAAAC,EAAM,UAAAC,EAAW,QAAAC,EAAQ,OAAAC,GAAyB,CACrE,KAAA,CAAC,KAAAC,GAAQC,IACTC,EAAaC,IACbC,EAAiBC,SAAgB,EAAK,EACtCC,EAAoBD,SAAuB,IAAI,EAC/C,CAAC,WAAAE,GAAcC,IACf,CAAC7B,EAAQ8B,CAAS,EAAIC,WAAwB,IAAI,EAClD,CAACC,EAAUC,CAAW,EAAIF,WAAgC,IAAI,EAC9D,CACJ,SAAU,CAAC,UAAAG,CAAS,EACpB,QAAS,CACP,kBAAAC,EACA,OAAQ,CAAC,OAAAC,CAAM,CACjB,GACEC,EAAY,EAEhBC,OAAAA,EAAAA,UAAU,IAAM,CACV,CAACF,GAAU,CAACD,GAAqBV,EAAe,UAEpD,QAAQ,IAAI,CAEVZ,EAAWsB,EAAmB,CAC5B,WAAY,aACZ,OAAQP,CAAA,CACT,EAEDX,IAAS,cACLsB,EACA,EAAAtB,IAAS,eACTuB,EAAmBtB,EAAYC,CAAO,EACtCsB,EAAoBrB,CAAO,CAAA,CAEhC,EAAE,KAAK,CAAC,CAACpB,EAAQ,CAAC,aAAA0C,CAAa,CAAA,IAAM,CAChC1C,GAAAA,GAAU2B,EAAkB,QAAS,CACjCK,MAAAA,EAAWhC,EAAO,SAAS,CAC/B,aAAA0C,EACA,WAAY,CACV,MAAOnB,EAAa,QAAU,QAChC,CAAA,CACD,EAGsBS,EAAS,OAAO,UAAW,CAChD,SAAU,CAAC,KAAME,CAAS,EAC1B,MAAO,CAAC,KAAM,OAAO,EACrB,OAAQ,CACN,eAAgB,CACd,QAAS,MACX,CACF,EACA,cAAe,CACb,eAAgB,CACd,MAAOb,GAAA,YAAAA,EAAM,KACf,CACF,CAAA,CACD,EACc,MAAMM,EAAkB,OAAO,EAE9CG,EAAU9B,CAAM,EAChBiC,EAAYD,CAAQ,CACtB,CAAA,CACD,EAEDP,EAAe,QAAU,GAAA,EACxB,CACDP,EACAiB,EACAC,EACAb,EACAK,EACAM,EACAjB,EACAI,GAAA,YAAAA,EAAM,KAAA,CACP,EAEM,CACL,OAAArB,EACA,SAAAgC,EACA,kBAAAL,EACA,gBAAiBQ,GAAqB,MAAQC,CAAA,CAElD,CAEA,SAASG,GAAqD,CAC5D,OAAOI,EAAU,KAAK,oCAAoC,EAAE,KAAKC,GAAKA,EAAE,IAAI,CAC9E,CAEA,SAASJ,EACPtB,EACAC,EACiC,CAC1B,OAAAwB,EACJ,KAAK,6CAA8C,CAClD,WAAYzB,EACZ,SAAUC,CACX,CAAA,EACA,KAAKyB,GAAKA,EAAE,IAAI,CACrB,CAEA,SAASH,EAAoBrB,EAAiD,CACrE,OAAAuB,EACJ,KAAK,uCAAwC,CAC5C,OAAAvB,CACD,CAAA,EACA,KAAKwB,GAAKA,EAAE,IAAI,CACrB,CCzGO,SAASC,GAAmB,CACjC,UAAA3B,EACA,QAAAC,EACA,KAAAF,EAAO,eACP,YAAA6B,EACA,UAAAC,EACA,OAAA3B,CACF,EAA4B,CAC1B,KAAM,CAAE,OAAApB,EAAQ,SAAAgC,EAAU,kBAAAL,EAAmB,gBAAAqB,CAAA,EAAoBhC,EAAU,CACzE,KAAAC,EACA,UAAAC,EACA,QAAAC,EACA,OAAAC,CAAA,CACD,EACK,CAAC6B,EAAcC,CAAe,EAAInB,WAAwB,IAAI,EAC9D,CAACoB,EAAcC,CAAe,EAAIrB,WAAS,EAAK,EAGhDsB,EACJ,CAACL,GAAoBhB,GAAY,MAAQhC,GAAU,KAE/CsD,EAAiC,MAAMC,GAAK,SAI5C,GAHJA,EAAE,eAAe,EAGb,GAACvD,GAAU,CAACgC,GAEhB,CAAAoB,EAAgB,EAAI,EAEhB,GAAA,CACE,IAAAI,EAEAvC,IAAS,gBAAkBA,IAAS,gBAC7BuC,EAAA,MAAMxD,EAAO,eAAe,CACnC,SAAAgC,EACA,cAAe,CACb,WAAYe,CACd,CAAA,CACD,EAEQS,EAAA,MAAMxD,EAAO,aAAa,CACjC,SAAAgC,EACA,cAAe,CACb,WAAYe,CACd,CAAA,CACD,IAICU,EAAAD,EAAO,QAAP,YAAAC,EAAc,QAAS,sBAAsBC,EAAAF,EAAO,QAAP,MAAAE,EAAc,UAC7CR,EAAAM,EAAO,MAAM,OAAO,CACtC,MAEM,CAAE,CAEVJ,EAAgB,EAAK,EAAA,EAIrB,OAAAO,EAAA,KAAC,OAAK,CAAA,SAAUL,EACd,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAKjC,EACL,UAAWkC,EAAK,gBAAiB,CAACb,GAAmB,QAAQ,EAE5D,SAAAA,SAAoBc,EAAe,CAAA,CAAA,CAAA,CACtC,EACCb,GAAgB,CAACE,SACf,MAAI,CAAA,UAAU,oBAAqB,SAAaF,EAAA,EAEnDW,EAAA,IAACG,EAAA,CACC,QAAQ,OACR,MAAM,UACN,KAAK,KACL,UAAU,eACV,KAAK,SACL,SAAUZ,GAAgB,CAACE,EAE1B,SAAAP,CAAA,CACH,CACF,CAAA,CAAA,CAEJ,CAEA,SAASgB,GAAiB,CACxB,cACGE,WACC,CAAA,SAAA,CAACJ,EAAAA,IAAAK,EAAA,CAAS,UAAU,YAAa,CAAA,EACjCL,EAAAA,IAACK,EAAS,CAAA,UAAU,YAAa,CAAA,EACjCL,EAAAA,IAACK,EAAS,CAAA,UAAU,YAAa,CAAA,EACjCL,EAAAA,IAACK,EAAS,CAAA,UAAU,MAAO,CAAA,CAC7B,CAAA,CAAA,CAEJ,CCtFgB,SAAAC,GAAuB,CAAC,OAAAC,GAAsC,CAE1E,OAAAP,EAAAA,IAACQ,EAAgB,CAAA,QAAS,GAAO,KAAK,OACpC,SAACR,EAAA,IAAA,MAAA,CAAI,UAAU,QACZ,SACCO,EAAAR,EAAA,KAACU,EAAE,IAAF,CACC,UAAU,cAET,GAAGC,EAEH,SAAA,CAAOH,EAAA,SAAW,UACjBP,EAAAA,IAACW,EAAY,CAAA,UAAU,wBAAyB,CAAA,EAEhDX,EAAAA,IAACY,EAAU,CAAA,UAAU,sBAAuB,CAAA,EAE9CZ,EAAAA,IAAC,OAAI,UAAU,+BACb,eAACa,EAAO,CAAA,GAAGN,EAAO,OAAA,CAAS,CAC7B,CAAA,EACAP,EAAA,IAACG,EAAA,CACC,QAAQ,OACR,MAAM,UACN,UAAU,eACV,KAAK,KACL,YAAaW,EACb,GAAIP,EAAO,KAEX,SAACP,EAAA,IAAAa,EAAA,CAAO,GAAGN,EAAO,WAAa,CAAA,CAAA,CACjC,CAAA,CAAA,EApBI,gBAAA,EAuBNP,EAAAA,IAACe,GAAoB,CAAA,EAAA,kBAAmB,EAE5C,CACF,CAAA,CAEJ,CAEA,SAASA,IAAkB,CAEvB,OAAAhB,EAAA,KAACU,EAAE,IAAF,CACC,UAAU,wBAET,GAAGC,EAEJ,SAAA,CAAAV,EAAA,IAACK,EAAS,CAAA,KAAK,YAAY,QAAQ,OAAO,EAC1CL,EAAAA,IAACK,EAAS,CAAA,UAAU,gBAAiB,CAAA,EACpCL,EAAA,IAAAK,EAAA,CAAS,KAAK,OAAO,UAAU,QAAQ,CAAA,CAAA,EALpC,kBAAA,CAQV","x_google_ignoreList":[0]}