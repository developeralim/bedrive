{"version":3,"file":"drive-routes.lazy-76d99b29.js","sources":["../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","../../../resources/client/drive/drive-query-keys.ts","../../../resources/client/drive/layout/sidebar/storage-summary/storage-summary.ts","../../../common/foundation/resources/client/ui/library/progress/meter.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.tsx","../../../common/foundation/resources/client/workspace/requests/create-workspace.ts","../../../common/foundation/resources/client/workspace/new-workspace-dialog.tsx","../../../common/foundation/resources/client/workspace/requests/workspace-with-members.ts","../../../common/foundation/resources/client/workspace/requests/invite-members.ts","../../../common/foundation/resources/client/workspace/requests/resend-invite.ts","../../../common/foundation/resources/client/workspace/requests/change-role.ts","../../../common/foundation/resources/client/workspace/requests/remove-member.ts","../../../common/foundation/resources/client/workspace/leave-workspace-confirmation.tsx","../../../common/foundation/resources/client/ui/library/utils/string/is-email.ts","../../../common/foundation/resources/client/workspace/workspace-members-dialog.tsx","../../../common/foundation/resources/client/workspace/requests/update-workspace.ts","../../../common/foundation/resources/client/workspace/rename-workspace-dialog.tsx","../../../common/foundation/resources/client/workspace/requests/delete-workspace.ts","../../../common/foundation/resources/client/billing/upgrade/policy-fail-message.tsx","../../../common/foundation/resources/client/workspace/workspace-selector.tsx","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/drive-page/drive-page.tsx","../../../resources/client/drive/menu-positions.ts","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.ts","../../../resources/client/drive/drive-store.ts","../../../resources/client/drive/files/queries/use-move-entries.ts","../../../resources/client/drive/uploading/use-drive-upload-queue.ts","../../../resources/client/drive/files/utils/can-move-entries-into.ts","../../../resources/client/drive/files/use-folder-drop-action.ts","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.ts","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.ts","../../../common/foundation/resources/client/ui/library/tree/tree-context.tsx","../../../common/foundation/resources/client/ui/library/tree/render-tree.ts","../../../common/foundation/resources/client/ui/library/tree/tree.tsx","../../../common/foundation/resources/client/ui/library/tree/tree-label.tsx","../../../common/foundation/resources/client/ui/library/tree/tree-item.tsx","../../../resources/client/drive/layout/sidebar/folder-tree.tsx","../../../resources/client/drive/files/queries/use-delete-entries.ts","../../../resources/client/drive/layout/sidebar/sidebar-menu.tsx","../../../resources/client/drive/layout/create-new-button.tsx","../../../resources/client/drive/layout/sidebar/sidebar.tsx","../../../resources/client/drive/files/queries/use-paginated-entries.ts","../../../resources/client/drive/search/drive-search-filters.ts","../../../resources/client/drive/search/search-filter-list.tsx","../../../common/foundation/resources/client/ui/library/interactions/utils/restrict-resizable-within-boundary.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selectable.ts","../../../common/foundation/resources/client/ui/library/interactions/utils/rects-intersect.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selection-box.ts","../../../resources/client/drive/shareable-link/queries/create-shareable-link.ts","../../../resources/client/drive/files/queries/use-add-star-to-entries.ts","../../../resources/client/drive/files/queries/use-remove-star-from-entries.ts","../../../resources/client/drive/files/queries/use-duplicate-entries.ts","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.ts","../../../resources/client/drive/files/queries/use-restore-entries.ts","../../../resources/client/drive/entry-actions/use-entry-actions.ts","../../../resources/client/drive/entry-actions/use-drive-page-actions.ts","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.tsx","../../../resources/client/drive/files/queries/use-entries.ts","../../../resources/client/drive/files/use-selected-entries.ts","../../../resources/client/drive/entry-actions/entry-action-list.tsx","../../../resources/client/drive/files/drive-context-menu.tsx","../../../common/foundation/resources/client/ui/library/utils/hooks/is-touch-device.ts","../../../resources/client/drive/file-view/use-file-view-dnd.ts","../../../resources/client/drive/file-view/file-table/file-table-row.tsx","../../../resources/client/drive/file-view/use-view-item-action-handler.ts","../../../resources/client/drive/file-view/file-table/file-table-columns.tsx","../../../resources/client/drive/file-view/file-table/file-table.tsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid.tsx","../../../resources/client/drive/layout/sorting/available-sorts.ts","../../../resources/client/drive/layout/sorting/entries-sort-button.tsx","../../../resources/client/drive/layout/sorting/drive-sort-button.tsx","../../../resources/client/drive/files/queries/use-folder-path.ts","../../../resources/client/drive/page-breadcrumbs.tsx","../../../common/foundation/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/drive/drop-target-mask.tsx","../../../resources/client/drive/file-view/file-view.tsx","../../../resources/client/drive/uploading/upload-queue-item.tsx","../../../resources/client/drive/uploading/upload-queue.tsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.tsx","../../../common/foundation/resources/client/tags/use-taggable-tags.ts","../../../common/foundation/resources/client/tags/use-detach-tag-from-taggables.ts","../../../common/foundation/resources/client/tags/use-tags.ts","../../../common/foundation/resources/client/tags/use-attach-tag-to-taggables.ts","../../../common/foundation/resources/client/tags/manage-tags-dialog.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-tags.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.tsx","../../../resources/client/drive/details-sidebar/details-sidebar.tsx","../../../resources/client/drive/files/queries/use-rename-entry.ts","../../../resources/client/drive/files/dialogs/rename-entry-dialog.tsx","../../../resources/client/drive/files/queries/create-folder.ts","../../../resources/client/drive/files/dialogs/new-folder-dialog.tsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.tsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.ts","../../../resources/client/drive/files/drive-entry.ts","../../../resources/client/drive/share-dialog/permission-selector.tsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.ts","../../../resources/client/drive/share-dialog/member-list.tsx","../../../resources/client/drive/share-dialog/share-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.ts","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.ts","../../../common/foundation/resources/client/ui/library/utils/string/random-string.ts","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.tsx","../../../resources/client/drive/share-dialog/share-dialog.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search.ts","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders.ts","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.tsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.tsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.tsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.tsx","../../../resources/client/drive/search/navbar-search.tsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/use-drag-monitor.ts","../../../resources/client/drive/file-view/entry-drag-preview.tsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-content-header.tsx","../../../resources/client/drive/layout/drive-content-header.tsx","../../../resources/client/drive/layout/drive-layout.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.ts","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.ts","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.tsx"],"sourcesContent":["// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior()\n      },\n      notifyOptions\n    );\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const result = super.createResult(query, options);\n    const { isFetching, isRefetching } = result;\n    const isFetchingNextPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"forward\";\n    const isFetchingPreviousPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"backward\";\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","import type {DriveApiIndexParams} from './files/queries/use-paginated-entries';\r\nimport type {UserFoldersApiParams} from './files/queries/use-folders';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {Key} from 'react';\r\n\r\nexport const DriveQueryKeys = {\r\n  fetchEntries: (params?: DriveApiIndexParams) => {\r\n    const key: ('drive-entries' | DriveApiIndexParams)[] = ['drive-entries'];\r\n    if (params) key.push(params);\r\n    return key;\r\n  },\r\n  fetchUserFolders(params?: UserFoldersApiParams) {\r\n    const key: (string | UserFoldersApiParams)[] = ['user-folders'];\r\n    if (params) {\r\n      key.push(params);\r\n    }\r\n    return key;\r\n  },\r\n  fetchShareableLink: (params?: {hash?: string; sort?: string}) => {\r\n    const key: (string | object)[] = ['shareable-link'];\r\n    if (params) {\r\n      key.push(params);\r\n    }\r\n    return key;\r\n  },\r\n  fetchFolderPath(\r\n    hash?: string,\r\n    params?: Record<string, string | number | null>,\r\n  ) {\r\n    const key: (string | any)[] = ['folder-path'];\r\n    if (hash) {\r\n      key.push(hash);\r\n    }\r\n    if (params) {\r\n      key.push(params);\r\n    }\r\n    return key;\r\n  },\r\n  fetchEntryShareableLink: (entryId: number) => {\r\n    return ['file-entries', entryId, 'shareable-link'];\r\n  },\r\n  fetchFileEntry: (id?: number) => {\r\n    const key: Key[] = ['drive/file-entries/model'];\r\n    if (id) key.push(id);\r\n    return key;\r\n  },\r\n  fetchStorageSummary: ['storage-summary'],\r\n};\r\n\r\nexport function invalidateEntryQueries() {\r\n  return Promise.all([\r\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchEntries()}),\r\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFolderPath()}),\r\n    queryClient.invalidateQueries({\r\n      queryKey: DriveQueryKeys.fetchUserFolders(),\r\n    }),\r\n    // fetching model for single file entry in \"useFileEntry\"\r\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFileEntry()}),\r\n  ]);\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveQueryKeys} from '../../../drive-query-keys';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\n\r\nexport interface FetchStorageSummaryResponse extends BackendResponse {\r\n  used: number;\r\n  available: number;\r\n}\r\n\r\nexport function useStorageSummary() {\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchStorageSummary,\r\n    queryFn: fetchStorageSummary,\r\n    select: formatResponse,\r\n  });\r\n}\r\n\r\nfunction fetchStorageSummary(): Promise<FetchStorageSummaryResponse> {\r\n  return apiClient.get(`user/space-usage`).then(response => response.data);\r\n}\r\n\r\nfunction formatResponse(response: FetchStorageSummaryResponse) {\r\n  // null means that user has unlimited space available\r\n  const percentage =\r\n    response.available === null\r\n      ? 0\r\n      : (response.used * 100) / response.available;\r\n\r\n  return {\r\n    usedFormatted: prettyBytes(response.used, 2),\r\n    availableFormatted: prettyBytes(response.available, 0),\r\n    percentage,\r\n    used: response.used,\r\n    available: response.available,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport {\r\n  ProgressBarBase,\r\n  ProgressBarBaseProps\r\n} from '@ui/progress/progress-bar-base';\r\n\r\nexport function Meter(props: ProgressBarBaseProps) {\r\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\r\n}\r\n","import React from 'react';\r\nimport {useStorageSummary} from './storage-summary';\r\nimport {StorageIcon} from '@ui/icons/material/Storage';\r\nimport {Meter} from '@ui/progress/meter';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport clsx from 'clsx';\r\n\r\nexport function StorageMeter() {\r\n  const {isLoading, data} = useStorageSummary();\r\n\r\n  // prevent translation placeholders from showing if summary is not loaded yet\r\n  const label = (\r\n    <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\r\n      <Trans\r\n        message=\":used of :available used\"\r\n        values={{\r\n          used: data?.usedFormatted,\r\n          available: data?.availableFormatted,\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n  return (\r\n    <div className=\"mt-24 flex items-start gap-16 border-t pl-24 pt-24\">\r\n      <StorageIcon className=\"-mt-4 icon-md\" />\r\n      <Meter\r\n        className=\"max-w-144 flex-auto\"\r\n        size=\"xs\"\r\n        value={data?.percentage}\r\n        label={label}\r\n        showValueLabel={false}\r\n        labelPosition=\"bottom\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {Workspace} from '../types/workspace';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {message} from '@ui/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  workspace: Workspace;\r\n}\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\n\r\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => createWorkspace(props),\r\n    onSuccess: () => {\r\n      toast(message('Created workspace'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction createWorkspace(props: Props): Promise<Response> {\r\n  return apiClient.post('workspace', props).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Form} from '@ui/forms/form';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useCreateWorkspace} from './requests/create-workspace';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function NewWorkspaceDialog() {\r\n  const form = useForm<{name: string}>();\r\n  const {formId, close} = useDialogContext();\r\n  const createWorkspace = useCreateWorkspace(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Create workspace\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={() => {\r\n            createWorkspace.mutate(form.getValues(), {\r\n              onSuccess: response => {\r\n                close(response.workspace.id);\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            autoFocus\r\n            label={<Trans message=\"Workspace name\" />}\r\n            minLength={3}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"text\" onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={createWorkspace.isPending}\r\n        >\r\n          <Trans message=\"Create\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {Workspace} from '../types/workspace';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient} from '../../http/query-client';\r\n\r\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\r\n  workspace: Workspace;\r\n}\r\n\r\nfunction fetchWorkspaceWithMembers(\r\n  workspaceId: number,\r\n): Promise<FetchWorkspaceWithMembersResponse> {\r\n  return apiClient\r\n    .get(`workspace/${workspaceId}`)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useWorkspaceWithMembers(workspaceId: number) {\r\n  return useQuery({\r\n    queryKey: WorkspaceQueryKeys.workspaceWithMembers(workspaceId),\r\n    queryFn: () => fetchWorkspaceWithMembers(workspaceId),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {WorkspaceInvite} from '../types/workspace-invite';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  invites: WorkspaceInvite[];\r\n}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  emails: string[];\r\n  roleId: number;\r\n}\r\n\r\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`workspace/${workspaceId}/invite`, other)\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useInviteMembers() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => InviteMembers(props),\r\n    onSuccess: (response, props) => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\r\n      });\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {WorkspaceInvite} from '../types/workspace-invite';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  invite: WorkspaceInvite;\r\n}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  inviteId: string;\r\n}\r\n\r\nfunction ResendInvite({\r\n  workspaceId,\r\n  inviteId,\r\n  ...other\r\n}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useResendInvite() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => ResendInvite(props),\r\n    onSuccess: () => {\r\n      toast('Invite sent');\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {WorkspaceMember} from '../types/workspace-member';\r\nimport {WorkspaceInvite} from '../types/workspace-invite';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  roleId: number;\r\n}\r\n\r\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\r\n  const modelType = member.model_type;\r\n  const memberId =\r\n    member.model_type === 'invite' ? member.id : member.member_id;\r\n  return apiClient\r\n    .post(\r\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\r\n      other,\r\n    )\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useChangeRole() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => ChangeRole(props),\r\n    onSuccess: (response, props) => {\r\n      toast(message('Role changed'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\r\n      });\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {useAuth} from '../../auth/use-auth';\r\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\r\nimport {PersonalWorkspace} from '../user-workspaces';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  memberId: number | string;\r\n  memberType: 'invite' | 'member';\r\n}\r\n\r\nfunction removeMember({\r\n  workspaceId,\r\n  memberId,\r\n  memberType,\r\n}: Props): Promise<Response> {\r\n  const endpoint =\r\n    memberType === 'invite'\r\n      ? `workspace/invite/${memberId}`\r\n      : `workspace/${workspaceId}/member/${memberId}`;\r\n  return apiClient.delete(endpoint).then(r => r.data);\r\n}\r\n\r\nexport function useRemoveMember() {\r\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\r\n  const {user} = useAuth();\r\n  return useMutation({\r\n    mutationFn: (props: Props) => removeMember(props),\r\n    onSuccess: (response, props) => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\r\n      });\r\n\r\n      // if user left workspace that is currently active, switch to personal workspace\r\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\r\n        setWorkspaceId(PersonalWorkspace.id);\r\n      }\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\ninterface Props {\r\n  onConfirm?: () => void;\r\n  isLoading?: boolean;\r\n}\r\nexport function LeaveWorkspaceConfirmation({onConfirm, isLoading}: Props) {\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Leave workspace\" />}\r\n      isLoading={isLoading}\r\n      onConfirm={onConfirm}\r\n      body={\r\n        <div>\r\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\r\n          <div className=\"mt-8 font-semibold\">\r\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\r\n          </div>\r\n        </div>\r\n      }\r\n      confirm={<Trans message=\"Leave\" />}\r\n    />\r\n  );\r\n}\r\n","const matcher =\r\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n\r\nexport function isEmail(string?: string): boolean {\r\n  if (!string) return false;\r\n  if (string.length > 320) return false;\r\n  return matcher.test(string);\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {Workspace} from './types/workspace';\r\nimport {GroupIcon} from '@ui/icons/material/Group';\r\nimport {WorkspaceMember} from './types/workspace-member';\r\nimport {useAuth} from '../auth/use-auth';\r\nimport {\r\n  ChipField,\r\n  ChipValue,\r\n} from '@ui/forms/input-field/chip-field/chip-field';\r\nimport {useValueLists} from '../http/value-lists';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\r\nimport {useInviteMembers} from './requests/invite-members';\r\nimport {WorkspaceInvite} from './types/workspace-invite';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {useResendInvite} from './requests/resend-invite';\r\nimport {ButtonSize} from '@ui/buttons/button-size';\r\nimport {useChangeRole} from './requests/change-role';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {useRemoveMember} from './requests/remove-member';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {ExitToAppIcon} from '@ui/icons/material/ExitToApp';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\r\nimport {isEmail} from '@ui/utils/string/is-email';\r\nimport {Avatar} from '@ui/avatar/avatar';\r\n\r\ninterface WorkspaceMembersDialogProps {\r\n  workspace: Workspace;\r\n}\r\nexport function WorkspaceMembersDialog({\r\n  workspace,\r\n}: WorkspaceMembersDialogProps) {\r\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\r\n  return (\r\n    <Dialog size=\"lg\">\r\n      <DialogHeader>\r\n        <Trans message=\"Manage workspace members\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        {isLoading ? (\r\n          <div className=\"flex min-h-[238px] items-center justify-center\">\r\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\r\n          </div>\r\n        ) : (\r\n          <Manager workspace={data!.workspace} />\r\n        )}\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface ManagerProps {\r\n  workspace: Workspace;\r\n}\r\nfunction Manager({workspace}: ManagerProps) {\r\n  const {user} = useAuth();\r\n  const can = usePermissions(workspace);\r\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\r\n    ...(workspace.members || []),\r\n    ...(workspace.invites || []),\r\n  ];\r\n  const shouldHideOtherMembers = !can.update && !can.delete;\r\n\r\n  return (\r\n    <div>\r\n      {can.invite && <InviteChipField workspace={workspace} />}\r\n      <div className=\"mb-14 flex items-center gap-10 text-base\">\r\n        <GroupIcon className=\"icon-sm\" />\r\n        <Trans\r\n          message=\"Members of `:workspace`\"\r\n          values={{workspace: workspace.name}}\r\n        />\r\n      </div>\r\n      <AnimatePresence initial={false}>\r\n        {members.map(member => {\r\n          if (shouldHideOtherMembers && member.id !== user?.id) {\r\n            return null;\r\n          }\r\n          return (\r\n            <MemberListItem\r\n              key={`${member.model_type}.${member.id}`}\r\n              workspace={workspace}\r\n              member={member}\r\n            />\r\n          );\r\n        })}\r\n        {shouldHideOtherMembers && (\r\n          <div className=\"text-muted\">\r\n            <Trans\r\n              message=\"And [one one other member|:count other members]\"\r\n              values={{count: members.length}}\r\n            />\r\n          </div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MemberListItemProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  workspace: Workspace;\r\n}\r\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\r\n  return (\r\n    <m.div\r\n      initial={{x: '-100%', opacity: 0}}\r\n      animate={{x: 0, opacity: 1}}\r\n      exit={{x: '100%', opacity: 0}}\r\n      transition={{type: 'tween', duration: 0.125}}\r\n      className=\"mb-20 flex items-start gap-14 text-sm\"\r\n      key={`${member.model_type}.${member.id}`}\r\n    >\r\n      <Avatar\r\n        className=\"flex-shrink-0\"\r\n        size=\"lg\"\r\n        circle\r\n        label={member.name}\r\n        src={member.image}\r\n        fallback=\"initials\"\r\n      />\r\n      <div className=\"min-w-0 flex-auto items-center justify-between gap-14 md:flex\">\r\n        <div className=\"mb-10 overflow-hidden md:mb-0 md:mr-10\">\r\n          <div className=\"flex items-center justify-start gap-6\">\r\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\r\n              {member.name}\r\n            </div>\r\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\r\n          </div>\r\n          <div className=\"text-muted\">{member.email}</div>\r\n        </div>\r\n        <MemberActions workspace={workspace} member={member} />\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\nfunction usePermissions(workspace: Workspace) {\r\n  const {user: authUser} = useAuth();\r\n  const response = {update: false, invite: false, delete: false};\r\n  const permissions = ['update', 'invite', 'delete'] as const;\r\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\r\n\r\n  if (authMember) {\r\n    permissions.forEach(permission => {\r\n      response[permission] =\r\n        authMember.is_owner ||\r\n        !!authMember.permissions?.find(\r\n          p => p.name === `workspace_members.${permission}`,\r\n        );\r\n    });\r\n  }\r\n\r\n  return response;\r\n}\r\n\r\ninterface MemberActionsProps {\r\n  workspace: Workspace;\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n}\r\nfunction MemberActions({workspace, member}: MemberActionsProps) {\r\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\r\n  const changeRole = useChangeRole();\r\n  const {user} = useAuth();\r\n\r\n  const can = usePermissions(workspace);\r\n  const isOwner = member.model_type === 'member' && member.is_owner;\r\n  const isCurrentUser =\r\n    member.model_type === 'member' && user?.id === member.id;\r\n\r\n  const roleSelector =\r\n    !can.update || isOwner || isCurrentUser ? (\r\n      <div className=\"ml-auto text-muted first:capitalize\">\r\n        <Trans message={member.role_name} />\r\n      </div>\r\n    ) : (\r\n      <RoleMenuTrigger\r\n        className=\"ml-auto flex-shrink-0\"\r\n        size=\"xs\"\r\n        value={selectedRole}\r\n        isDisabled={changeRole.isPending}\r\n        onChange={roleId => {\r\n          setSelectedRole(roleId);\r\n          changeRole.mutate({\r\n            roleId,\r\n            workspaceId: workspace.id,\r\n            member,\r\n          });\r\n        }}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {roleSelector}\r\n      {!isOwner && (isCurrentUser || can.delete) && (\r\n        <RemoveMemberButton\r\n          type={isCurrentUser ? 'leave' : 'remove'}\r\n          member={member}\r\n          workspace={workspace}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface InviteChipFieldProps {\r\n  workspace: Workspace;\r\n}\r\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\r\n  const {trans} = useTrans();\r\n  const [chips, setChips] = useState<ChipValue[]>([]);\r\n  const allEmailsValid = chips.every(chip => !chip.invalid);\r\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\r\n  const [selectedRole, setSelectedRole] = useState<number>();\r\n  const inviteMembers = useInviteMembers();\r\n  const {data} = useValueLists(['workspaceRoles']);\r\n\r\n  useEffect(() => {\r\n    if (!selectedRole && data?.workspaceRoles?.length) {\r\n      setSelectedRole(data.workspaceRoles[0].id);\r\n    }\r\n  }, [data, selectedRole]);\r\n\r\n  return (\r\n    <div className=\"mb-30\">\r\n      <ChipField\r\n        value={chips}\r\n        onChange={setChips}\r\n        displayWith={displayWith}\r\n        validateWith={chip => {\r\n          const invalid = !isEmail(chip.description);\r\n          return {\r\n            ...chip,\r\n            invalid,\r\n            errorMessage: invalid\r\n              ? trans({message: 'Not a valid email'})\r\n              : undefined,\r\n          };\r\n        }}\r\n        placeholder={trans({message: 'Enter email addresses'})}\r\n        label={<Trans message=\"Invite people\" />}\r\n      />\r\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\r\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\r\n        {chips.length && selectedRole ? (\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            size=\"sm\"\r\n            disabled={inviteMembers.isPending || !allEmailsValid}\r\n            onClick={() => {\r\n              inviteMembers.mutate(\r\n                {\r\n                  emails: chips.map(c => displayWith(c)),\r\n                  roleId: selectedRole,\r\n                  workspaceId: workspace.id,\r\n                },\r\n                {\r\n                  onSuccess: () => {\r\n                    setChips([]);\r\n                  },\r\n                },\r\n              );\r\n            }}\r\n          >\r\n            <Trans message=\"Invite\" />\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface RemoveMemberButtonProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  workspace: Workspace;\r\n  type: 'leave' | 'remove';\r\n}\r\nfunction RemoveMemberButton({\r\n  member,\r\n  workspace,\r\n  type,\r\n}: RemoveMemberButtonProps) {\r\n  const removeMember = useRemoveMember();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          removeMember.mutate({\r\n            workspaceId: workspace.id,\r\n            memberId: member.id,\r\n            memberType: member.model_type,\r\n          });\r\n          if (type === 'leave') {\r\n            close();\r\n            toast(message('Left workspace'));\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"flex-shrink-0 text-muted\"\r\n        disabled={removeMember.isPending}\r\n      >\r\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\r\n      </IconButton>\r\n      {type === 'leave' ? (\r\n        <LeaveWorkspaceConfirmation />\r\n      ) : (\r\n        <RemoveMemberConfirmation member={member} />\r\n      )}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface RemoveMemberConfirmationProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n}\r\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Remove member\" />}\r\n      body={\r\n        <div>\r\n          <Trans\r\n            message=\"Are you sure you want to remove `:name`?\"\r\n            values={{name: member.name}}\r\n          />\r\n          <div className=\"mt-8 font-semibold\">\r\n            <Trans\r\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\r\n              values={{\r\n                name: member.name,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      }\r\n      confirm={<Trans message=\"Remove\" />}\r\n    />\r\n  );\r\n}\r\n\r\ninterface RoleMenuTriggerProps {\r\n  onChange: (value: number) => void;\r\n  value?: number;\r\n  size?: ButtonSize;\r\n  className?: string;\r\n  isDisabled?: boolean;\r\n}\r\nfunction RoleMenuTrigger({\r\n  value,\r\n  onChange,\r\n  size = 'xs',\r\n  className,\r\n  isDisabled,\r\n}: RoleMenuTriggerProps) {\r\n  const {data} = useValueLists(['workspaceRoles']);\r\n  const role = data?.workspaceRoles?.find(r => r.id === value);\r\n  if (!value || !role || !data?.workspaceRoles) return null;\r\n\r\n  return (\r\n    <MenuTrigger\r\n      selectionMode=\"single\"\r\n      selectedValue={value}\r\n      onSelectionChange={newValue => {\r\n        onChange(newValue as number);\r\n      }}\r\n    >\r\n      <Button\r\n        className={className}\r\n        size={size}\r\n        variant=\"flat\"\r\n        color=\"chip\"\r\n        disabled={isDisabled}\r\n        endIcon={<ArrowDropDownIcon />}\r\n      >\r\n        <Trans message={role.name} />\r\n      </Button>\r\n      <Menu>\r\n        {data.workspaceRoles.map(r => (\r\n          <MenuItem value={r.id} key={r.id} description={r.description}>\r\n            <Trans message={r.name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n\r\ninterface MemberDisplayNameAppendProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  workspace: Workspace;\r\n}\r\nfunction MemberDisplayNameAppend({\r\n  member,\r\n  workspace,\r\n}: MemberDisplayNameAppendProps) {\r\n  const {user} = useAuth();\r\n  const can = usePermissions(workspace);\r\n\r\n  if (user?.id === member.id) {\r\n    return (\r\n      <div className=\"font-medium\">\r\n        (<Trans message=\"You\" />)\r\n      </div>\r\n    );\r\n  }\r\n  if (member.model_type === 'invite') {\r\n    return (\r\n      <div className=\"flex items-center gap-4\">\r\n        <div>·</div>\r\n        <div className=\"font-medium\">\r\n          <Trans message=\"Invited\" />\r\n        </div>\r\n        {can.invite ? (\r\n          <>\r\n            <div>·</div>\r\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction ResendInviteDialogTrigger({\r\n  member,\r\n  workspace,\r\n}: MemberDisplayNameAppendProps) {\r\n  const resendInvite = useResendInvite();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          resendInvite.mutate({\r\n            workspaceId: workspace.id,\r\n            inviteId: member.id as string,\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"link\"\r\n        size=\"sm\"\r\n        color=\"primary\"\r\n        disabled={resendInvite.isPending}\r\n      >\r\n        <Trans message=\"Resend invite\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Resend invite\" />}\r\n        body={\r\n          <Trans message=\"Are you sure you want to send this invite again?\" />\r\n        }\r\n        confirm={<Trans message=\"Send\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {Workspace} from '../types/workspace';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {message} from '@ui/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  workspace: Workspace;\r\n}\r\n\r\nexport interface UpdateWorkspacePayload {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction updateWorkspace({\r\n  id,\r\n  ...props\r\n}: UpdateWorkspacePayload): Promise<Response> {\r\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\r\n}\r\n\r\nexport function useUpdateWorkspace(\r\n  form: UseFormReturn<UpdateWorkspacePayload>,\r\n) {\r\n  const {close} = useDialogContext();\r\n  return useMutation({\r\n    mutationFn: (props: UpdateWorkspacePayload) => updateWorkspace(props),\r\n    onSuccess: response => {\r\n      close();\r\n      toast(message('Updated workspace'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(\r\n          response.workspace.id,\r\n        ),\r\n      });\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Form} from '@ui/forms/form';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {\r\n  UpdateWorkspacePayload,\r\n  useUpdateWorkspace,\r\n} from './requests/update-workspace';\r\nimport {Workspace} from './types/workspace';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\ninterface Props {\r\n  workspace: Workspace;\r\n}\r\nexport function RenameWorkspaceDialog({workspace}: Props) {\r\n  const form = useForm<UpdateWorkspacePayload>({\r\n    defaultValues: {id: workspace.id, name: workspace.name},\r\n  });\r\n  const {formId, close} = useDialogContext();\r\n  const updateWorkspace = useUpdateWorkspace(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Rename workspace\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={() => {\r\n            updateWorkspace.mutate(form.getValues());\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            autoFocus\r\n            label={<Trans message=\"Name\" />}\r\n            minLength={3}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"text\" onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={updateWorkspace.isPending}\r\n        >\r\n          <Trans message=\"Rename\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\r\nimport {PersonalWorkspace} from '../user-workspaces';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport interface DeleteWorkspacePayload {\r\n  id: number;\r\n}\r\n\r\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\r\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\r\n}\r\n\r\nexport function useDeleteWorkspace() {\r\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\r\n  return useMutation({\r\n    mutationFn: (props: DeleteWorkspacePayload) => deleteWorkspace(props),\r\n    onSuccess: (r, payload) => {\r\n      toast(message('Deleted workspace'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(payload.id),\r\n      });\r\n\r\n      // if user deleted workspace that is currently active, switch to personal workspace\r\n      if (workspaceId === payload.id) {\r\n        setWorkspaceId(PersonalWorkspace.id);\r\n      }\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport {Link} from 'react-router';\r\nimport {LinkStyle} from '@ui/buttons/external-link';\r\nimport {ReactElement, ReactNode} from 'react';\r\nimport {\r\n  SectionHelper,\r\n  SectionHelperProps,\r\n} from '@common/ui/other/section-helper';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {PolicyFailReason} from '@common/billing/upgrade/policy-fail-reason';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  // plural name in lowercase (e.g. 'projects')\r\n  resourceName?: ReactElement | string;\r\n  reason?: PolicyFailReason;\r\n  size?: SectionHelperProps['size'];\r\n  color?: SectionHelperProps['color'];\r\n  message?: ReactNode;\r\n}\r\nexport function PolicyFailMessage({\r\n  resourceName,\r\n  className,\r\n  size = 'md',\r\n  color = 'bgAlt',\r\n  reason = 'overQuota',\r\n  ...other\r\n}: Props) {\r\n  const message = other.message ?? (\r\n    <MessageText resourceName={resourceName!} reason={reason} />\r\n  );\r\n\r\n  return (\r\n    <SectionHelper\r\n      color={color}\r\n      size={size}\r\n      className={className}\r\n      description={message}\r\n    />\r\n  );\r\n}\r\n\r\ninterface MessageTextProps {\r\n  resourceName: ReactElement | string;\r\n  reason?: PolicyFailReason;\r\n}\r\nfunction MessageText({resourceName, reason}: MessageTextProps) {\r\n  const {billing} = useSettings();\r\n\r\n  if (reason === 'noWorkspacePermission') {\r\n    return (\r\n      <Trans\r\n        message=\"You can't create new :name in this workspace.\"\r\n        values={{name: resourceName}}\r\n      />\r\n    );\r\n  }\r\n\r\n  const upgradeMsgValues = {\r\n    name: resourceName,\r\n    a: (text: ReactNode) => (\r\n      <Link className={LinkStyle} to=\"/pricing\">\r\n        {text}\r\n      </Link>\r\n    ),\r\n  };\r\n\r\n  if (reason === 'overQuota' && billing.enable) {\r\n    return (\r\n      <Trans\r\n        message=\"Your plan is at its maximum number of :name allowed. <a>Upgrade to add more.</a>\"\r\n        values={upgradeMsgValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (reason === 'noPermission' && billing.enable) {\r\n    return (\r\n      <Trans\r\n        message=\"To unlock ability to create :name. <a>Upgrade your plan.</a>\"\r\n        values={upgradeMsgValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <Trans message=\"You don't have permissions to create :name.\" />;\r\n}\r\n","import clsx from 'clsx';\r\nimport {\r\n  cloneElement,\r\n  forwardRef,\r\n  Fragment,\r\n  ReactElement,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport {ButtonBase} from '@ui/buttons/button-base';\r\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\r\nimport {UnfoldMoreIcon} from '@ui/icons/material/UnfoldMore';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\r\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\r\nimport {\r\n  useActiveWorkspace,\r\n  useActiveWorkspaceId,\r\n} from './active-workspace-id-context';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {Workspace} from './types/workspace';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Button, ButtonProps} from '@ui/buttons/button';\r\nimport {CheckIcon} from '@ui/icons/material/Check';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\r\nimport {PersonAddIcon} from '@ui/icons/material/PersonAdd';\r\nimport {DeleteIcon} from '@ui/icons/material/Delete';\r\nimport {ExitToAppIcon} from '@ui/icons/material/ExitToApp';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {useDeleteWorkspace} from './requests/delete-workspace';\r\nimport {useRemoveMember} from './requests/remove-member';\r\nimport {useAuth} from '../auth/use-auth';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\r\nimport {openDialog} from '@ui/overlays/store/dialog-store';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {PolicyFailMessage} from '@common/billing/upgrade/policy-fail-message';\r\n\r\ninterface WorkspaceSelectorProps {\r\n  className?: string;\r\n  onChange?: (id: number) => void;\r\n  trigger?: ReactElement<ButtonProps>;\r\n  placement?: 'top' | 'bottom';\r\n}\r\nexport function WorkspaceSelector({\r\n  onChange,\r\n  className,\r\n  trigger,\r\n  placement = 'top',\r\n}: WorkspaceSelectorProps) {\r\n  const {data: workspaces, isFetched, isFetching} = useUserWorkspaces();\r\n  const {setWorkspaceId} = useActiveWorkspaceId();\r\n  const activeWorkspace = useActiveWorkspace();\r\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\r\n  const {hasPermission} = useAuth();\r\n\r\n  // if user no longer has access to previously selected workspace, select personal one\r\n  useEffect(() => {\r\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\r\n    if (isFetched && !isFetching && !activeWorkspace) {\r\n      setWorkspaceId(PersonalWorkspace.id);\r\n    }\r\n  }, [activeWorkspace, workspaces, setWorkspaceId, isFetched, isFetching]);\r\n\r\n  if (\r\n    // if we have a custom trigger, leave rendering up to the customer trigger\r\n    !trigger &&\r\n    (!activeWorkspace ||\r\n      (!hasPermission('workspaces.create') && workspaces?.length === 1))\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger\r\n        type=\"popover\"\r\n        placement={placement}\r\n        isOpen={selectorIsOpen}\r\n        onClose={() => {\r\n          setSelectorIsOpen(false);\r\n        }}\r\n      >\r\n        {trigger ? (\r\n          cloneElement(trigger, {\r\n            onClick: () => setSelectorIsOpen(!selectorIsOpen),\r\n          })\r\n        ) : (\r\n          <DefaultTrigger\r\n            onClick={() => setSelectorIsOpen(!selectorIsOpen)}\r\n            workspace={activeWorkspace!}\r\n            className={className}\r\n          />\r\n        )}\r\n        <Dialog size=\"min-w-320\">\r\n          <DialogBody padding=\"p-10\">\r\n            <div className=\"mb-16 border-b pb-10\">\r\n              {workspaces?.map(workspace => (\r\n                <WorkspaceItem\r\n                  key={workspace.id}\r\n                  workspace={workspace}\r\n                  setSelectorIsOpen={setSelectorIsOpen}\r\n                  onChange={onChange}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className=\"mb-4 px-4 text-center\">\r\n              <CreateWorkspaceButton\r\n                onClick={() => setSelectorIsOpen(false)}\r\n                onCreated={id => onChange?.(id)}\r\n                workspaceCount={workspaces ? workspaces.length - 1 : 0}\r\n              />\r\n            </div>\r\n          </DialogBody>\r\n        </Dialog>\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface CreateWorkspaceButtonProps {\r\n  onClick: () => void;\r\n  onCreated?: (id: number) => void;\r\n  workspaceCount: number;\r\n}\r\nfunction CreateWorkspaceButton({\r\n  onClick,\r\n  onCreated,\r\n  workspaceCount,\r\n}: CreateWorkspaceButtonProps) {\r\n  const {setWorkspaceId} = useActiveWorkspaceId();\r\n  const {checkOverQuotaOrNoPermission} = useAuth();\r\n  const {overQuotaOrNoPermission} = checkOverQuotaOrNoPermission(\r\n    'workspaces.create',\r\n    'count',\r\n    workspaceCount,\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        disabled={overQuotaOrNoPermission}\r\n        onClick={async e => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          onClick();\r\n          const workspaceId = await openDialog(NewWorkspaceDialog);\r\n          if (workspaceId) {\r\n            setWorkspaceId(workspaceId);\r\n            onCreated?.(workspaceId);\r\n          }\r\n        }}\r\n        variant=\"outline\"\r\n        startIcon={<AddIcon />}\r\n        color=\"primary\"\r\n        className=\"h-40 w-full\"\r\n      >\r\n        <Trans message=\"Create new workspace\" />\r\n      </Button>\r\n      {overQuotaOrNoPermission && (\r\n        <PolicyFailMessage\r\n          size=\"sm\"\r\n          className=\"mt-12 max-w-288\"\r\n          resourceName={<Trans message=\"worksapces\" />}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface DefaultTriggerProps {\r\n  onClick: () => void;\r\n  workspace: Workspace;\r\n  className?: string;\r\n}\r\nconst DefaultTrigger = forwardRef<HTMLButtonElement, DefaultTriggerProps>(\r\n  ({workspace, className, onClick, ...other}, ref) => {\r\n    return (\r\n      <ButtonBase\r\n        ref={ref}\r\n        onClick={onClick}\r\n        className={clsx(\r\n          'flex items-center gap-10 rounded ring-inset hover:bg-hover focus-visible:ring-2',\r\n          className,\r\n        )}\r\n        {...other}\r\n      >\r\n        <span className=\"mr-auto block flex-auto overflow-hidden text-left\">\r\n          <span className=\"block overflow-hidden overflow-ellipsis text-sm font-medium text-main\">\r\n            {workspace.default ? (\r\n              <Trans message={workspace.name} />\r\n            ) : (\r\n              workspace.name\r\n            )}\r\n          </span>\r\n          <span className=\"block text-xs text-muted\">\r\n            {workspace.default ? (\r\n              <Trans message=\"Personal workspace\" />\r\n            ) : (\r\n              <Trans\r\n                message=\":count members\"\r\n                values={{count: workspace.members_count}}\r\n              />\r\n            )}\r\n          </span>\r\n        </span>\r\n        <UnfoldMoreIcon className=\"shrink-0 icon-md\" />\r\n      </ButtonBase>\r\n    );\r\n  },\r\n);\r\n\r\ninterface WorkspaceItemProps {\r\n  workspace: Workspace;\r\n  onChange: WorkspaceSelectorProps['onChange'];\r\n  setSelectorIsOpen: (value: boolean) => void;\r\n}\r\nfunction WorkspaceItem({\r\n  workspace,\r\n  onChange,\r\n  setSelectorIsOpen,\r\n}: WorkspaceItemProps) {\r\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\r\n  const isActive = workspaceId === workspace.id;\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setWorkspaceId(workspace.id);\r\n        onChange?.(workspace.id);\r\n        setSelectorIsOpen(false);\r\n      }}\r\n      className={clsx(\r\n        'mb-4 flex cursor-pointer items-center gap-12 rounded-lg p-10 text-left',\r\n        isActive && 'bg-primary/5',\r\n        !isActive && 'hover:bg-hover',\r\n      )}\r\n    >\r\n      <CheckIcon\r\n        size=\"sm\"\r\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\r\n      />\r\n      <div className=\"flex-auto\">\r\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\r\n          {workspace.name}\r\n        </div>\r\n        <div className=\"text-sm text-muted\">\r\n          {workspace.default ? (\r\n            <Trans message=\"Personal workspace\" />\r\n          ) : (\r\n            <Trans\r\n              message=\":count members\"\r\n              values={{count: workspace.members_count}}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {workspace.id !== 0 && (\r\n        <ManageButton\r\n          setSelectorIsOpen={setSelectorIsOpen}\r\n          workspace={workspace}\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface LeaveWorkspaceDialogProps {\r\n  workspace: Workspace;\r\n  onChange?: (id: number) => void;\r\n}\r\nfunction LeaveWorkspaceDialog({\r\n  workspace,\r\n  onChange,\r\n}: LeaveWorkspaceDialogProps) {\r\n  const removeMember = useRemoveMember();\r\n  const {user} = useAuth();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <LeaveWorkspaceConfirmation\r\n      isLoading={removeMember.isPending}\r\n      onConfirm={() => {\r\n        removeMember.mutate(\r\n          {\r\n            workspaceId: workspace.id,\r\n            memberId: user!.id,\r\n            memberType: 'member',\r\n          },\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              onChange?.(PersonalWorkspace.id);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ninterface DeleteWorkspaceConfirmationProps {\r\n  workspace: Workspace;\r\n  onChange?: (id: number) => void;\r\n}\r\nfunction DeleteWorkspaceConfirmation({\r\n  workspace,\r\n  onChange,\r\n}: DeleteWorkspaceConfirmationProps) {\r\n  const deleteWorkspace = useDeleteWorkspace();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Delete workspace\" />}\r\n      body={\r\n        <Trans\r\n          message=\"Are you sure you want to delete “:name“?\"\r\n          values={{name: workspace.name}}\r\n        />\r\n      }\r\n      confirm={<Trans message=\"Delete\" />}\r\n      isLoading={deleteWorkspace.isPending}\r\n      onConfirm={() => {\r\n        deleteWorkspace.mutate(\r\n          {id: workspace.id},\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              onChange?.(PersonalWorkspace.id);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ninterface ManageButtonProps {\r\n  setSelectorIsOpen: (value: boolean) => void;\r\n  workspace: Workspace;\r\n  onChange?: (id: number) => void;\r\n}\r\nfunction ManageButton({\r\n  setSelectorIsOpen,\r\n  workspace,\r\n  onChange,\r\n}: ManageButtonProps) {\r\n  const {user} = useAuth();\r\n\r\n  return (\r\n    <MenuTrigger onItemSelected={() => setSelectorIsOpen(false)}>\r\n      <Button\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }}\r\n        color=\"primary\"\r\n        size=\"xs\"\r\n        variant=\"outline\"\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        <Trans message=\"Manage\" />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            openDialog(WorkspaceMembersDialog, {workspace});\r\n          }}\r\n          value=\"workspaceMembers\"\r\n          startIcon={<PersonAddIcon />}\r\n        >\r\n          <Trans message=\"Members\" />\r\n        </MenuItem>\r\n        {workspace.owner_id === user?.id && (\r\n          <MenuItem\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n              openDialog(RenameWorkspaceDialog, {workspace});\r\n            }}\r\n            value=\"updateWorkspace\"\r\n            startIcon={<EditIcon />}\r\n          >\r\n            <Trans message=\"Rename\" />\r\n          </MenuItem>\r\n        )}\r\n        {workspace.owner_id !== user?.id && (\r\n          <MenuItem\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n              openDialog(LeaveWorkspaceDialog, {workspace, onChange});\r\n            }}\r\n            value=\"leaveWorkspace\"\r\n            startIcon={<ExitToAppIcon />}\r\n          >\r\n            <Trans message=\"Leave\" />\r\n          </MenuItem>\r\n        )}\r\n        {workspace.owner_id === user?.id && (\r\n          <MenuItem\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n              openDialog(DeleteWorkspaceConfirmation, {workspace, onChange});\r\n            }}\r\n            value=\"deleteWorkspace\"\r\n            startIcon={<DeleteIcon />}\r\n          >\r\n            <Trans message=\"Delete\" />\r\n          </MenuItem>\r\n        )}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__fdd45f16__\"","export default \"__VITE_ASSET__189838f6__\"","export default \"__VITE_ASSET__bc08ea77__\"","export default \"__VITE_ASSET__94ef2bf1__\"","export default \"__VITE_ASSET__291df933__\"","export default \"__VITE_ASSET__5cc493df__\"","import type {DriveFolder} from '../files/drive-entry';\r\nimport {message} from '@ui/i18n/message';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport addFilesSvg from './add-files.svg';\r\nimport timeManagement from './time-management.svg';\r\nimport fileSearching from './file-searching.svg';\r\nimport throwAwaySvg from './throw-away.svg';\r\nimport lovingItSvg from './loving-it.svg';\r\nimport shareSvg from './../shareable-link/shareable-link-page/folder-preview/share.svg';\r\nimport {DriveSortDescriptor} from '../drive-store';\r\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\r\nimport {BootstrapData} from '@ui/bootstrap-data/bootstrap-data';\r\n\r\ninterface NoContentMessage {\r\n  title: MessageDescriptor;\r\n  description: MessageDescriptor;\r\n  image: string;\r\n}\r\n\r\nexport interface DrivePage {\r\n  uniqueId: string;\r\n  name: string;\r\n  label: MessageDescriptor | string;\r\n  path: string;\r\n  hasActions?: boolean;\r\n  canUpload?: boolean;\r\n  disableSort?: boolean;\r\n  sortDescriptor: DriveSortDescriptor;\r\n  queryParams?: Record<string, string | number | boolean>;\r\n  folder?: DriveFolder;\r\n  isFolderPage?: boolean;\r\n  noContentMessage: (isSearchingOrFiltering: boolean) => NoContentMessage;\r\n}\r\n\r\nconst defaultSortDescriptor: DriveSortDescriptor = {\r\n  orderBy: 'updated_at',\r\n  orderDir: 'desc',\r\n};\r\n\r\nexport function makeFolderPage(folder: DriveFolder): DrivePage {\r\n  return {\r\n    ...makePartialFolderPage(folder.hash),\r\n    canUpload:\r\n      folder.permissions['files.create'] || folder.permissions['files.update'],\r\n    label: folder.name,\r\n    folder,\r\n  };\r\n}\r\n\r\nexport function makePartialFolderPage(hash: string): DrivePage {\r\n  return {\r\n    name: 'folder',\r\n    uniqueId: hash,\r\n    label: '',\r\n    path: getPathForFolder(hash),\r\n    hasActions: true,\r\n    canUpload: false,\r\n    sortDescriptor: defaultSortDescriptor,\r\n    isFolderPage: true,\r\n    noContentMessage: () => ({\r\n      title: message('Drop files or folders here'),\r\n      description: message('Or use the \"Upload\" button'),\r\n      image: addFilesSvg,\r\n    }),\r\n  };\r\n}\r\n\r\nexport function getPathForFolder(hash: string): string {\r\n  if (hash === '0') {\r\n    return '/drive';\r\n  }\r\n  return `/drive/folders/${hash}`;\r\n}\r\n\r\n// bootstrap data will always be available at this point\r\ninterface BootstrapDataWithRootFolder extends BootstrapData {\r\n  rootFolder: DriveFolder;\r\n}\r\nconst rootFolder = (getBootstrapData() as BootstrapDataWithRootFolder)\r\n  .rootFolder;\r\nexport const RootFolderPage = {\r\n  ...makeFolderPage(rootFolder),\r\n  name: 'home',\r\n} as Required<DrivePage>;\r\n\r\nexport const RecentPage: DrivePage = {\r\n  name: 'recent',\r\n  uniqueId: 'recent',\r\n  label: message('Recent'),\r\n  path: '/drive/recent',\r\n  disableSort: true,\r\n  sortDescriptor: {\r\n    orderBy: 'created_at',\r\n    orderDir: 'desc',\r\n  },\r\n  queryParams: {\r\n    recentOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('No recent entries'),\r\n    description: message('You have not uploaded any files or folders yet'),\r\n    image: timeManagement,\r\n  }),\r\n};\r\n\r\nexport const SearchPage: DrivePage = {\r\n  name: 'search',\r\n  uniqueId: 'search',\r\n  label: message('Search results'),\r\n  path: '/drive/search',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  noContentMessage: isSearchingOrFiltering => {\r\n    if (isSearchingOrFiltering) {\r\n      return {\r\n        title: message('No matching results'),\r\n        description: message('Try changing your search query or filters'),\r\n        image: fileSearching,\r\n      };\r\n    }\r\n    return {\r\n      title: message('Begin typing or select a filter to search'),\r\n      description: message('Search for files, folders and other content'),\r\n      image: fileSearching,\r\n    };\r\n  },\r\n};\r\n\r\nexport const SharesPage: DrivePage = {\r\n  name: 'sharedWithMe',\r\n  uniqueId: 'sharedWithMe',\r\n  label: message('Shared'),\r\n  path: '/drive/shares',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  queryParams: {\r\n    sharedOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('Shared with me'),\r\n    description: message('Files and folders other people have shared with you'),\r\n    image: shareSvg,\r\n  }),\r\n};\r\n\r\nexport const TrashPage: DrivePage = {\r\n  name: 'trash',\r\n  uniqueId: 'trash',\r\n  label: message('Trash'),\r\n  path: '/drive/trash',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  hasActions: true,\r\n  queryParams: {\r\n    deletedOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('Trash is empty'),\r\n    description: message(\r\n      'There are no files or folders in your trash currently',\r\n    ),\r\n    image: throwAwaySvg,\r\n  }),\r\n};\r\n\r\nexport const StarredPage: DrivePage = {\r\n  name: 'starred',\r\n  uniqueId: 'starred',\r\n  label: message('Starred'),\r\n  path: '/drive/starred',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  queryParams: {\r\n    starredOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('Nothing is starred'),\r\n    description: message(\r\n      'Add stars to files and folders that you want to easily find later',\r\n    ),\r\n    image: lovingItSvg,\r\n  }),\r\n};\r\n\r\nexport const DRIVE_PAGES = [\r\n  RootFolderPage,\r\n  RecentPage,\r\n  SearchPage,\r\n  SharesPage,\r\n  TrashPage,\r\n  StarredPage,\r\n];\r\n","export enum MenuPositions {\r\n  DriveSidebar = 'drive-sidebar',\r\n}\r\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import {useQuery} from '@tanstack/react-query';\r\nimport {DriveFolder} from '../drive-entry';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\n\r\nexport interface UserFoldersApiParams {\r\n  userId: number;\r\n  workspaceId: number | null;\r\n}\r\n\r\ninterface UserFoldersResponse extends BackendResponse {\r\n  folders: DriveFolder[];\r\n  rootFolder: DriveFolder;\r\n}\r\n\r\nfunction fetchUserFolders(\r\n  params: UserFoldersApiParams,\r\n): Promise<UserFoldersResponse> {\r\n  return apiClient\r\n    .get(`users/${params.userId}/folders`, {params})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useFolders() {\r\n  const {user} = useAuth();\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const params: UserFoldersApiParams = {\r\n    userId: user!.id,\r\n    workspaceId,\r\n  };\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchUserFolders(params),\r\n    queryFn: () => fetchUserFolders(params),\r\n    enabled: !!user,\r\n  });\r\n}\r\n","import { enableMapSet } from 'immer';\r\nimport { create } from 'zustand';\r\nimport { immer } from 'zustand/middleware/immer';\r\nimport type { DrivePage } from './drive-page/drive-page';\r\nimport { Key } from 'react';\r\nimport { DriveEntry } from './files/drive-entry';\r\nimport { SortColumn, SortDirection } from './layout/sorting/available-sorts';\r\nimport {\r\n  getFromLocalStorage,\r\n  setInLocalStorage,\r\n} from '@ui/utils/hooks/local-storage';\r\nimport { getBootstrapData } from '@ui/bootstrap-data/bootstrap-data-store';\r\n\r\nconst stableArray: DriveEntry[] = [];\r\nenableMapSet();\r\n\r\nexport type DriveDialog =\r\n  | 'rename'\r\n  | 'newFolder'\r\n  | 'preview'\r\n  | 'share'\r\n  | 'getLink'\r\n  | 'moveTo'\r\n  | 'confirmAndDeleteForever'\r\n  | 'trashFolderBlock';\r\n\r\nexport interface ActiveActionDialog {\r\n  name: DriveDialog;\r\n  entries: DriveEntry[];\r\n}\r\n\r\nexport interface DriveSortDescriptor {\r\n  orderBy?: SortColumn;\r\n  orderDir?: SortDirection;\r\n}\r\n\r\ninterface State {\r\n  uploadQueueIsOpen: boolean;\r\n  selectedEntries: Set<number>;\r\n  sidebarExpandedKeys: Key[];\r\n  activePage?: DrivePage;\r\n  activeActionDialog?: {\r\n    name: DriveDialog;\r\n    entries: DriveEntry[];\r\n  } | null;\r\n  entriesBeingDragged: number[];\r\n  viewMode: 'grid' | 'list';\r\n  sortDescriptor: DriveSortDescriptor;\r\n  contextMenuData: { x: number; y: number; entry?: DriveEntry } | null;\r\n}\r\n\r\ninterface Actions {\r\n  setUploadQueueIsOpen: (isOpen: boolean) => void;\r\n  setSidebarExpandedKeys: (keys: Key[]) => void;\r\n  expandSidebarItem: (key: Key) => void;\r\n  collapseSidebarItem: (key: Key) => void;\r\n  toggleSidebarItem: (key: Key) => void;\r\n  setActivePage: (page: DrivePage) => void;\r\n  setActiveActionDialog: (\r\n    name: DriveDialog | null,\r\n    entries?: DriveEntry[],\r\n  ) => void;\r\n  setViewMode: (mode: 'grid' | 'list') => void;\r\n  setSortDescriptor: (value: DriveSortDescriptor) => void;\r\n  setContextMenuData: (\r\n    position: { x: number; y: number; entry?: DriveEntry } | null,\r\n  ) => void;\r\n  setEntriesBeingDragged: (value: number[]) => void;\r\n  selectEntries: (\r\n    entries: (number | undefined | null)[],\r\n    merge?: boolean,\r\n  ) => void;\r\n  deselectEntries: (entries: number[] | 'all') => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst initialState: State = {\r\n  uploadQueueIsOpen: false,\r\n  contextMenuData: null,\r\n  selectedEntries: new Set(),\r\n  entriesBeingDragged: [],\r\n  activeActionDialog: null,\r\n  sidebarExpandedKeys: [],\r\n  viewMode: getFromLocalStorage<'list' | 'grid'>(\r\n    'drive.viewMode',\r\n    getBootstrapData().settings?.drive?.default_view || 'grid',\r\n  ),\r\n  sortDescriptor: {\r\n    orderBy: 'updated_at',\r\n    orderDir: 'desc',\r\n  },\r\n};\r\n\r\nexport const useDriveStore = create<State & Actions>()(\r\n  immer((set, get) => ({\r\n    ...initialState,\r\n    setUploadQueueIsOpen: isOpen => {\r\n      set(state => {\r\n        state.uploadQueueIsOpen = isOpen;\r\n      });\r\n    },\r\n    setContextMenuData: data => {\r\n      set(state => {\r\n        state.contextMenuData = data;\r\n      });\r\n    },\r\n    setSortDescriptor: value => {\r\n      set(state => {\r\n        const activePageId = get().activePage?.uniqueId;\r\n        if (activePageId) {\r\n          setInLocalStorage('selectedSorting', {\r\n            ...getFromLocalStorage('selectedSorting'),\r\n            [activePageId]: value,\r\n          });\r\n        }\r\n        state.sortDescriptor = value;\r\n      });\r\n    },\r\n    setActivePage: value => {\r\n      set(state => {\r\n        state.activePage = value;\r\n        const storedDescriptor =\r\n          getFromLocalStorage('selectedSorting')?.[value.uniqueId];\r\n        state.sortDescriptor = storedDescriptor\r\n          ? storedDescriptor\r\n          : value.sortDescriptor;\r\n\r\n        // deselect entries when page changes\r\n        if (\r\n          value.uniqueId !== get().activePage?.uniqueId &&\r\n          state.selectedEntries.size\r\n        ) {\r\n          state.selectedEntries.clear();\r\n        }\r\n      });\r\n    },\r\n    setEntriesBeingDragged: value => {\r\n      set(state => {\r\n        state.entriesBeingDragged = value;\r\n      });\r\n    },\r\n    setActiveActionDialog: (name, entries = stableArray) => {\r\n      set(state => {\r\n        const current = get().activeActionDialog;\r\n        // prevent creating a new object, if neither name nor entries changed\r\n        if (current?.name !== name || current.entries !== entries) {\r\n          state.activeActionDialog = name ? { name, entries } : null;\r\n        }\r\n      });\r\n    },\r\n    setViewMode: mode => {\r\n      set(state => {\r\n        state.viewMode = mode;\r\n        setInLocalStorage('drive.viewMode', mode);\r\n      });\r\n    },\r\n    setSidebarExpandedKeys: value =>\r\n      set(state => {\r\n        state.sidebarExpandedKeys = value;\r\n      }),\r\n    expandSidebarItem: key =>\r\n      set(state => {\r\n        if (!state.sidebarExpandedKeys.includes(key)) {\r\n          state.sidebarExpandedKeys.push(key);\r\n        }\r\n      }),\r\n    collapseSidebarItem: key =>\r\n      set(state => {\r\n        const index = state.sidebarExpandedKeys.indexOf(key);\r\n        if (index > -1) {\r\n          state.sidebarExpandedKeys.splice(index, 1);\r\n        }\r\n      }),\r\n    toggleSidebarItem: key =>\r\n      set(state => {\r\n        if (state.sidebarExpandedKeys.includes(key)) {\r\n          state.expandSidebarItem(key);\r\n        } else {\r\n          state.collapseSidebarItem(key);\r\n        }\r\n      }),\r\n    selectEntries: (entries, merge) => {\r\n      set(state => {\r\n        if (!merge) {\r\n          state.selectedEntries.clear();\r\n        }\r\n        entries.forEach(e => e && state.selectedEntries.add(e));\r\n      });\r\n    },\r\n    deselectEntries: entries => {\r\n      set(state => {\r\n        if (!state.selectedEntries.size) return;\r\n        if (entries === 'all') {\r\n          state.selectedEntries = new Set();\r\n        } else {\r\n          entries.forEach(e => state.selectedEntries.delete(e));\r\n        }\r\n      });\r\n    },\r\n    reset: () => {\r\n      set(initialState);\r\n    },\r\n  })),\r\n);\r\n\r\nexport function driveState() {\r\n  return useDriveStore.getState();\r\n}\r\n\r\nexport function useActiveDialogEntry() {\r\n  const dialog = useDriveStore(s => s.activeActionDialog);\r\n  // this will only be used inside dialog, so entry will always be set in that case\r\n  return dialog?.entries[0]!;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntry} from '../drive-entry';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {RootFolderPage} from '../../drive-page/drive-page';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  entries: DriveEntry[];\r\n  destination: FileEntry | null;\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n  destinationId?: number | null;\r\n}\r\n\r\nexport function useMoveEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => {\r\n      toast.loading(\r\n        message('Moving [one 1 item|other :count items]...', {\r\n          values: {\r\n            count: payload.entryIds.length,\r\n          },\r\n        }),\r\n        {disableExitAnimation: true},\r\n      );\r\n      return moveEntries(payload);\r\n    },\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Moved [one 1 item|other :count items] to \":destination\"', {\r\n          values: {\r\n            count: p.entryIds.length,\r\n            destination: (r.destination || RootFolderPage.folder).name,\r\n          },\r\n        }),\r\n        {disableEnterAnimation: true},\r\n      );\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not move items'), null, {\r\n        disableEnterAnimation: true,\r\n      }),\r\n  });\r\n}\r\n\r\nfunction moveEntries(payload: Payload): Promise<Response> {\r\n  // backend expects null for root folder, it might be zero or empty string on frontend\r\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\r\n  return apiClient\r\n    .post('file-entries/move', payload)\r\n    .then(response => response.data);\r\n}\r\n","import {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useCallback} from 'react';\r\nimport {driveState} from '../drive-store';\r\nimport {UploadedFile} from '@ui/utils/files/uploaded-file';\r\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys, invalidateEntryQueries} from '../drive-query-keys';\r\nimport {useStorageSummary} from '../layout/sidebar/storage-summary/storage-summary';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {getActiveWorkspaceId} from '@common/workspace/active-workspace-id';\r\n\r\nexport type UploadFilesFn = (\r\n  files: (File | UploadedFile)[] | FileList,\r\n  options?: UploadStrategyConfig,\r\n) => void;\r\n\r\nconst EightMB = 8388608;\r\n\r\nexport function useDriveUploadQueue() {\r\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\r\n  const {data: usage} = useStorageSummary();\r\n\r\n  const {uploads} = useSettings();\r\n\r\n  const maxFileSize = uploads.max_size || EightMB;\r\n  const allowedFileTypes = uploads.allowed_extensions;\r\n  const blockedFileTypes = uploads.blocked_extensions;\r\n\r\n  const uploadFiles: UploadFilesFn = useCallback(\r\n    (files, options = {}) => {\r\n      if (!options.metadata) {\r\n        options.metadata = {};\r\n      }\r\n      options.metadata.workspaceId = getActiveWorkspaceId();\r\n      if (!options.metadata.parentId) {\r\n        options.metadata.parentId = driveState().activePage?.folder?.id ?? null;\r\n      }\r\n\r\n      files = [...files].map(file => {\r\n        return file instanceof UploadedFile ? file : new UploadedFile(file);\r\n      });\r\n\r\n      // check if this upload will not put user over their allowed storage space\r\n      if (usage) {\r\n        const sizeOfFiles = files.reduce((sum, file) => sum + file.size, 0);\r\n        const currentlyUsing = usage.used;\r\n        const availableSpace = usage.available;\r\n\r\n        if (sizeOfFiles + currentlyUsing > availableSpace) {\r\n          toast.danger(\r\n            message(\r\n              'You have exhausted your allowed space of :space. Delete some files or upgrade your plan.',\r\n              {values: {space: usage.availableFormatted}},\r\n            ),\r\n            {action: {action: '/pricing', label: message('Upgrade')}},\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      uploadMultiple(files, {\r\n        ...options,\r\n        restrictions: {\r\n          maxFileSize,\r\n          allowedFileTypes,\r\n          blockedFileTypes,\r\n        },\r\n        onSuccess: (entry, file) => {\r\n          options?.onSuccess?.(entry, file);\r\n          invalidateEntryQueries();\r\n          queryClient.invalidateQueries({\r\n            queryKey: DriveQueryKeys.fetchStorageSummary,\r\n          });\r\n        },\r\n      });\r\n      driveState().setUploadQueueIsOpen(true);\r\n    },\r\n    [uploadMultiple, allowedFileTypes, blockedFileTypes, maxFileSize, usage],\r\n  );\r\n  return {uploadFiles};\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\r\nimport {DriveEntry, DriveFolder} from '@app/drive/files/drive-entry';\r\n\r\nexport interface PartialFolder {\r\n  id: number;\r\n  hash: string;\r\n  name: string;\r\n  path: string;\r\n  parent_id: number | null;\r\n  type: string;\r\n}\r\n\r\nexport function canMoveEntriesInto(\r\n  targets: DriveEntry[],\r\n  destination: DriveFolder,\r\n) {\r\n  if (destination.type !== 'folder') return false;\r\n\r\n  // prevent moving if user does not have permissions\r\n  if (\r\n    !destination.permissions['files.update'] &&\r\n    !targets.every(t => t.permissions['files.update'])\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  // should not be able to move folder into its\r\n  // own child or folder it's already in\r\n  return targets.every(target => {\r\n    if (!target) return false;\r\n    // entry is already in this folder\r\n    if (\r\n      destination.id === target.parent_id ||\r\n      // root folder check\r\n      (!target.parent_id && destination.id === 0)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return !destinationIsInTarget(destination, target);\r\n  });\r\n}\r\n\r\nfunction destinationIsInTarget(destination: PartialFolder, target: FileEntry) {\r\n  const destinationPath = (destination.path || '').split('/');\r\n  const targetPath = (target.path || '').split('/');\r\n  return targetPath.every((part, index) => {\r\n    return destinationPath[index] === part;\r\n  });\r\n}\r\n","import {useMoveEntries} from './queries/use-move-entries';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {canMoveEntriesInto} from './utils/can-move-entries-into';\r\nimport {\r\n  ConnectedDraggable,\r\n  MixedDraggable,\r\n} from '@ui/interactions/dnd/use-draggable';\r\nimport {NativeFileDraggable} from '@ui/interactions/dnd/use-droppable';\r\nimport {driveState} from '@app/drive/drive-store';\r\nimport {DriveEntry, DriveFolder} from '@app/drive/files/drive-entry';\r\n\r\nexport function useFolderDropAction(folder: DriveEntry) {\r\n  const moveEntries = useMoveEntries();\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n\r\n  const onDrop = async (target: ConnectedDraggable | NativeFileDraggable) => {\r\n    if (folder.type !== 'folder') return;\r\n    if (target.type === 'nativeFile') {\r\n      uploadFiles(await target.getData(), {\r\n        metadata: {parentId: folder.id},\r\n      });\r\n    } else if (target.type === 'fileEntry') {\r\n      const entries = target.getData() as DriveEntry[];\r\n      if (\r\n        entries?.length &&\r\n        canMoveEntriesInto(entries, folder as DriveFolder)\r\n      ) {\r\n        moveEntries.mutate({\r\n          destinationId: folder.id,\r\n          entryIds: entries.map(e => e.id),\r\n        });\r\n        driveState().deselectEntries('all');\r\n      }\r\n    }\r\n  };\r\n\r\n  return {onDrop};\r\n}\r\n\r\nexport function folderAcceptsDrop(\r\n  target: MixedDraggable,\r\n  destination: DriveFolder,\r\n) {\r\n  if (target.type === 'fileEntry') {\r\n    const entries = target.getData() as DriveEntry[];\r\n    return canMoveEntriesInto(entries, destination);\r\n  }\r\n  return true;\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\r\n\r\nexport function makeFolderTreeDragId(entry: FileEntry) {\r\n  return `${entry.id}-tree`;\r\n}\r\n\r\nexport function isFolderTreeDragId(id: string | number): boolean {\r\n  return `${id}`.endsWith('-tree');\r\n}\r\n","import {useDroppable} from '@ui/interactions/dnd/use-droppable';\r\nimport {driveState} from '../../drive-store';\r\nimport {RefObject, useState} from 'react';\r\nimport {\r\n  folderAcceptsDrop,\r\n  useFolderDropAction,\r\n} from '../../files/use-folder-drop-action';\r\nimport {DriveFolder} from '../../files/drive-entry';\r\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\r\n\r\ninterface Props {\r\n  folder: DriveFolder;\r\n  ref: RefObject<HTMLDivElement>;\r\n}\r\nexport function useSidebarTreeDropTarget({folder, ref}: Props) {\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const {onDrop} = useFolderDropAction(folder);\r\n\r\n  const dropProps = useDroppable({\r\n    id: makeFolderTreeDragId(folder),\r\n    ref,\r\n    types: ['fileEntry', 'nativeFile'],\r\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\r\n    onDragEnter: draggable => {\r\n      if (folderAcceptsDrop(draggable, folder)) {\r\n        setIsDragOver(true);\r\n      }\r\n    },\r\n    onDragLeave: () => {\r\n      setIsDragOver(false);\r\n    },\r\n    onDropActivate: () => {\r\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\r\n        driveState().setSidebarExpandedKeys([\r\n          ...driveState().sidebarExpandedKeys,\r\n          folder.id,\r\n        ]);\r\n      }\r\n    },\r\n    onDrop,\r\n  });\r\n\r\n  return {...dropProps, isDragOver};\r\n}\r\n","import {createContext, Key} from 'react';\r\n\r\nexport interface TreeContextValue {\r\n  expandedKeys: Key[];\r\n  setExpandedKeys: (value: Key[]) => void;\r\n  selectedKeys: Key[];\r\n  setSelectedKeys: (value: Key[]) => void;\r\n  focusedNode?: Key;\r\n  setFocusedNode: (node?: Key) => void;\r\n}\r\n\r\nexport const TreeContext = createContext<TreeContextValue>(null!);\r\n","import {TreeItemRenderer} from './tree-item';\r\nimport {cloneElement} from 'react';\r\nimport {TreeNode} from './tree';\r\n\r\ninterface RenderTreeProps<T extends TreeNode> {\r\n  nodes: T[];\r\n  parentNode?: T;\r\n  itemRenderer: TreeItemRenderer<T>;\r\n  level?: number;\r\n}\r\nexport function renderTree<T extends TreeNode>({\r\n  nodes,\r\n  itemRenderer,\r\n  parentNode,\r\n  level,\r\n}: RenderTreeProps<T>) {\r\n  return nodes.map((node, index) => {\r\n    return cloneElement(itemRenderer(node), {\r\n      level: level == undefined ? 0 : level + 1,\r\n      index,\r\n      node,\r\n      parentNode,\r\n      key: node.id,\r\n      itemRenderer,\r\n    });\r\n  });\r\n}\r\n","import React, {Key, useState} from 'react';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {FocusScope} from '@react-aria/focus';\r\nimport {TreeContext, TreeContextValue} from './tree-context';\r\nimport {TreeItemRenderer} from './tree-item';\r\nimport {renderTree} from './render-tree';\r\n\r\nexport interface TreeNode {\r\n  id: number | string;\r\n  children: TreeNode[];\r\n}\r\n\r\ninterface TreeProps<T extends TreeNode> {\r\n  children: TreeItemRenderer<T>;\r\n  nodes: T[];\r\n  selectedKeys?: Key[];\r\n  expandedKeys?: Key[];\r\n  defaultExpandedKeys?: Key[];\r\n  onExpandedKeysChange?: (value: Key[]) => void;\r\n  defaultSelectedKeys?: Key[];\r\n  onSelectedKeysChange?: (value: Key[]) => void;\r\n}\r\nexport function Tree<T extends TreeNode>({\r\n  children,\r\n  nodes,\r\n  ...props\r\n}: TreeProps<T>) {\r\n  const [expandedKeys, setExpandedKeys] = useControlledState(\r\n    props.expandedKeys,\r\n    props.defaultSelectedKeys,\r\n    props.onExpandedKeysChange\r\n  );\r\n  const [selectedKeys, setSelectedKeys] = useControlledState(\r\n    props.selectedKeys,\r\n    props.defaultSelectedKeys,\r\n    props.onSelectedKeysChange\r\n  );\r\n  const [focusedNode, setFocusedNode] = useState<Key | undefined>();\r\n\r\n  const value: TreeContextValue = {\r\n    expandedKeys,\r\n    setExpandedKeys,\r\n    selectedKeys,\r\n    setSelectedKeys,\r\n    focusedNode,\r\n    setFocusedNode,\r\n  };\r\n\r\n  return (\r\n    <TreeContext.Provider value={value}>\r\n      <FocusScope>\r\n        <TreeRoot nodes={nodes} itemRenderer={children} />\r\n      </FocusScope>\r\n    </TreeContext.Provider>\r\n  );\r\n}\r\n\r\ninterface TreeRootProps<T extends TreeNode> {\r\n  nodes: TreeNode[];\r\n  itemRenderer: TreeItemRenderer<T>;\r\n}\r\nfunction TreeRoot<T extends TreeNode>(props: TreeRootProps<T>) {\r\n  return (\r\n    <ul className=\"overflow-hidden text-sm\" role=\"tree\">\r\n      {renderTree(props)}\r\n    </ul>\r\n  );\r\n}\r\n","import React, {\r\n  forwardRef,\r\n  MouseEventHandler,\r\n  ReactNode,\r\n  useContext,\r\n} from 'react';\r\nimport {TreeContext} from './tree-context';\r\nimport clsx from 'clsx';\r\nimport {ArrowRightIcon} from '@ui/icons/material/ArrowRight';\r\n\r\ninterface TreeLabelProps {\r\n  level?: number;\r\n  node: any;\r\n  icon?: ReactNode;\r\n  label?: ReactNode;\r\n  className?: string;\r\n}\r\nexport const TreeLabel = forwardRef<HTMLDivElement, TreeLabelProps>(\r\n  ({icon, label, level = 0, node, className, ...domProps}, ref) => {\r\n    const {expandedKeys, setExpandedKeys, selectedKeys, setSelectedKeys} =\r\n      useContext(TreeContext);\r\n    const isExpanded = expandedKeys.includes(node.id);\r\n    const isSelected = selectedKeys.includes(node.id);\r\n\r\n    const handleExpandIconClick: MouseEventHandler = e => {\r\n      e.stopPropagation();\r\n      const index = expandedKeys.indexOf(node.id);\r\n      const newExpandedKeys = [...expandedKeys];\r\n      if (index > -1) {\r\n        newExpandedKeys.splice(index, 1);\r\n      } else {\r\n        newExpandedKeys.push(node.id);\r\n      }\r\n      setExpandedKeys(newExpandedKeys);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...domProps}\r\n        ref={ref}\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          setSelectedKeys([node.id]);\r\n        }}\r\n        className={clsx(\r\n          'header tree-label flex cursor-pointer flex-nowrap items-center gap-4 overflow-hidden text-ellipsis whitespace-nowrap rounded py-6',\r\n          className,\r\n          isSelected && 'bg-primary/selected font-bold text-primary',\r\n          !isSelected && 'hover:bg-hover',\r\n        )}\r\n      >\r\n        {level > 0 && (\r\n          <div className=\"flex\">\r\n            {Array.from({length: level}).map((_, i) => {\r\n              return <div key={i} className=\"h-24 w-24\" />;\r\n            })}\r\n          </div>\r\n        )}\r\n        <div onClick={handleExpandIconClick}>\r\n          <ArrowRightIcon\r\n            className={clsx(\r\n              'cursor-default transition-transform icon-sm',\r\n              isExpanded && 'rotate-90',\r\n            )}\r\n          />\r\n        </div>\r\n        {icon}\r\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nTreeLabel.displayName = 'TreeLabel';\r\n","import React, {\r\n  HTMLAttributes,\r\n  ReactElement,\r\n  ReactNode,\r\n  Ref,\r\n  useContext,\r\n  useEffect,\r\n} from 'react';\r\nimport {useFocusManager} from '@react-aria/focus';\r\nimport {TreeContext} from './tree-context';\r\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\r\nimport clsx from 'clsx';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {TreeNode} from './tree';\r\nimport {renderTree} from './render-tree';\r\nimport {TreeLabel} from './tree-label';\r\n\r\nexport type TreeItemRenderer<T extends TreeNode> = (\r\n  node: any,\r\n) => ReactElement<TreeItemProps<T>>;\r\n\r\nexport interface TreeItemProps<T extends TreeNode>\r\n  extends HTMLAttributes<HTMLElement> {\r\n  label: ReactNode;\r\n  icon: ReactNode;\r\n  node?: T;\r\n  parentNode?: T;\r\n  level?: number;\r\n  index?: number;\r\n  itemRenderer?: TreeItemRenderer<T>;\r\n  labelRef?: Ref<HTMLDivElement>;\r\n  labelClassName?: string;\r\n  className?: string;\r\n}\r\nexport function TreeItem<T extends TreeNode>({\r\n  label,\r\n  icon,\r\n  node,\r\n  level,\r\n  index,\r\n  itemRenderer,\r\n  labelRef,\r\n  labelClassName,\r\n  className,\r\n  parentNode,\r\n  ...domProps\r\n}: TreeItemProps<T>) {\r\n  const focusManager = useFocusManager();\r\n  const {\r\n    expandedKeys,\r\n    selectedKeys,\r\n    focusedNode,\r\n    setFocusedNode,\r\n    setExpandedKeys,\r\n    setSelectedKeys,\r\n  } = useContext(TreeContext);\r\n\r\n  // clear focused node on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (focusedNode === node?.id) {\r\n        setFocusedNode(undefined);\r\n      }\r\n    };\r\n  }, [focusedNode, node?.id, setFocusedNode]);\r\n\r\n  if (!node || !itemRenderer) return null;\r\n\r\n  const hasChildren = node.children.length;\r\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\r\n  const isSelected = selectedKeys.includes(node.id);\r\n  const isFirstNode = level === 0 && index === 0;\r\n  const isFocused =\r\n    focusedNode == undefined ? isFirstNode : focusedNode === node.id;\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLUListElement>) => {\r\n    if (focusedNode == null) return;\r\n    switch (e.key) {\r\n      // select the node\r\n      case 'Enter':\r\n      case ' ':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setSelectedKeys([focusedNode]);\r\n        break;\r\n\r\n      // expand node, or move focus to first (and only first) child\r\n      case 'ArrowRight':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (!hasChildren) return;\r\n\r\n        if (!isExpanded) {\r\n          setExpandedKeys([...expandedKeys, focusedNode]);\r\n        } else {\r\n          focusManager?.focusNext();\r\n        }\r\n        break;\r\n\r\n      // collapse node, or move focus to parent node\r\n      case 'ArrowLeft':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (isExpanded) {\r\n          const index = expandedKeys.indexOf(focusedNode);\r\n          const newKeys = [...expandedKeys];\r\n          newKeys.splice(index, 1);\r\n          setExpandedKeys(newKeys);\r\n        } else if (parentNode) {\r\n          const parentEl =\r\n            document.activeElement?.parentElement?.closest('[tabindex]');\r\n          if (parentEl) {\r\n            (parentEl as HTMLElement).focus();\r\n          }\r\n        }\r\n        break;\r\n\r\n      // focus next visible node, recursively\r\n      case 'ArrowDown':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusNext();\r\n        break;\r\n\r\n      // focus previous visible node, recursively\r\n      case 'ArrowUp':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusPrevious();\r\n        break;\r\n\r\n      // focus first visible node\r\n      case 'Home':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusFirst();\r\n        break;\r\n\r\n      // focus last visible node\r\n      case 'End':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusLast();\r\n        break;\r\n\r\n      // expand all sibling nodes\r\n      case '*':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (parentNode?.children) {\r\n          const newKeys = [...expandedKeys];\r\n          parentNode.children.forEach(childNode => {\r\n            if (\r\n              childNode.children.length &&\r\n              !expandedKeys.includes(childNode.id)\r\n            ) {\r\n              newKeys.push(childNode.id);\r\n            }\r\n          });\r\n          if (newKeys.length !== expandedKeys.length) {\r\n            setExpandedKeys(newKeys);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li\r\n      role=\"treeitem\"\r\n      aria-expanded={isExpanded ? 'true' : 'false'}\r\n      aria-selected={isSelected}\r\n      tabIndex={isFocused ? 0 : -1}\r\n      onKeyDown={createEventHandler(onKeyDown)}\r\n      onFocus={e => {\r\n        e.stopPropagation();\r\n        setFocusedNode(node.id);\r\n      }}\r\n      onBlur={e => {\r\n        e.stopPropagation();\r\n        // only clear focus state when focus moves outside the tree\r\n        if (!e.currentTarget.contains(e.relatedTarget)) {\r\n          setFocusedNode(undefined);\r\n        }\r\n      }}\r\n      className={clsx(\r\n        'outline-none',\r\n        // focus direct .tree-label child when this element has :focus-visible\r\n        '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset',\r\n        className,\r\n      )}\r\n    >\r\n      <TreeLabel\r\n        ref={labelRef}\r\n        className={labelClassName}\r\n        node={node}\r\n        level={level}\r\n        label={label}\r\n        icon={icon}\r\n        {...domProps}\r\n      />\r\n      <AnimatePresence initial={false}>\r\n        {isExpanded ? (\r\n          <m.ul\r\n            key={`${node.id}-group`}\r\n            role=\"group\"\r\n            initial=\"closed\"\r\n            animate=\"open\"\r\n            exit=\"closed\"\r\n            variants={{\r\n              open: {opacity: 1, height: 'auto'},\r\n              closed: {opacity: 0, height: 0, overflow: 'hidden'},\r\n            }}\r\n          >\r\n            {renderTree({\r\n              nodes: node.children,\r\n              parentNode: node,\r\n              itemRenderer,\r\n              level,\r\n            })}\r\n          </m.ul>\r\n        ) : null}\r\n      </AnimatePresence>\r\n    </li>\r\n  );\r\n}\r\n","import React, {useMemo, useRef} from 'react';\r\nimport {arrayToTree} from 'performant-array-to-tree';\r\nimport {useFolders} from '../../files/queries/use-folders';\r\nimport {DriveFolder} from '../../files/drive-entry';\r\nimport {driveState, useDriveStore} from '../../drive-store';\r\nimport {FolderIcon} from '@ui/icons/material/Folder';\r\nimport {getPathForFolder, RootFolderPage} from '../../drive-page/drive-page';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {\r\n  ConnectedDraggable,\r\n  useDraggable,\r\n} from '@ui/interactions/dnd/use-draggable';\r\nimport {useSidebarTreeDropTarget} from './use-sidebar-tree-drop-target';\r\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport clsx from 'clsx';\r\nimport {BackupIcon} from '@ui/icons/material/Backup';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {Tree} from '@ui/tree/tree';\r\nimport {TreeItem, TreeItemProps} from '@ui/tree/tree-item';\r\n\r\ninterface TreeFolder extends DriveFolder {\r\n  children: TreeFolder[];\r\n}\r\n\r\nexport function FolderTree() {\r\n  const navigate = useNavigate();\r\n  const {data} = useFolders();\r\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\r\n\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  let selectedKeys: number[] = [];\r\n  if (activePage?.isFolderPage) {\r\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\r\n  }\r\n\r\n  const tree = useMemo(() => {\r\n    const folders = arrayToTree(data?.folders || [], {\r\n      parentId: 'parent_id',\r\n      dataField: null,\r\n    }) as TreeFolder[];\r\n    const rootFolder = {\r\n      ...RootFolderPage.folder,\r\n      children: folders,\r\n    };\r\n    return [rootFolder];\r\n  }, [data?.folders]);\r\n\r\n  return (\r\n    <Tree\r\n      nodes={tree}\r\n      expandedKeys={expandedKeys}\r\n      onExpandedKeysChange={keys => {\r\n        driveState().setSidebarExpandedKeys(keys);\r\n      }}\r\n      selectedKeys={selectedKeys}\r\n      onSelectedKeysChange={([id]) => {\r\n        const entryHash = findHash(id as number, tree);\r\n        if (entryHash) {\r\n          navigate(getPathForFolder(entryHash));\r\n        } else {\r\n          navigate(RootFolderPage.path);\r\n        }\r\n      }}\r\n    >\r\n      {() => <FolderTreeItem />}\r\n    </Tree>\r\n  );\r\n}\r\n\r\n// props will be passed by tree via cloneElement\r\nfunction FolderTreeItem(props: Partial<TreeItemProps<TreeFolder>>) {\r\n  const {node} = props as Required<TreeItemProps<TreeFolder>>;\r\n  const labelRef = useRef<HTMLDivElement>(null);\r\n  const isRootFolder = node.id === 0;\r\n  const isDragging = useDriveStore(s =>\r\n    s.entriesBeingDragged.includes(node.id),\r\n  );\r\n\r\n  const {draggableProps} = useDraggable({\r\n    type: 'fileEntry',\r\n    id: makeFolderTreeDragId(node),\r\n    ref: labelRef,\r\n    disabled: isRootFolder,\r\n    hidePreview: true,\r\n    onDragStart: (e, draggable) => {\r\n      const d = draggable as ConnectedDraggable<FileEntry[]>;\r\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\r\n      driveState().selectEntries([]);\r\n    },\r\n    onDragEnd: () => {\r\n      driveState().setEntriesBeingDragged([]);\r\n    },\r\n    getData: () => [node],\r\n  });\r\n\r\n  const {droppableProps, isDragOver} = useSidebarTreeDropTarget({\r\n    folder: node,\r\n    ref: labelRef,\r\n  });\r\n\r\n  return (\r\n    <TreeItem\r\n      {...mergeProps(draggableProps, droppableProps, props)}\r\n      onContextMenu={e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        driveState().deselectEntries('all');\r\n        driveState().setContextMenuData({\r\n          x: e.clientX,\r\n          y: e.clientY,\r\n          entry: node,\r\n        });\r\n      }}\r\n      labelRef={labelRef}\r\n      className={isRootFolder ? 'focus-visible:ring-2' : undefined}\r\n      labelClassName={clsx(\r\n        isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary',\r\n        isDragging && 'opacity-30',\r\n        isRootFolder && 'h-40',\r\n      )}\r\n      icon={\r\n        isRootFolder ? (\r\n          <BackupIcon size=\"md\" className=\"mr-6\" />\r\n        ) : (\r\n          <FolderIcon size=\"sm\" className=\"mr-4\" />\r\n        )\r\n      }\r\n      label={node.name}\r\n    />\r\n  );\r\n}\r\n\r\nconst findHash = (id: number, nodes: FileEntry[]): string | undefined => {\r\n  for (const item of nodes) {\r\n    if (item.id === id) {\r\n      return item.hash;\r\n    } else if (item.children) {\r\n      const hash = findHash(id, item.children);\r\n      if (hash) {\r\n        return hash;\r\n      }\r\n    }\r\n  }\r\n};\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {getAxiosErrorMessage} from '@common/http/get-axios-error-message';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n  emptyTrash?: boolean;\r\n  deleteForever?: boolean;\r\n}\r\n\r\nfunction deleteEntries(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/delete', payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useDeleteEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => {\r\n      toast.loading(getLoaderMessage(payload), {disableExitAnimation: true});\r\n      return deleteEntries(payload);\r\n    },\r\n    onSuccess: (r, {entryIds, emptyTrash, deleteForever}) => {\r\n      invalidateEntryQueries();\r\n      queryClient.invalidateQueries({\r\n        queryKey: DriveQueryKeys.fetchStorageSummary,\r\n      });\r\n      if (emptyTrash) {\r\n        toast(message('Emptied trash'), {disableEnterAnimation: true});\r\n      } else if (deleteForever) {\r\n        toast(\r\n          message('Permanently deleted [one 1 item|other :count items]', {\r\n            values: {count: entryIds.length},\r\n          }),\r\n          {disableEnterAnimation: true},\r\n        );\r\n      } else {\r\n        toast(\r\n          message('Moved [one 1 item|other :count items] to trash', {\r\n            values: {count: entryIds.length},\r\n          }),\r\n          {disableEnterAnimation: true},\r\n        );\r\n      }\r\n    },\r\n    onError: (err, {emptyTrash}) => {\r\n      const backendError = getAxiosErrorMessage(err);\r\n      if (backendError) {\r\n        toast.danger(backendError, {disableEnterAnimation: true});\r\n      } else if (emptyTrash) {\r\n        toast.danger('could not empty trash', {disableEnterAnimation: true});\r\n      } else {\r\n        toast.danger('Could not delete items', {disableEnterAnimation: true});\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction getLoaderMessage(payload: Payload): MessageDescriptor {\r\n  if (payload.emptyTrash) {\r\n    return message('Emptying trash...');\r\n  } else if (payload.deleteForever) {\r\n    return message('Deleting files...');\r\n  } else {\r\n    return message('Moving to trash...');\r\n  }\r\n}\r\n","import {CustomMenu, CustomMenuItem} from '@common/menus/custom-menu';\r\nimport {MenuPositions} from '../../menu-positions';\r\nimport React, {\r\n  ComponentPropsWithoutRef,\r\n  forwardRef,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {FolderTree} from '@app/drive/layout/sidebar/folder-tree';\r\nimport {useDeleteEntries} from '@app/drive/files/queries/use-delete-entries';\r\nimport {useDroppable} from '@common/ui/library/interactions/dnd/use-droppable';\r\nimport {MenuItemConfig} from '@common/menus/menu-config';\r\n\r\nexport function SidebarMenu() {\r\n  return (\r\n    <div className=\"mt-26 px-12 text-muted\">\r\n      <FolderTree />\r\n      <CustomMenu\r\n        menu={MenuPositions.DriveSidebar}\r\n        orientation=\"vertical\"\r\n        gap=\"gap-0\"\r\n      >\r\n        {item => {\r\n          if (item.action === '/drive/trash') {\r\n            return <TrashMenuItem key={item.id} item={item} />;\r\n          }\r\n          return <MenuItem key={item.id} item={item} />;\r\n        }}\r\n      </CustomMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MenuItemProps extends ComponentPropsWithoutRef<'a'> {\r\n  item: MenuItemConfig;\r\n  className?: string;\r\n}\r\nexport const MenuItem = forwardRef<HTMLAnchorElement, MenuItemProps>(\r\n  ({item, className, ...domProps}, ref) => {\r\n    return (\r\n      <CustomMenuItem\r\n        className={({isActive}) =>\r\n          clsx(\r\n            className,\r\n            'my-4 h-40 w-full rounded px-24',\r\n            isActive\r\n              ? 'cursor-default bg-primary/selected font-bold text-primary'\r\n              : 'hover:bg-hover',\r\n          )\r\n        }\r\n        item={item}\r\n        ref={ref}\r\n        {...domProps}\r\n      />\r\n    );\r\n  },\r\n);\r\n\r\ninterface TrashMenuItemProps {\r\n  item: MenuItemConfig;\r\n}\r\nfunction TrashMenuItem({item}: TrashMenuItemProps) {\r\n  const deleteEntries = useDeleteEntries();\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const ref = useRef<HTMLAnchorElement>(null);\r\n\r\n  const {droppableProps} = useDroppable({\r\n    id: 'trash',\r\n    types: ['fileEntry'],\r\n    ref,\r\n    onDragEnter: () => {\r\n      setIsDragOver(true);\r\n    },\r\n    onDragLeave: () => {\r\n      setIsDragOver(false);\r\n    },\r\n    onDrop: draggable => {\r\n      const entryIds = (draggable.getData() as FileEntry[]).map(e => e.id);\r\n      deleteEntries.mutate({entryIds, deleteForever: false});\r\n    },\r\n  });\r\n  return (\r\n    <MenuItem\r\n      className={clsx(isDragOver && 'bg-primary/selected')}\r\n      ref={ref}\r\n      {...droppableProps}\r\n      item={item}\r\n    />\r\n  );\r\n}\r\n","import {driveState, useDriveStore} from '../drive-store';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {CreateNewFolderIcon} from '@ui/icons/material/CreateNewFolder';\r\nimport {UploadFileIcon} from '@ui/icons/material/UploadFile';\r\nimport {DriveFolderUploadIcon} from '@ui/icons/material/DriveFolderUpload';\r\nimport React from 'react';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\r\n\r\ninterface CreateNewButtonProps {\r\n  isCompact?: boolean;\r\n  className?: string;\r\n}\r\nexport function CreateNewButton({isCompact, className}: CreateNewButtonProps) {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n\r\n  const button = isCompact ? (\r\n    <IconButton size=\"md\" disabled={!activePage?.canUpload}>\r\n      <AddIcon />\r\n    </IconButton>\r\n  ) : (\r\n    <Button\r\n      className=\"min-w-160\"\r\n      color=\"primary\"\r\n      variant=\"flat\"\r\n      size=\"sm\"\r\n      startIcon={<FileUploadIcon />}\r\n      disabled={!activePage?.canUpload}\r\n    >\r\n      <Trans message=\"Upload\" />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <div className={className}>\r\n      <MenuTrigger\r\n        onItemSelected={async value => {\r\n          if (value === 'uploadFiles') {\r\n            uploadFiles(await openUploadWindow({multiple: true}));\r\n          } else if (value === 'uploadFolder') {\r\n            uploadFiles(await openUploadWindow({directory: true}));\r\n          } else if (value === 'newFolder') {\r\n            const activeFolder = driveState().activePage?.folder;\r\n            driveState().setActiveActionDialog(\r\n              'newFolder',\r\n              activeFolder ? [activeFolder] : [],\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        {button}\r\n        <Menu>\r\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\r\n            <Trans message=\"Upload files\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\r\n            <Trans message=\"Upload folder\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\r\n            <Trans message=\"Create folder\" />\r\n          </MenuItem>\r\n        </Menu>\r\n      </MenuTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {StorageMeter} from './storage-summary/storage-meter';\r\nimport {WorkspaceSelector} from '@common/workspace/workspace-selector';\r\nimport {RootFolderPage} from '../../drive-page/drive-page';\r\nimport {SidebarMenu} from './sidebar-menu';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {CreateNewButton} from '../create-new-button';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Link} from 'react-router';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport clsx from 'clsx';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\n\r\ninterface SidebarProps {\r\n  className?: string;\r\n}\r\nexport function Sidebar({className}: SidebarProps) {\r\n  const {isSubscribed} = useAuth();\r\n  const {billing} = useSettings();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'flex flex-col gap-20 border-r bg-alt text-sm font-medium text-muted',\r\n      )}\r\n    >\r\n      <div className=\"compact-scrollbar flex-auto overflow-y-auto\">\r\n        <CreateNewButton className=\"px-12 pt-28 text-center\" />\r\n        <SidebarMenu />\r\n        <StorageMeter />\r\n        {billing.enable ? (\r\n          <div className=\"mt-14 pl-60\">\r\n            <Button\r\n              elementType={Link}\r\n              to={isSubscribed ? '/billing/change-plan' : '/pricing'}\r\n              variant=\"outline\"\r\n              color=\"primary\"\r\n              size=\"xs\"\r\n            >\r\n              <Trans message=\"Upgrade\" />\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <WorkspaceSwitcher />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction WorkspaceSwitcher() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <WorkspaceSelector\r\n      onChange={() => {\r\n        navigate(RootFolderPage.path);\r\n      }}\r\n      className=\"mt-auto w-full flex-shrink-0 border-t px-24 py-18\"\r\n    />\r\n  );\r\n}\r\n","import {InfiniteData, useInfiniteQuery} from '@tanstack/react-query';\r\nimport {useSearchParams} from 'react-router';\r\nimport {\r\n  hasNextPage,\r\n  LengthAwarePaginationResponse,\r\n} from '@common/http/backend-response/pagination-response';\r\nimport {DriveEntry, DriveFolder} from '../drive-entry';\r\nimport {driveState, useDriveStore} from '../../drive-store';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {SortColumn, SortDirection} from '../../layout/sorting/available-sorts';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\nimport {makeFolderPage, SearchPage} from '../../drive-page/drive-page';\r\nimport {useEffect} from 'react';\r\nimport {shallowEqual} from '@ui/utils/shallow-equal';\r\n\r\nexport interface DriveApiIndexParams {\r\n  orderBy?: SortColumn;\r\n  orderDir?: SortDirection;\r\n  folderId?: string | number | null;\r\n  query?: string;\r\n  filters?: string;\r\n  deletedOnly?: boolean;\r\n  starredOnly?: boolean;\r\n  sharedOnly?: boolean;\r\n  perPage?: number;\r\n  page?: number;\r\n  recentOnly?: boolean;\r\n  workspaceId?: number | null;\r\n  section?: string;\r\n}\r\n\r\nexport interface EntriesPaginationResponse\r\n  extends LengthAwarePaginationResponse<DriveEntry> {\r\n  folder?: DriveFolder;\r\n}\r\n\r\nfunction fetchEntries(\r\n  params: DriveApiIndexParams,\r\n): Promise<EntriesPaginationResponse> {\r\n  return apiClient\r\n    .get('drive/file-entries', {\r\n      params,\r\n    })\r\n    .then(response => response.data);\r\n}\r\n\r\nconst setActiveFolder = (response: InfiniteData<EntriesPaginationResponse>) => {\r\n  const firstPage = response.pages[0];\r\n  const newFolder = firstPage.folder;\r\n  const currentPage = driveState().activePage;\r\n\r\n  if (\r\n    newFolder &&\r\n    currentPage &&\r\n    currentPage.uniqueId === newFolder.hash &&\r\n    // only update page if once to set the folder or if permissions change, to keep page reference as stable as possible\r\n    (!currentPage.folder ||\r\n      !shallowEqual(newFolder.permissions, currentPage.folder?.permissions))\r\n  ) {\r\n    driveState().setActivePage(makeFolderPage(newFolder));\r\n  }\r\n  return response;\r\n};\r\n\r\nexport function usePaginatedEntries() {\r\n  const page = useDriveStore(s => s.activePage);\r\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\r\n  const [searchParams] = useSearchParams();\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const params: DriveApiIndexParams = {\r\n    section: page?.name,\r\n    ...page?.queryParams,\r\n    ...Object.fromEntries(searchParams),\r\n    folderId: page?.isFolderPage ? page.uniqueId : null,\r\n    workspaceId,\r\n    ...sortDescriptor,\r\n  };\r\n\r\n  // if we have no search query, there's no need to call the API, show no results message instead\r\n  const isDisabledInSearch =\r\n    page === SearchPage && !params.query && !params.filters;\r\n\r\n  const query = useInfiniteQuery({\r\n    queryKey: DriveQueryKeys.fetchEntries(params),\r\n    queryFn: ({pageParam = 1}) => {\r\n      return fetchEntries({...params, page: pageParam});\r\n    },\r\n    initialPageParam: 1,\r\n    getNextPageParam: lastResponse => {\r\n      const currentPage = lastResponse.current_page;\r\n      if (!hasNextPage(lastResponse)) {\r\n        return undefined;\r\n      }\r\n      return currentPage + 1;\r\n    },\r\n    enabled: page != null && !isDisabledInSearch,\r\n  });\r\n\r\n  // need to do this in effect, to avoid react errors about\r\n  // multiple components re-rendering at the same time\r\n  useEffect(() => {\r\n    if (query.data?.pages[0].folder) {\r\n      setActiveFolder(query.data);\r\n    }\r\n  }, [query.data]);\r\n\r\n  return query;\r\n}\r\n\r\nexport function getAllEntries() {\r\n  const caches = queryClient.getQueriesData<\r\n    InfiniteData<EntriesPaginationResponse>\r\n  >({queryKey: DriveQueryKeys.fetchEntries()});\r\n  return caches.reduce<DriveEntry[]>((all, cache) => {\r\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\r\n    return [...all, ...current];\r\n  }, []);\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '@common/datatable/filters/backend-filter';\r\nimport {FILE_ENTRY_TYPE_FILTER} from '@common/admin/file-entry/file-entry-index-filters';\r\nimport {message} from '@ui/i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const driveSearchFilters: BackendFilter[] = [\r\n  FILE_ENTRY_TYPE_FILTER,\r\n  {\r\n    key: 'owner_id',\r\n    label: message('Owner'),\r\n    description: message('User file was uploaded by'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '02',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('anyone'),\r\n          value: {value: null, operator: '!='},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('me'),\r\n          value: '{authId}',\r\n        },\r\n        {\r\n          key: '03',\r\n          label: message('not me'),\r\n          value: {value: '{authId}', operator: '!='},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date file was uploaded'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date file was last changed'),\r\n  }),\r\n  {\r\n    key: 'deleted_at',\r\n    label: message('In trash'),\r\n    description: message('Only show files that are in the trash'),\r\n    defaultOperator: FilterOperator.ne,\r\n    control: {\r\n      type: FilterControlType.BooleanToggle,\r\n      defaultValue: null,\r\n    },\r\n  },\r\n  {\r\n    key: 'shareableLink',\r\n    label: message('Has shareable link'),\r\n    description: message('Only show files that have a shareable link'),\r\n    defaultOperator: FilterOperator.has,\r\n    control: {\r\n      type: FilterControlType.BooleanToggle,\r\n      defaultValue: '*',\r\n    },\r\n  },\r\n  {\r\n    control: {\r\n      type: FilterControlType.BooleanToggle,\r\n      defaultValue: true,\r\n    },\r\n    key: 'sharedByMe',\r\n    label: message('Shared by me'),\r\n    description: message('Only show files that are shared with someone'),\r\n    defaultOperator: FilterOperator.eq,\r\n  },\r\n];\r\n","import React, {useContext, useState} from 'react';\r\nimport {driveSearchFilters} from './drive-search-filters';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {SearchPage} from '../drive-page/drive-page';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useSearchParams} from 'react-router';\r\nimport {message} from '@ui/i18n/message';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\n\r\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\r\n\r\nexport function SearchFilterList() {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\r\n\r\n  if (activePage !== SearchPage) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-30 mt-10 px-10 md:px-26\">\r\n      {isMobileMode && (\r\n        <form\r\n          className=\"contents\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            // blur input so mobile keyboard is hidden\r\n            if (document.activeElement?.tagName === 'INPUT') {\r\n              (document.activeElement as HTMLInputElement).blur();\r\n            }\r\n            navigate(\r\n              {\r\n                pathname: SearchPage.path,\r\n                search: `?query=${inputValue}`,\r\n              },\r\n              {replace: true},\r\n            );\r\n          }}\r\n        >\r\n          <TextField\r\n            autoFocus\r\n            className=\"mb-20\"\r\n            startAdornment={\r\n              <IconButton type=\"submit\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n            }\r\n            placeholder={trans(message('Type to search'))}\r\n            value={inputValue}\r\n            onChange={e => setInputValue(e.target.value)}\r\n          />\r\n        </form>\r\n      )}\r\n      <FilterList\r\n        filters={driveSearchFilters}\r\n        pinnedFilters={alwaysShownFilters}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {InteractableRect} from '../interactable-event';\r\n\r\nexport function restrictResizableWithinBoundary(\r\n  rect: InteractableRect,\r\n  boundaryRect: InteractableRect\r\n) {\r\n  const boundedRect = {...rect};\r\n\r\n  // restrict to left edge of boundary\r\n  boundedRect.left = Math.max(0, boundedRect.left);\r\n  // compensate width when left is bounded\r\n  const leftRestriction = boundedRect.left - rect.left;\r\n  if (leftRestriction > 0) {\r\n    boundedRect.width -= leftRestriction;\r\n  }\r\n\r\n  // restrict to top edge of boundary\r\n  boundedRect.top = Math.max(0, boundedRect.top);\r\n  // compensate height when top is bounded\r\n  const topRestriction = boundedRect.top - rect.top;\r\n  if (topRestriction > 0) {\r\n    boundedRect.height -= topRestriction;\r\n  }\r\n\r\n  // restrict to right edge of boundary\r\n  boundedRect.width = Math.min(\r\n    boundedRect.width,\r\n    boundaryRect.width - boundedRect.left\r\n  );\r\n\r\n  // restrict to bottom edge of boundary\r\n  boundedRect.height = Math.min(\r\n    boundedRect.height,\r\n    boundaryRect.height - boundedRect.top\r\n  );\r\n\r\n  return boundedRect;\r\n}\r\n","import {RefObject, useLayoutEffect, useRef} from 'react';\r\nimport {droppables} from '../drag-state';\r\nimport {InteractableRect} from '../../interactable-event';\r\nimport {DraggableId} from '../use-draggable';\r\n\r\nexport interface ConnectedMouseSelectable {\r\n  id: DraggableId;\r\n  onSelected?: () => void;\r\n  onDeselected?: () => void;\r\n  ref: RefObject<HTMLElement>;\r\n  rect?: InteractableRect;\r\n}\r\n\r\nexport const mouseSelectables = new Map<\r\n  DraggableId,\r\n  ConnectedMouseSelectable\r\n>();\r\n\r\nexport function useMouseSelectable(options: ConnectedMouseSelectable) {\r\n  const {id, ref} = options;\r\n  const optionsRef = useRef(options);\r\n  optionsRef.current = options;\r\n\r\n  useLayoutEffect(() => {\r\n    if (!ref.current) return;\r\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\r\n    mouseSelectables.set(id, {\r\n      ...mouseSelectables.get(id),\r\n      id,\r\n      ref,\r\n      // avoid stale closures\r\n      onSelected: () => {\r\n        optionsRef.current.onSelected?.();\r\n      },\r\n      onDeselected: () => optionsRef.current.onDeselected?.(),\r\n    });\r\n    return () => {\r\n      droppables.delete(id);\r\n    };\r\n  }, [id, optionsRef, ref]);\r\n}\r\n","import {InteractableRect} from '../interactable-event';\r\n\r\nexport function rectsIntersect(\r\n  rectA?: InteractableRect,\r\n  rectB?: InteractableRect\r\n) {\r\n  if (!rectA || !rectB) return false;\r\n  return (\r\n    rectA.left <= rectB.left + rectB.width &&\r\n    rectA.left + rectA.width >= rectB.left &&\r\n    rectA.top <= rectB.top + rectB.height &&\r\n    rectA.top + rectA.height >= rectB.top\r\n  );\r\n}\r\n","import React, {RefObject, useRef} from 'react';\r\nimport {usePointerEvents} from '../../use-pointer-events';\r\nimport {InteractableRect} from '../../interactable-event';\r\nimport {restrictResizableWithinBoundary} from '../../utils/restrict-resizable-within-boundary';\r\nimport {activeInteraction} from '../../active-interaction';\r\nimport {updateRects} from '../update-rects';\r\nimport {mouseSelectables} from './use-mouse-selectable';\r\nimport {rectsIntersect} from '../../utils/rects-intersect';\r\nimport {DraggableId} from '../use-draggable';\r\n\r\ninterface SelectionState {\r\n  startPoint?: {x: number; y: number; scrollTop: number};\r\n  endPoint?: {x: number; y: number};\r\n  boundaryRect?: InteractableRect & {heightWithoutScroll: number};\r\n  scrollListener?: EventListener;\r\n  rafId?: number;\r\n  selectedIds?: Set<DraggableId>;\r\n}\r\n\r\ninterface Props {\r\n  onPointerDown?: (e: React.PointerEvent) => void;\r\n  containerRef?: RefObject<HTMLDivElement>;\r\n}\r\nexport function useMouseSelectionBox({onPointerDown, ...props}: Props = {}) {\r\n  const defaultRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = props.containerRef || defaultRef;\r\n  const boxRef = useRef<HTMLDivElement>(null);\r\n\r\n  let state = useRef<SelectionState>({}).current;\r\n\r\n  const drawSelectionBox = () => {\r\n    if (state.rafId) {\r\n      cancelAnimationFrame(state.rafId);\r\n    }\r\n\r\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\r\n\r\n    const startPoint = state.startPoint;\r\n    const endPoint = state.endPoint;\r\n    const initialScrollTop = startPoint.scrollTop || 0;\r\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\r\n\r\n    const newRect = {\r\n      left: Math.min(startPoint.x, endPoint.x),\r\n      top: Math.min(startPoint.y, endPoint.y),\r\n      width: Math.abs(startPoint.x - endPoint.x),\r\n      height: Math.abs(startPoint.y - endPoint.y),\r\n    };\r\n\r\n    // convert box coords to be relative to container and not viewport\r\n    newRect.left -= state.boundaryRect.left;\r\n    newRect.top -= state.boundaryRect.top;\r\n\r\n    // take initial scroll of container into account\r\n    newRect.top += initialScrollTop;\r\n\r\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\r\n    const scrollDiff = currentScrollTop - initialScrollTop;\r\n    const scrollValue = Math.abs(scrollDiff);\r\n\r\n    // top needs to be changed only if scroll direction is top\r\n    if (scrollDiff < 0) {\r\n      newRect.top -= scrollValue;\r\n    }\r\n\r\n    // height needs to be changed regardless of direction and method\r\n    newRect.height += scrollValue;\r\n\r\n    const boundedRect = state.boundaryRect\r\n      ? restrictResizableWithinBoundary(newRect, state.boundaryRect)\r\n      : {...newRect};\r\n\r\n    if (boxRef.current) {\r\n      state.rafId = requestAnimationFrame(() => {\r\n        if (boxRef.current) {\r\n          boxRef.current.style.display = `block`;\r\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\r\n          boxRef.current.style.width = `${boundedRect.width}px`;\r\n          boxRef.current.style.height = `${boundedRect.height}px`;\r\n        }\r\n        state.rafId = undefined;\r\n      });\r\n    }\r\n\r\n    // convert rect back to absolute for intersection testing\r\n    const absoluteRect = {\r\n      ...boundedRect,\r\n      left: boundedRect.left + state.boundaryRect.left,\r\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop,\r\n    };\r\n\r\n    for (const [, selectable] of mouseSelectables) {\r\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\r\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\r\n        state.selectedIds?.add(selectable.id);\r\n        selectable.onSelected?.();\r\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\r\n        state.selectedIds?.delete(selectable.id);\r\n        selectable.onDeselected?.();\r\n      }\r\n    }\r\n  };\r\n\r\n  const pointerEvents = usePointerEvents({\r\n    minimumMovement: 4,\r\n    onPointerDown,\r\n    onMoveStart: e => {\r\n      if (activeInteraction) {\r\n        return false;\r\n      }\r\n      updateRects(mouseSelectables);\r\n      state = {\r\n        selectedIds: new Set(),\r\n      };\r\n      const el = containerRef.current;\r\n      state.startPoint = {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n        scrollTop: el?.scrollTop || 0,\r\n      };\r\n\r\n      state.scrollListener = e => {\r\n        if (!state.startPoint) return;\r\n        // update rects on scroll, because we are using relative position\r\n        updateRects(mouseSelectables);\r\n        if (state.boundaryRect?.height) {\r\n          state.boundaryRect.height = (e.target as HTMLElement).scrollHeight;\r\n        }\r\n        // draw selection box (for autoscroll and mousewheel)\r\n        drawSelectionBox();\r\n      };\r\n\r\n      if (el) {\r\n        const rect = el.getBoundingClientRect();\r\n        el.addEventListener('scroll', state.scrollListener);\r\n        state.boundaryRect = {\r\n          top: rect.top,\r\n          left: rect.left,\r\n          height: el.scrollHeight,\r\n          heightWithoutScroll: rect.height,\r\n          width: el.scrollWidth,\r\n        };\r\n      }\r\n    },\r\n    onMove: e => {\r\n      state.endPoint = {x: e.clientX, y: e.clientY};\r\n\r\n      if (state.boundaryRect && containerRef.current) {\r\n        const reachedBottomEdge =\r\n          e.clientY + 20 >\r\n          state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\r\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\r\n\r\n        if (reachedBottomEdge) {\r\n          containerRef.current.scrollBy({top: 10});\r\n        } else if (reachedTopEdge) {\r\n          containerRef.current.scrollBy({top: -10});\r\n        }\r\n      }\r\n\r\n      drawSelectionBox();\r\n    },\r\n    onMoveEnd: () => {\r\n      if (state.rafId) {\r\n        cancelAnimationFrame(state.rafId);\r\n      }\r\n      if (containerRef.current && state.scrollListener) {\r\n        containerRef.current.removeEventListener(\r\n          'scroll',\r\n          state.scrollListener\r\n        );\r\n      }\r\n      if (boxRef.current) {\r\n        boxRef.current.style.display = `none`;\r\n        boxRef.current.style.transform = '';\r\n        boxRef.current.style.width = '';\r\n        boxRef.current.style.height = '';\r\n      }\r\n      state = {};\r\n    },\r\n  });\r\n\r\n  return {\r\n    containerProps: {\r\n      ...pointerEvents.domProps,\r\n      ref: containerRef,\r\n    },\r\n    boxProps: {ref: boxRef},\r\n  };\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\nfunction createShareableLink(\r\n  entryId?: number | null,\r\n): Promise<FetchShareableLinkResponse> {\r\n  if (!entryId) {\r\n    return Promise.reject(new Error('Invalid entry id'));\r\n  }\r\n  return apiClient\r\n    .post(`file-entries/${entryId}/shareable-link`)\r\n    .then(response => response.data);\r\n}\r\n\r\ninterface Payload {\r\n  entryId: number;\r\n}\r\nexport function useCreateShareableLink() {\r\n  return useMutation({\r\n    mutationFn: ({entryId}: Payload) => createShareableLink(entryId),\r\n    onSuccess: (data, {entryId}) => {\r\n      queryClient.setQueryData<FetchShareableLinkResponse>(\r\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\r\n        data,\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\r\n  });\r\n}\r\n","import {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n}\r\n\r\nfunction addStarToEntries({entryIds}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/star', {entryIds})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useAddStarToEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => addStarToEntries(payload),\r\n    onSuccess: (data, {entryIds}) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Starred [one 1 item|other :count items]', {\r\n          values: {count: entryIds.length},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not star items')),\r\n  });\r\n}\r\n","import {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n}\r\n\r\nfunction removeStarFromEntries({entryIds}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/unstar', {entryIds})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useRemoveStarFromEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => removeStarFromEntries(payload),\r\n    onSuccess: (data, {entryIds}) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Removed star from [one 1 item|other :count items]', {\r\n          values: {count: entryIds.length},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not remove star')),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntry} from '../drive-entry';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  entries: DriveEntry[];\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n  destinationId?: number;\r\n}\r\n\r\nfunction duplicateEntries(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/duplicate', payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useDuplicateEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => {\r\n      toast.loading(\r\n        message('Duplicating [one 1 item|other :count items]...', {\r\n          values: {\r\n            count: payload.entryIds.length,\r\n          },\r\n        }),\r\n        {disableExitAnimation: true},\r\n      );\r\n      return duplicateEntries(payload);\r\n    },\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      queryClient.invalidateQueries({\r\n        queryKey: DriveQueryKeys.fetchStorageSummary,\r\n      });\r\n      toast(\r\n        message('Duplicated [one 1 item|other :count items]', {\r\n          values: {count: p.entryIds.length},\r\n        }),\r\n        {disableEnterAnimation: true},\r\n      );\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not duplicate items'), null, {\r\n        disableEnterAnimation: true,\r\n      }),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntryUser} from '../../files/drive-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\n\r\ninterface Response extends BackendResponse {\r\n  users: DriveEntryUser[];\r\n}\r\n\r\ninterface Payload {\r\n  userId: number | 'me';\r\n  entryIds: number[];\r\n}\r\n\r\nexport function useUnshareEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => unshareEntries(payload),\r\n    onSuccess: () => {\r\n      return invalidateEntryQueries();\r\n    },\r\n  });\r\n}\r\n\r\nfunction unshareEntries({entryIds, ...payload}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post(`file-entries/${entryIds.join(',')}/unshare`, payload)\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n}\r\n\r\nexport function useRestoreEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => restoreEntries(payload),\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Restored [one 1 item|other :count items]', {\r\n          values: {count: p.entryIds.length},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not restore items')),\r\n  });\r\n}\r\n\r\nfunction restoreEntries(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/restore', payload)\r\n    .then(response => response.data);\r\n}\r\n","import {message} from '@ui/i18n/message';\r\nimport {PersonAddIcon} from '@ui/icons/material/PersonAdd';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {EntryAction} from './entry-action';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {RemoveRedEyeIcon} from '@ui/icons/material/RemoveRedEye';\r\nimport {LinkIcon} from '@ui/icons/material/Link';\r\nimport {useCreateShareableLink} from '../shareable-link/queries/create-shareable-link';\r\nimport {StarIcon} from '@ui/icons/material/Star';\r\nimport {useAddStarToEntries} from '../files/queries/use-add-star-to-entries';\r\nimport {StarOutlineIcon} from '@ui/icons/material/StarOutline';\r\nimport {useRemoveStarFromEntries} from '../files/queries/use-remove-star-from-entries';\r\nimport {DriveFileMoveIcon} from '@ui/icons/material/DriveFileMove';\r\nimport {DriveFileRenameOutlineIcon} from '@ui/icons/material/DriveFileRenameOutline';\r\nimport {ContentCopyIcon} from '@ui/icons/material/ContentCopy';\r\nimport {useDuplicateEntries} from '../files/queries/use-duplicate-entries';\r\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\r\nimport {DeleteIcon} from '@ui/icons/material/Delete';\r\nimport {SharesPage, TrashPage} from '../drive-page/drive-page';\r\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\r\nimport {useUnshareEntries} from '../share-dialog/queries/use-unshare-entries';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {useFileEntryUrls} from '@common/uploads/file-entry-urls';\r\nimport {useRestoreEntries} from '../files/queries/use-restore-entries';\r\nimport {RestoreIcon} from '@ui/icons/material/Restore';\r\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\r\n\r\nexport function useEntryActions(entries: DriveEntry[]): EntryAction[] {\r\n  const preview = usePreviewAction(entries);\r\n  const share = useShareAction(entries);\r\n  const getLink = useGetLinkAction(entries);\r\n  const addStar = useAddToStarredAction(entries);\r\n  const removeStar = useRemoveFromStarred(entries);\r\n  const moveTo = useMoveToAction(entries);\r\n  const rename = useRenameAction(entries);\r\n  const makeCopy = useMakeCopyAction(entries);\r\n  const download = useDownloadEntriesAction(entries);\r\n  const deleteAction = useDeleteEntriesAction(entries);\r\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\r\n  const restoreEntries = useRestoreEntriesAction(entries);\r\n\r\n  return [\r\n    preview,\r\n    share,\r\n    getLink,\r\n    addStar,\r\n    removeStar,\r\n    moveTo,\r\n    rename,\r\n    makeCopy,\r\n    download,\r\n    deleteAction,\r\n    removeSharedEntries,\r\n    restoreEntries,\r\n  ].filter(action => !!action) as EntryAction[];\r\n}\r\n\r\nexport function usePreviewAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  if (!entries.some(e => e.type !== 'folder')) return;\r\n  return {\r\n    label: message('Preview'),\r\n    icon: RemoveRedEyeIcon,\r\n    key: 'preview',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('preview', entries);\r\n    },\r\n  };\r\n}\r\n\r\nexport function useShareAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  )\r\n    return;\r\n\r\n  return {\r\n    label: message('Share'),\r\n    icon: PersonAddIcon,\r\n    key: 'share',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('share', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useGetLinkAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const createLink = useCreateShareableLink();\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    label: message('Get link'),\r\n    icon: LinkIcon,\r\n    key: 'getLink',\r\n    execute: () => {\r\n      createLink.mutate({entryId: entries[0].id});\r\n      driveState().setActiveActionDialog('getLink', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useAddToStarredAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const starEntries = useAddStarToEntries();\r\n  if (\r\n    entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    label: message('Add to starred'),\r\n    icon: StarIcon,\r\n    key: 'addToStarred',\r\n    execute: () => {\r\n      starEntries.mutate({entryIds: entries.map(e => e.id)});\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useRemoveFromStarred(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const removeStar = useRemoveStarFromEntries();\r\n  if (\r\n    !entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\r\n    activePage === TrashPage\r\n  )\r\n    return;\r\n  return {\r\n    label: message('Remove from starred'),\r\n    icon: StarOutlineIcon,\r\n    key: 'removeFromStarred',\r\n    execute: () => {\r\n      removeStar.mutate({entryIds: entries.map(e => e.id)});\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useMoveToAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === SharesPage ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  return {\r\n    label: message('Move to'),\r\n    icon: DriveFileMoveIcon,\r\n    key: 'moveTo',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('moveTo', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useRenameAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  )\r\n    return;\r\n  return {\r\n    label: message('Rename'),\r\n    icon: DriveFileRenameOutlineIcon,\r\n    key: 'rename',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('rename', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useMakeCopyAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const duplicateEntries = useDuplicateEntries();\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    label: message('Make a copy'),\r\n    icon: ContentCopyIcon,\r\n    key: 'makeCopy',\r\n    execute: () => {\r\n      duplicateEntries.mutate({\r\n        entryIds: entries.map(e => e.id),\r\n        destinationId: activePage?.folder?.id,\r\n      });\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useDownloadEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const {downloadUrl} = useFileEntryUrls(entries[0], {\r\n    downloadHashes: entries.map(e => e.hash),\r\n  });\r\n  if (!entries.every(e => e.permissions['files.download'])) return;\r\n  return {\r\n    label: message('Download'),\r\n    icon: FileDownloadIcon,\r\n    key: 'download',\r\n    execute: () => {\r\n      if (downloadUrl) {\r\n        downloadFileFromUrl(downloadUrl);\r\n      }\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nexport function useDeleteEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const deleteEntries = useDeleteEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    activePage === SharesPage ||\r\n    !entries.every(e => e.permissions['files.delete'])\r\n  )\r\n    return;\r\n  return {\r\n    label:\r\n      activePage === TrashPage ? message('Delete forever') : message('Remove'),\r\n    icon: DeleteIcon,\r\n    key: 'delete',\r\n    execute: () => {\r\n      if (activePage === TrashPage) {\r\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\r\n      } else {\r\n        deleteEntries.mutate({\r\n          entryIds: entries.map(e => e.id),\r\n          deleteForever: activePage === TrashPage,\r\n        });\r\n        driveState().selectEntries([]);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport function useRestoreEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const restoreEntries = useRestoreEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    activePage !== TrashPage ||\r\n    !entries.every(e => e.permissions['files.delete'])\r\n  )\r\n    return;\r\n  return {\r\n    label: message('Restore'),\r\n    icon: RestoreIcon,\r\n    key: 'restore',\r\n    execute: () => {\r\n      restoreEntries.mutate({\r\n        entryIds: entries.map(e => e.id),\r\n      });\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nexport function useRemoveSharedEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const unshareEntries = useUnshareEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (activePage !== SharesPage) return;\r\n  return {\r\n    label: message('Remove'),\r\n    icon: DeleteIcon,\r\n    key: 'removeSharedEntry',\r\n    execute: () => {\r\n      unshareEntries.mutate(\r\n        {entryIds: entries.map(e => e.id), userId: 'me'},\r\n        {\r\n          onSuccess: (r, p) => {\r\n            toast(\r\n              message('Removed [one 1 item|other {count} items]', {\r\n                values: {count: p.entryIds.length},\r\n              }),\r\n            );\r\n          },\r\n          onError: err =>\r\n            showHttpErrorToast(err, message('Could not remove items')),\r\n        },\r\n      );\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n","import {EntryAction} from './entry-action';\r\nimport {message} from '@ui/i18n/message';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {DrivePage, TrashPage} from '../drive-page/drive-page';\r\nimport {CreateNewFolderIcon} from '@ui/icons/material/CreateNewFolder';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\r\nimport {DriveFolderUploadIcon} from '@ui/icons/material/DriveFolderUpload';\r\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\r\nimport {DeleteForeverIcon} from '@ui/icons/material/DeleteForever';\r\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\r\n\r\nexport function useDrivePageActions(page: DrivePage): EntryAction[] {\r\n  const newFolder = useNewFolderAction(page);\r\n  const uploadFiles = useUploadFilesAction(page);\r\n  const uploadFolder = useUploadFolderAction(page);\r\n  const emptyTrash = useEmptyTrashAction(page);\r\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(\r\n    action => !!action,\r\n  ) as EntryAction[];\r\n}\r\n\r\nfunction useNewFolderAction(page: DrivePage): EntryAction | undefined {\r\n  if (!page.folder || !page.folder.permissions['files.update']) return;\r\n  return {\r\n    label: message('New folder'),\r\n    icon: CreateNewFolderIcon,\r\n    key: 'newFolder',\r\n    execute: () => {\r\n      if (page.folder) {\r\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction useUploadFilesAction(page: DrivePage): EntryAction | undefined {\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n  if (!page.folder || !page.folder.permissions['files.update']) return;\r\n  return {\r\n    label: message('Upload files'),\r\n    icon: FileUploadIcon,\r\n    key: 'uploadFiles',\r\n    execute: async () => {\r\n      uploadFiles(await openUploadWindow({multiple: true}));\r\n    },\r\n  };\r\n}\r\n\r\nfunction useUploadFolderAction(page: DrivePage): EntryAction | undefined {\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n  if (!page.folder || !page.folder.permissions['files.update']) return;\r\n  return {\r\n    label: message('Upload folder'),\r\n    icon: DriveFolderUploadIcon,\r\n    key: 'uploadFolder',\r\n    execute: async () => {\r\n      uploadFiles(await openUploadWindow({directory: true}));\r\n    },\r\n  };\r\n}\r\n\r\nfunction useEmptyTrashAction(page: DrivePage): EntryAction | undefined {\r\n  const deleteEntries = useDeleteEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (activePage !== TrashPage) return;\r\n  return {\r\n    label: message('Empty trash'),\r\n    icon: DeleteForeverIcon,\r\n    key: 'emptyTrash',\r\n    execute: () => {\r\n      deleteEntries.mutate({entryIds: [], emptyTrash: true});\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n","import React, {createElement, ReactElement} from 'react';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {useEntryActions} from './use-entry-actions';\r\nimport {EntryAction} from './entry-action';\r\nimport {DrivePage, RootFolderPage, TrashPage} from '../drive-page/drive-page';\r\nimport {useDrivePageActions} from './use-drive-page-actions';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\n\r\ninterface Props {\r\n  children: ReactElement;\r\n  entries?: DriveEntry[];\r\n  page?: DrivePage;\r\n  showIfNoActions?: boolean;\r\n}\r\nexport function EntryActionMenuTrigger({\r\n  children,\r\n  entries,\r\n  page,\r\n  showIfNoActions,\r\n}: Props) {\r\n  if (page?.name === RootFolderPage.name) {\r\n    return (\r\n      <PageMenu page={RootFolderPage} showIfNoActions={showIfNoActions}>\r\n        {children}\r\n      </PageMenu>\r\n    );\r\n  }\r\n\r\n  if (page === TrashPage) {\r\n    return (\r\n      <PageMenu page={TrashPage} showIfNoActions={showIfNoActions}>\r\n        {children}\r\n      </PageMenu>\r\n    );\r\n  }\r\n\r\n  if (page?.folder) {\r\n    return (\r\n      <EntriesMenu entries={[page.folder]} showIfNoActions={showIfNoActions}>\r\n        {children}\r\n      </EntriesMenu>\r\n    );\r\n  }\r\n\r\n  if (entries?.length) {\r\n    return (\r\n      <EntriesMenu entries={entries} showIfNoActions={showIfNoActions}>\r\n        {children}\r\n      </EntriesMenu>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\ninterface EntriesContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\r\n  entries: DriveEntry[];\r\n}\r\nfunction EntriesMenu({\r\n  entries,\r\n  children,\r\n  showIfNoActions,\r\n}: EntriesContextMenuProps) {\r\n  const actions = useEntryActions(entries);\r\n  return (\r\n    <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\r\n      {children}\r\n    </BaseMenu>\r\n  );\r\n}\r\n\r\ninterface PageContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\r\n  page: DrivePage;\r\n  showIfNoActions?: boolean;\r\n}\r\nfunction PageMenu({page, children, showIfNoActions}: PageContextMenuProps) {\r\n  const actions = useDrivePageActions(page);\r\n  return (\r\n    <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\r\n      {children}\r\n    </BaseMenu>\r\n  );\r\n}\r\n\r\ninterface BaseMenuProps {\r\n  actions: EntryAction[];\r\n  children: ReactElement;\r\n  showIfNoActions?: boolean;\r\n}\r\nfunction BaseMenu({actions, children, showIfNoActions}: BaseMenuProps) {\r\n  if (!actions.length && !showIfNoActions) {\r\n    return null;\r\n  }\r\n  return (\r\n    <MenuTrigger>\r\n      {children}\r\n      <Menu>\r\n        {actions.map(action => {\r\n          return (\r\n            <MenuItem\r\n              onSelected={() => {\r\n                action.execute();\r\n              }}\r\n              key={action.key}\r\n              value={action.key}\r\n              startIcon={createElement(action.icon)}\r\n            >\r\n              <Trans {...action.label} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {DriveEntry} from '../drive-entry';\r\nimport {usePaginatedEntries} from './use-paginated-entries';\r\n\r\nexport function useEntries(): DriveEntry[] {\r\n  const query = usePaginatedEntries();\r\n  if (!query.data) return [];\r\n  return query.data.pages.flatMap(p => p.data);\r\n}\r\n","import {driveState, useDriveStore} from '../drive-store';\r\nimport {getAllEntries} from './queries/use-paginated-entries';\r\nimport {DriveEntry, DriveFolder} from './drive-entry';\r\nimport {useEntries} from './queries/use-entries';\r\nimport {useFolders} from './queries/use-folders';\r\n\r\nexport function useSelectedEntries(): DriveEntry[] {\r\n  const ids = useDriveStore(s => s.selectedEntries);\r\n  const entries = useEntries();\r\n  return Array.from(ids)\r\n    .map(id => entries.find(entry => entry.id === id))\r\n    .filter(e => !!e) as DriveEntry[];\r\n}\r\n\r\nexport function useSelectedEntry(): DriveEntry | null {\r\n  const entries = useSelectedEntries();\r\n  return entries[0];\r\n}\r\n\r\nexport function useSelectedEntryParent(): DriveFolder | null | undefined {\r\n  const entry = useSelectedEntry();\r\n  const {data} = useFolders();\r\n  if (!entry || !data?.folders) return;\r\n  return data.folders.find(e => e.id === entry.parent_id) as DriveFolder;\r\n}\r\n\r\nexport function getSelectedEntries(): DriveEntry[] {\r\n  const ids = Array.from(driveState().selectedEntries);\r\n  const allEntries = getAllEntries();\r\n  return ids\r\n    .map(id => allEntries.find(entry => entry.id === id))\r\n    .filter(e => !!e) as DriveEntry[];\r\n}\r\n","import React, {createElement} from 'react';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EntryActionMenuTrigger} from './entry-action-menu-trigger';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useSelectedEntries} from '../files/use-selected-entries';\r\nimport {\r\n  useDeleteEntriesAction,\r\n  usePreviewAction,\r\n  useRemoveSharedEntriesAction,\r\n  useShareAction,\r\n} from './use-entry-actions';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {EntryAction} from './entry-action';\r\n\r\ninterface EntryActionListProps {\r\n  className?: string;\r\n}\r\nexport function EntryActionList({className}: EntryActionListProps) {\r\n  const selectedEntries = useSelectedEntries();\r\n\r\n  if (!selectedEntries.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <ActionList entries={selectedEntries} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ActionListProps {\r\n  entries: DriveEntry[];\r\n}\r\nfunction ActionList({entries}: ActionListProps) {\r\n  const preview = usePreviewAction(entries);\r\n  const share = useShareAction(entries);\r\n  const deleteAction = useDeleteEntriesAction(entries);\r\n  const removeShared = useRemoveSharedEntriesAction(entries);\r\n\r\n  const actions = [preview, share, deleteAction, removeShared].filter(\r\n    action => !!action,\r\n  ) as EntryAction[];\r\n\r\n  return (\r\n    <div className=\"entry-action-list\">\r\n      {actions.map(action => (\r\n        <Tooltip key={action.key} label={<Trans {...action.label} />}>\r\n          <IconButton\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              action.execute();\r\n            }}\r\n          >\r\n            {createElement(action.icon)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      ))}\r\n      <EntryActionMenuTrigger entries={entries}>\r\n        <Tooltip label={<Trans message=\"More actions\" />}>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </EntryActionMenuTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import {useSelectedEntries} from './use-selected-entries';\r\nimport {DriveEntry} from './drive-entry';\r\nimport {useEntryActions} from '../entry-actions/use-entry-actions';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {ContextMenu} from '@ui/menu/context-menu';\r\nimport {MenuItem} from '@ui/menu/menu-trigger';\r\nimport React, {createElement} from 'react';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {EntryAction} from '../entry-actions/entry-action';\r\nimport {DrivePage, RootFolderPage} from '../drive-page/drive-page';\r\nimport {useDrivePageActions} from '../entry-actions/use-drive-page-actions';\r\n\r\nexport function DriveContextMenu() {\r\n  const selectedEntries = useSelectedEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const data = useDriveStore(s => s.contextMenuData);\r\n  const entries = data?.entry ? [data.entry] : selectedEntries;\r\n\r\n  // right-clicked root folder\r\n  if (data?.entry?.id === 0) {\r\n    return <PageContextMenu position={data} page={RootFolderPage} />;\r\n  }\r\n\r\n  if (data && entries.length) {\r\n    return <EntriesContextMenu entries={entries} position={data} />;\r\n  }\r\n\r\n  if (data && activePage) {\r\n    return <PageContextMenu position={data} page={activePage} />;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\ninterface EntriesContextMenuProps {\r\n  position: {x: number; y: number};\r\n  entries: DriveEntry[];\r\n}\r\nfunction EntriesContextMenu({entries, position}: EntriesContextMenuProps) {\r\n  const actions = useEntryActions(entries);\r\n  return <BaseContextMenu position={position} actions={actions} />;\r\n}\r\n\r\ninterface PageContextMenuProps {\r\n  position: {x: number; y: number};\r\n  page: DrivePage;\r\n}\r\nfunction PageContextMenu({page, position}: PageContextMenuProps) {\r\n  const actions = useDrivePageActions(page);\r\n  return <BaseContextMenu position={position} actions={actions} />;\r\n}\r\n\r\ninterface BaseContextMenuProps {\r\n  position: {x: number; y: number};\r\n  actions: EntryAction[];\r\n}\r\nfunction BaseContextMenu({position, actions}: BaseContextMenuProps) {\r\n  return (\r\n    <ContextMenu\r\n      position={position}\r\n      onOpenChange={isOpen => {\r\n        if (!isOpen) {\r\n          driveState().setContextMenuData(null);\r\n        }\r\n      }}\r\n    >\r\n      {actions.map(action => (\r\n        <MenuItem\r\n          value={action.key}\r\n          key={action.key}\r\n          onSelected={action.execute}\r\n          startIcon={createElement(action.icon)}\r\n        >\r\n          <Trans {...action.label} />\r\n        </MenuItem>\r\n      ))}\r\n    </ContextMenu>\r\n  );\r\n}\r\n","import {useMediaQuery} from '@ui/utils/hooks/use-media-query';\r\n\r\nexport function useIsTouchDevice() {\r\n  return useMediaQuery('((pointer: coarse))');\r\n}\r\n","import {\r\n  ConnectedDraggable,\r\n  useDraggable,\r\n} from '@ui/interactions/dnd/use-draggable';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {getSelectedEntries} from '../files/use-selected-entries';\r\nimport {useDroppable} from '@ui/interactions/dnd/use-droppable';\r\nimport {\r\n  folderAcceptsDrop,\r\n  useFolderDropAction,\r\n} from '../files/use-folder-drop-action';\r\nimport {DriveEntry, DriveFolder} from '../files/drive-entry';\r\nimport {useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {useMouseSelectable} from '@ui/interactions/dnd/mouse-selection/use-mouse-selectable';\r\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\r\nimport {useIsTouchDevice} from '@ui/utils/hooks/is-touch-device';\r\n\r\nexport function useFileViewDnd<T extends HTMLElement = HTMLElement>(\r\n  destination: DriveEntry,\r\n) {\r\n  const isTouchDevice = useIsTouchDevice();\r\n  const ref = useRef<T>(null);\r\n  const {onDrop} = useFolderDropAction(destination);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const isDragging = useDriveStore(s =>\r\n    s.entriesBeingDragged.includes(destination.id),\r\n  );\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  const {draggableProps} = useDraggable({\r\n    disabled: !!isTouchDevice || activePage === TrashPage,\r\n    id: destination.id,\r\n    type: 'fileEntry',\r\n    ref,\r\n    hidePreview: true,\r\n    onDragStart: (e, target: ConnectedDraggable<FileEntry[]>) => {\r\n      if (!driveState().selectedEntries.has(destination.id)) {\r\n        driveState().selectEntries([destination.id]);\r\n      }\r\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\r\n    },\r\n    onDragEnd: () => {\r\n      driveState().setEntriesBeingDragged([]);\r\n    },\r\n    getData: () => getSelectedEntries(),\r\n  });\r\n\r\n  const {droppableProps} = useDroppable<T>({\r\n    id: destination.id,\r\n    disabled: isTouchDevice || destination.type !== 'folder',\r\n    ref,\r\n    types: ['fileEntry', 'nativeFile'],\r\n    acceptsDrop: target =>\r\n      folderAcceptsDrop(target, destination as DriveFolder),\r\n    onDragEnter: () => setIsDragOver(true),\r\n    onDragLeave: () => setIsDragOver(false),\r\n    onDrop,\r\n  });\r\n\r\n  useMouseSelectable({\r\n    id: destination.id,\r\n    ref,\r\n    onSelected: () => {\r\n      driveState().selectEntries([destination.id], true);\r\n    },\r\n    onDeselected: () => {\r\n      driveState().deselectEntries([destination.id]);\r\n    },\r\n  });\r\n\r\n  const itemClassName = clsx(\r\n    isDragging && 'opacity-20',\r\n    isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded',\r\n  );\r\n\r\n  return {\r\n    draggableProps,\r\n    droppableProps,\r\n    isDragOver,\r\n    isDragging,\r\n    itemClassName,\r\n    ref,\r\n  };\r\n}\r\n","import {DriveEntry} from '../../files/drive-entry';\r\nimport {RowElementProps} from '@common/ui/tables/table-row';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {useFileViewDnd} from '../use-file-view-dnd';\r\nimport clsx from 'clsx';\r\nimport React, {useContext} from 'react';\r\nimport {driveState} from '../../drive-store';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\n\r\nexport function FileTableRow({\r\n  item,\r\n  children,\r\n  className,\r\n  ...domProps\r\n}: RowElementProps<DriveEntry>) {\r\n  const {isCollapsedMode} = useContext(TableContext);\r\n  const {draggableProps, droppableProps, itemClassName, ref} =\r\n    useFileViewDnd<HTMLDivElement>(item);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(className, itemClassName)}\r\n      ref={ref}\r\n      {...mergeProps(draggableProps, droppableProps, domProps, {\r\n        onContextMenu: (e: React.MouseEvent) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (!isCollapsedMode) {\r\n            if (!driveState().selectedEntries.has(item.id)) {\r\n              driveState().selectEntries([item.id]);\r\n            }\r\n            driveState().setContextMenuData({x: e.clientX, y: e.clientY});\r\n          }\r\n        },\r\n      })}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import {useCallback} from 'react';\r\nimport {getPathForFolder, TrashPage} from '../drive-page/drive-page';\r\nimport {driveState} from '../drive-store';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {getSelectedEntries} from '../files/use-selected-entries';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\n\r\nexport function useViewItemActionHandler() {\r\n  const navigate = useNavigate();\r\n\r\n  const performViewItemAction = useCallback(\r\n    (entry: DriveEntry) => {\r\n      if (entry && entry.type === 'folder') {\r\n        if (driveState().activePage === TrashPage) {\r\n          driveState().setActiveActionDialog('trashFolderBlock', [entry]);\r\n        } else {\r\n          navigate(getPathForFolder(entry.hash));\r\n        }\r\n      } else {\r\n        const selectedEntries = getSelectedEntries();\r\n        driveState().setActiveActionDialog(\r\n          'preview',\r\n          selectedEntries.length ? selectedEntries : [entry],\r\n        );\r\n      }\r\n    },\r\n    [navigate],\r\n  );\r\n\r\n  return {performViewItemAction};\r\n}\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport React, {useContext} from 'react';\r\nimport memoize from 'nano-memoize';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {Checkbox} from '@ui/forms/toggle/checkbox';\r\nimport {EntryActionMenuTrigger} from '@app/drive/entry-actions/entry-action-menu-trigger';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport clsx from 'clsx';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\nimport {FileThumbnail} from '@common/uploads/components/file-type-icon/file-thumbnail';\r\n\r\nconst formatFileSize = memoize(bytes => {\r\n  return prettyBytes(bytes);\r\n});\r\n\r\nexport const fileTableColumns: ColumnConfig<DriveEntry>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Name\" />,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    body: entry => <FileNameColumn entry={entry} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-184',\r\n    header: () => <Trans message=\"Last modified\" />,\r\n    body: user => <FormattedDate date={user.updated_at} />,\r\n  },\r\n  {\r\n    key: 'file_size',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Size\" />,\r\n    maxWidth: 'max-w-144',\r\n    body: entry => formatFileSize(entry.file_size) ?? '-',\r\n  },\r\n  {\r\n    key: 'actions',\r\n    hideHeader: true,\r\n    header: () => <Trans message=\"Actions\" />,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: entry => <ActionsColumn entry={entry} />,\r\n  },\r\n];\r\n\r\nfunction FileNameColumn({entry}: {entry: DriveEntry}) {\r\n  const {isCollapsedMode} = useContext(TableContext);\r\n  const sizeClassName = isCollapsedMode ? 'w-30 h-30' : 'w-24 h-24';\r\n  return (\r\n    <div className=\"flex items-center gap-14\">\r\n      <FileThumbnail\r\n        className={clsx('rounded', sizeClassName)}\r\n        iconClassName={sizeClassName}\r\n        file={entry}\r\n      />\r\n      <div className=\"min-w-0\">\r\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\r\n        {isCollapsedMode && (\r\n          <div className=\"mt-4 flex items-center text-xs text-muted\">\r\n            <FormattedDate date={entry.updated_at} />\r\n            <div>·</div>\r\n            <div>{formatFileSize(entry.file_size)}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ActionsBodyProps {\r\n  entry: DriveEntry;\r\n}\r\nfunction ActionsColumn({entry}: ActionsBodyProps) {\r\n  const {selectedRows} = useContext(TableContext);\r\n  return selectedRows.length ? (\r\n    <Checkbox\r\n      className=\"mr-8 block\"\r\n      checked={selectedRows.includes(entry.id)}\r\n    />\r\n  ) : (\r\n    <EntryActionMenuTrigger entries={[entry]}>\r\n      <IconButton className=\"text-muted\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n    </EntryActionMenuTrigger>\r\n  );\r\n}\r\n","import {DriveEntry} from '../../files/drive-entry';\r\nimport React, {useMemo} from 'react';\r\nimport {Table} from '@common/ui/tables/table';\r\nimport {\r\n  DriveSortDescriptor,\r\n  driveState,\r\n  useDriveStore,\r\n} from '../../drive-store';\r\nimport {FileTableRow} from './file-table-row';\r\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\r\nimport {fileTableColumns} from './file-table-columns';\r\n\r\ninterface Props {\r\n  entries: DriveEntry[];\r\n}\r\nexport function FileTable({entries}: Props) {\r\n  const {performViewItemAction} = useViewItemActionHandler();\r\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\r\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\r\n\r\n  const selectedRows = useMemo(() => {\r\n    return [...selectedEntries];\r\n  }, [selectedEntries]);\r\n\r\n  return (\r\n    <Table\r\n      columns={fileTableColumns}\r\n      data={entries}\r\n      sortDescriptor={sortDescriptor}\r\n      onSortChange={value => {\r\n        driveState().setSortDescriptor(value as DriveSortDescriptor);\r\n      }}\r\n      onAction={performViewItemAction}\r\n      selectedRows={selectedRows}\r\n      selectionStyle=\"highlight\"\r\n      renderRowAs={FileTableRow}\r\n      onSelectionChange={value => {\r\n        driveState().selectEntries(value as number[]);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FileThumbnail} from '@common/uploads/components/file-type-icon/file-thumbnail';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\n\r\ninterface BaseFileGridItemProps extends ComponentPropsWithoutRef<'div'> {\r\n  entry: DriveEntry;\r\n  className?: string;\r\n  isSelected?: boolean;\r\n  isMobileMode?: boolean;\r\n  footerAdornment?: ReactNode;\r\n}\r\n\r\nexport const BaseFileGridItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  BaseFileGridItemProps\r\n>(\r\n  (\r\n    {entry, className, isSelected, isMobileMode, footerAdornment, ...domProps},\r\n    ref,\r\n  ) => {\r\n    return (\r\n      <div\r\n        {...domProps}\r\n        ref={ref}\r\n        className={clsx(\r\n          'grid-item flex aspect-square select-none flex-col overflow-hidden rounded border shadow outline-none transition-shadow-opacity dark:bg-alt',\r\n          isSelected && 'border-primary',\r\n          className,\r\n        )}\r\n      >\r\n        <div className=\"relative min-h-0 flex-auto\">\r\n          <FileThumbnail\r\n            className=\"h-full w-full\"\r\n            iconClassName=\"block w-70 h-70 absolute m-auto inset-0\"\r\n            file={entry}\r\n          />\r\n        </div>\r\n        <Footer\r\n          entry={entry}\r\n          isSelected={isSelected}\r\n          isMobile={isMobileMode}\r\n          adornment={footerAdornment}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface FooterProps {\r\n  entry: DriveEntry;\r\n  isSelected?: boolean;\r\n  isMobile?: boolean;\r\n  adornment?: ReactNode;\r\n}\r\nfunction Footer({entry, isSelected, isMobile, adornment}: FooterProps) {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'flex h-48 flex-shrink-0 items-center text-sm',\r\n        isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16',\r\n        isSelected && 'bg-primary-light/20',\r\n      )}\r\n    >\r\n      <div className=\"min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap\">\r\n        {entry.name}\r\n      </div>\r\n      {adornment}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { DriveEntry } from '../../files/drive-entry';\r\nimport { driveState, useDriveStore } from '../../drive-store';\r\nimport { mergeProps } from '@react-aria/utils';\r\nimport { useFileViewDnd } from '../use-file-view-dnd';\r\nimport { useViewItemActionHandler } from '../use-view-item-action-handler';\r\nimport { BaseFileGridItem } from './base-file-grid-item';\r\nimport { EntryActionMenuTrigger } from '../../entry-actions/entry-action-menu-trigger';\r\nimport { IconButton } from '@ui/buttons/icon-button';\r\nimport { MoreVertIcon } from '@ui/icons/material/MoreVert';\r\nimport { Checkbox } from '@ui/forms/toggle/checkbox';\r\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport { isCtrlOrShiftPressed } from '@ui/utils/keybinds/is-ctrl-or-shift-pressed';\r\nimport { usePointerEvents } from '@ui/interactions/use-pointer-events';\r\nimport { createEventHandler } from '@ui/utils/dom/create-event-handler';\r\nimport { message } from '@ui/i18n/message';\r\nimport { useTrans } from '@ui/i18n/use-trans';\r\nimport { Link, Navigate } from 'react-router';\r\nimport { Trans } from '@ui/i18n/trans';\r\n\r\ninterface FileGridItemProps {\r\n  entry: DriveEntry;\r\n}\r\nexport function FileGridItem({ entry }: FileGridItemProps) {\r\n  const {trans} = useTrans();\r\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\r\n  const { performViewItemAction } = useViewItemActionHandler();\r\n  const { isMobileMode } = useContext(DashboardLayoutContext);\r\n\r\n  const { draggableProps, droppableProps, itemClassName, ref } =\r\n    useFileViewDnd<HTMLDivElement>(entry);\r\n\r\n  const toggleEntry = () => {\r\n    if (isSelected) {\r\n      driveState().deselectEntries([entry.id]);\r\n    } else {\r\n      driveState().selectEntries([entry.id], true);\r\n    }\r\n  };\r\n\r\n  const pressHandler = (e: PointerEvent, el: HTMLElement) => {\r\n    if (isMobileMode) {\r\n      if (driveState().selectedEntries.size) {\r\n        toggleEntry();\r\n      } else {\r\n        performViewItemAction(entry);\r\n      }\r\n    } else {\r\n      if (isCtrlOrShiftPressed(e)) {\r\n        toggleEntry();\r\n      } else {\r\n        driveState().selectEntries([entry.id]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { domProps: pressProps } = usePointerEvents({\r\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\r\n    onPress: pressHandler,\r\n  });\r\n\r\n  const keyboardHandler: React.KeyboardEventHandler = e => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      performViewItemAction(entry);\r\n    }\r\n  };\r\n\r\n  const contextMenuHandler: React.MouseEventHandler = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!isMobileMode) {\r\n      if (!driveState().selectedEntries.has(entry.id)) {\r\n        driveState().selectEntries([entry.id]);\r\n      }\r\n      driveState().setContextMenuData({ x: e.clientX, y: e.clientY });\r\n    }\r\n  };\r\n\r\n  return (\r\n    entry.premium ? (\r\n      <div className=\"relative group\">\r\n        <BaseFileGridItem entry={entry} />\r\n        <Link\r\n          to={`/purchase/${entry.id}`}\r\n          className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <span className=\"text-white font-semibold text-sm\">\r\n            <Trans message='Purchase from original owner'/>\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    ) : (\r\n      <BaseFileGridItem\r\n        {...mergeProps(draggableProps, droppableProps, pressProps, {\r\n          onKeyDown: createEventHandler(keyboardHandler),\r\n        })}\r\n        ref={ref}\r\n        isSelected={isSelected}\r\n        isMobileMode={!!isMobileMode}\r\n        tabIndex={-1}\r\n        onDoubleClick={e => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (!isMobileMode) {\r\n            performViewItemAction(entry);\r\n          }\r\n        }}\r\n        footerAdornment={\r\n          isMobileMode && (\r\n            <FooterAdornment entry={entry} isSelected={isSelected} />\r\n          )\r\n        }\r\n        onContextMenu={createEventHandler(contextMenuHandler)}\r\n        entry={entry}\r\n        className={itemClassName}\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  entry: DriveEntry;\r\n  isSelected?: boolean;\r\n}\r\nfunction FooterAdornment({ entry, isSelected }: FooterProps) {\r\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\r\n\r\n  if (anySelected) {\r\n    return <Checkbox className=\"mr-8 block\" checked={isSelected} />;\r\n  }\r\n\r\n  return (\r\n    <EntryActionMenuTrigger entries={[entry]}>\r\n      <IconButton\r\n        className=\"text-muted\"\r\n        onPointerDown={e => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n    </EntryActionMenuTrigger>\r\n  );\r\n}\r\n","import {FileGridItem} from './file-grid-item';\r\nimport React from 'react';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\n\r\ninterface FileGridProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function FileGrid({entries}: FileGridProps) {\r\n  return (\r\n    <div className=\"file-grid-container\">\r\n      <div className=\"file-grid\">\r\n        {entries.map(entry => {\r\n          return <FileGridItem key={entry.id} entry={entry} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {message} from '@ui/i18n/message';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\n\r\nexport const AVAILABLE_SORTS: DriveSortOption[] = [\r\n  {id: 'file_size', label: message('Size')},\r\n  {id: 'name', label: message('Name')},\r\n  {id: 'updated_at', label: message('Last modified')},\r\n  {id: 'created_at', label: message('Upload date')},\r\n  {id: 'type', label: message('Type')},\r\n  {id: 'extension', label: message('Extension')},\r\n];\r\n\r\nexport interface DriveSortOption {\r\n  id: SortColumn;\r\n  label: MessageDescriptor;\r\n}\r\n\r\nexport type SortColumn =\r\n  | 'file_size'\r\n  | 'name'\r\n  | 'updated_at'\r\n  | 'created_at'\r\n  | 'type'\r\n  | 'extension';\r\n\r\nexport type SortDirection = 'desc' | 'asc';\r\n\r\nexport interface SortValue {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n","import {AVAILABLE_SORTS, SortColumn} from './available-sorts';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {SortIcon} from '@ui/icons/material/Sort';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport type {DriveSortDescriptor} from '../../drive-store';\r\nimport {Menu, MenuItem, MenuSection, MenuTrigger} from '@ui/menu/menu-trigger';\r\n\r\ninterface Props {\r\n  descriptor: DriveSortDescriptor;\r\n  onChange: (value: DriveSortDescriptor) => void;\r\n  isDisabled?: boolean;\r\n}\r\nexport function EntriesSortButton({\r\n  descriptor,\r\n  onChange,\r\n  isDisabled = false,\r\n}: Props) {\r\n  const column = descriptor.orderBy;\r\n  const direction = descriptor.orderDir;\r\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\r\n\r\n  return (\r\n    <MenuTrigger\r\n      showCheckmark\r\n      selectionMode=\"multiple\"\r\n      selectedValue={[direction || 'desc', column || '']}\r\n      onItemSelected={key => {\r\n        if (key === 'asc' || key === 'desc') {\r\n          onChange({\r\n            orderBy: column,\r\n            orderDir: key,\r\n          });\r\n        } else {\r\n          onChange({\r\n            orderBy: key as SortColumn,\r\n            orderDir: direction,\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        className=\"text-muted\"\r\n        variant=\"text\"\r\n        size=\"sm\"\r\n        startIcon={<SortIcon />}\r\n        disabled={isDisabled}\r\n      >\r\n        {sort ? <Trans {...sort.label} /> : null}\r\n      </Button>\r\n      <Menu>\r\n        <MenuSection label={<Trans message=\"Direction\" />}>\r\n          <MenuItem value=\"asc\">\r\n            <Trans message=\"Ascending\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"desc\">\r\n            <Trans message=\"Descending\" />\r\n          </MenuItem>\r\n        </MenuSection>\r\n        <MenuSection label={<Trans message=\"Sort By\" />}>\r\n          {AVAILABLE_SORTS.map(item => (\r\n            <MenuItem key={item.id} value={item.id}>\r\n              <Trans {...item.label} />\r\n            </MenuItem>\r\n          ))}\r\n        </MenuSection>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {driveState, useDriveStore} from '../../drive-store';\r\nimport {EntriesSortButton} from './entries-sort-button';\r\nimport React from 'react';\r\n\r\ninterface DriveSortButtonProps {\r\n  isDisabled?: boolean;\r\n}\r\nexport function DriveSortButton({isDisabled}: DriveSortButtonProps) {\r\n  const descriptor = useDriveStore(s => s.sortDescriptor);\r\n  return (\r\n    <EntriesSortButton\r\n      isDisabled={isDisabled}\r\n      descriptor={descriptor}\r\n      onChange={value => {\r\n        driveState().setSortDescriptor(value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {DriveFolder} from '../drive-entry';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\ninterface FolderPathResponse extends BackendResponse {\r\n  path: DriveFolder[];\r\n}\r\n\r\ntype Params = Record<string, string | number | null>;\r\n\r\ninterface Props {\r\n  hash?: string;\r\n  params?: Params;\r\n  isEnabled?: boolean;\r\n}\r\nexport function useFolderPath({hash, params, isEnabled = true}: Props) {\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchFolderPath(hash!, params),\r\n    queryFn: () => fetchFolderPath(hash!, params),\r\n    enabled: !!hash && isEnabled,\r\n  });\r\n}\r\n\r\nfunction fetchFolderPath(\r\n  hash: string,\r\n  params?: Params,\r\n): Promise<FolderPathResponse> {\r\n  return apiClient\r\n    .get(`folders/${hash}/path`, {params})\r\n    .then(response => response.data);\r\n}\r\n","import React, {ReactNode, useContext} from 'react';\r\nimport {useDriveStore} from './drive-store';\r\nimport {\r\n  DrivePage,\r\n  makeFolderPage,\r\n  RootFolderPage,\r\n  SharesPage,\r\n  TrashPage,\r\n} from './drive-page/drive-page';\r\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useFolderPath} from './files/queries/use-folder-path';\r\nimport {EntryActionMenuTrigger} from './entry-actions/entry-action-menu-trigger';\r\nimport {useActiveWorkspace} from '@common/workspace/active-workspace-id-context';\r\nimport {ButtonBase} from '@ui/buttons/button-base';\r\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\r\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {MixedText} from '@ui/i18n/mixed-text';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\n\r\ninterface ItemConfig {\r\n  page: DrivePage;\r\n  label: MessageDescriptor | string;\r\n}\r\n\r\ninterface PageBreadcrumbsProps {\r\n  className?: string;\r\n}\r\nexport function PageBreadcrumbs({className}: PageBreadcrumbsProps) {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const navigate = useNavigate();\r\n  const page = useDriveStore(s => s.activePage);\r\n  const folder = page?.folder;\r\n  const query = useFolderPath({\r\n    hash: folder?.hash,\r\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash,\r\n  });\r\n  const workspace = useActiveWorkspace();\r\n  const rootItem = useRootItem();\r\n  // wait until path, folder and workspace load fully\r\n  const isLoading =\r\n    !page ||\r\n    !workspace ||\r\n    (page.isFolderPage && !folder) ||\r\n    query.fetchStatus !== 'idle';\r\n\r\n  let content: ReactNode;\r\n\r\n  if (isLoading) {\r\n    content = null;\r\n  } else {\r\n    const items: ItemConfig[] = rootItem ? [rootItem] : [];\r\n\r\n    if (query.data) {\r\n      query.data.path.forEach(parent => {\r\n        items.push({\r\n          page: makeFolderPage(parent),\r\n          label: parent.name,\r\n        });\r\n      });\r\n    }\r\n\r\n    content = (\r\n      <Breadcrumb\r\n        className={className}\r\n        size={isMobileMode ? 'md' : 'lg'}\r\n        currentIsClickable\r\n      >\r\n        {items.map((item, index) => {\r\n          const isLast = index === items.length - 1;\r\n          if (!isLast) {\r\n            return (\r\n              <BreadcrumbItem\r\n                key={item.page.uniqueId}\r\n                onSelected={() => {\r\n                  navigate(item.page.path);\r\n                }}\r\n              >\r\n                <MixedText value={item.label} />\r\n              </BreadcrumbItem>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <BreadcrumbItem key={item.page.uniqueId}>\r\n              {({isMenuItem}) => {\r\n                if (\r\n                  isMenuItem ||\r\n                  (!item.page.folder && item.page !== TrashPage)\r\n                ) {\r\n                  return <MixedText value={item.label} />;\r\n                }\r\n                return (\r\n                  <EntryActionMenuTrigger page={item.page} showIfNoActions>\r\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\r\n                      <MixedText value={item.label} />\r\n                      <ArrowDropDownIcon className=\"text-muted icon-md\" />\r\n                    </ButtonBase>\r\n                  </EntryActionMenuTrigger>\r\n                );\r\n              }}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nfunction useRootItem(): ItemConfig | null {\r\n  const page = useDriveStore(s => s.activePage);\r\n  const workspace = useActiveWorkspace();\r\n  const {user} = useAuth();\r\n\r\n  if (!page) return null;\r\n\r\n  // in workspace\r\n  if (workspace && !workspace.default) {\r\n    if (\r\n      page?.isFolderPage &&\r\n      (page?.name === RootFolderPage.name ||\r\n        page.folder?.workspace_id === workspace.id)\r\n    ) {\r\n      return {label: workspace.name, page: RootFolderPage};\r\n    }\r\n  }\r\n\r\n  if (page?.isFolderPage) {\r\n    const owner = page.folder?.users.find(u => u.owns_entry);\r\n    // inside shared folder\r\n    if (owner?.id !== user?.id) {\r\n      return {label: SharesPage.label, page: SharesPage};\r\n    }\r\n    // if folder is currently active, root item will always be root folder page\r\n    return {label: RootFolderPage.label, page: RootFolderPage};\r\n  }\r\n\r\n  // if folder page is not active, we are already at the root\r\n  return {label: page.label, page};\r\n}\r\n","import React, {ReactNode, useEffect, useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\n\r\nexport interface InfiniteScrollSentinelProps {\r\n  loaderMarginTop?: string;\r\n  children?: ReactNode;\r\n  loadMoreExtraContent?: ReactNode;\r\n  query: UseInfiniteQueryResult;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  variant?: 'infiniteScroll' | 'loadMore';\r\n  size?: 'sm' | 'md';\r\n}\r\n\r\nexport function InfiniteScrollSentinel({\r\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\r\n  children,\r\n  loaderMarginTop = 'mt-24',\r\n  style,\r\n  className,\r\n  variant: _variant = 'infiniteScroll',\r\n  loadMoreExtraContent,\r\n  size = 'sm',\r\n}: InfiniteScrollSentinelProps) {\r\n  const sentinelRef = useRef<HTMLDivElement>(null);\r\n  const isLoading = isFetchingNextPage || isInitialLoading;\r\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\r\n  const innerVariant =\r\n    _variant === 'loadMore' && loadMoreClickCount < 3\r\n      ? 'loadMore'\r\n      : 'infiniteScroll';\r\n\r\n  // don't lazy load unless sentinel has left the view after last lazy load\r\n  // 1. will prevent lazy loading until initial data is rendered and pushes sentinel out of view\r\n  // 2. when sentinel is top (chat interface) prevent load until container is scrolled to the bottom\r\n  // 3. when sentinel is bottom, prevent double lazy load if \"isLoading\" is false, but sentinel is still in view\r\n  const leftViewAfterLoading = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const sentinelEl = sentinelRef.current;\r\n    if (!sentinelEl || innerVariant === 'loadMore') return;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting) {\r\n        if (!leftViewAfterLoading.current) return;\r\n\r\n        if (hasNextPage && !isLoading) {\r\n          leftViewAfterLoading.current = false;\r\n          fetchNextPage();\r\n        }\r\n      } else {\r\n        leftViewAfterLoading.current = true;\r\n      }\r\n    });\r\n\r\n    observer.observe(sentinelEl);\r\n    return () => {\r\n      observer.unobserve(sentinelEl);\r\n    };\r\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\r\n\r\n  let content: ReactNode;\r\n\r\n  if (children) {\r\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\r\n    content = isFetchingNextPage ? children : null;\r\n  } else if (innerVariant === 'loadMore') {\r\n    content = !isInitialLoading && hasNextPage && (\r\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\r\n        {loadMoreExtraContent}\r\n        <Button\r\n          size={size === 'md' ? 'sm' : 'xs'}\r\n          className={clsx(\r\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112',\r\n          )}\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            fetchNextPage();\r\n            setLoadMoreClickCount(loadMoreClickCount + 1);\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\r\n            <Trans message=\"Load all\" />\r\n          ) : (\r\n            <Trans message=\"Show more\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    );\r\n  } else {\r\n    content = (\r\n      <AnimatePresence>\r\n        {isFetchingNextPage && (\r\n          <m.div\r\n            className={clsx('flex w-full justify-center', loaderMarginTop)}\r\n            {...opacityAnimation}\r\n          >\r\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\r\n          </m.div>\r\n        )}\r\n      </AnimatePresence>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={style}\r\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\r\n      role=\"presentation\"\r\n    >\r\n      <div ref={sentinelRef} aria-hidden />\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n","import {AnimatePresence, m} from 'framer-motion';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React from 'react';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\n\r\ninterface DropTargetMaskProps {\r\n  isVisible: boolean;\r\n}\r\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\r\n  const mask = (\r\n    <m.div\r\n      key=\"dragTargetMask\"\r\n      {...opacityAnimation}\r\n      transition={{duration: 0.3}}\r\n      className=\"pointer-events-none absolute inset-0 min-h-full w-full border-2 border-dashed border-primary bg-primary-light/30\"\r\n    >\r\n      <m.div\r\n        initial={{y: '100%', opacity: 0}}\r\n        animate={{y: '-10px', opacity: 1}}\r\n        exit={{y: '100%', opacity: 0}}\r\n        className=\"fixed bottom-0 left-0 right-0 mx-auto max-w-max rounded bg-primary p-10 text-on-primary\"\r\n      >\r\n        <Trans message=\"Drop files to upload them to this folder.\" />\r\n      </m.div>\r\n    </m.div>\r\n  );\r\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\r\n}\r\n","import React, {\r\n  KeyboardEventHandler,\r\n  MouseEventHandler,\r\n  ReactNode,\r\n  useContext,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {usePaginatedEntries} from '../files/queries/use-paginated-entries';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {SearchFilterList} from '../search/search-filter-list';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useMouseSelectionBox} from '@ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\r\nimport {useDroppable} from '@ui/interactions/dnd/use-droppable';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {EntryActionList} from '../entry-actions/entry-action-list';\r\nimport {DriveContextMenu} from '../files/drive-context-menu';\r\nimport {FileTable} from './file-table/file-table';\r\nimport {FileGrid} from './file-grid/file-grid';\r\nimport {DriveSortButton} from '../layout/sorting/drive-sort-button';\r\nimport {PageBreadcrumbs} from '../page-breadcrumbs';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {useEntries} from '../files/queries/use-entries';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {DropTargetMask} from '../drop-target-mask';\r\nimport {useSearchParams} from 'react-router';\r\nimport clsx from 'clsx';\r\nimport {MixedDraggable} from '@ui/interactions/dnd/use-draggable';\r\nimport {useDeleteEntries} from '@app/drive/files/queries/use-delete-entries';\r\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\r\nimport {getSelectedEntries} from '@app/drive/files/use-selected-entries';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\nimport {isCtrlKeyPressed} from '@ui/utils/keybinds/is-ctrl-key-pressed';\r\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\r\n\r\ninterface FileViewProps {\r\n  className?: string;\r\n}\r\nexport function FileView({className}: FileViewProps) {\r\n  const [params] = useSearchParams();\r\n  const isSearchingOrFiltering =\r\n    !!params.get('query') || !!params.get('filters');\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const query = usePaginatedEntries();\r\n  const entries = useEntries();\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n  const deleteEntries = useDeleteEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const viewMode = useDriveStore(s => s.viewMode);\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n\r\n  const {containerProps, boxProps} = useMouseSelectionBox({\r\n    containerRef,\r\n    onPointerDown: e => {\r\n      if (!(e.target as HTMLElement).closest('.entry-action-list')) {\r\n        driveState().deselectEntries('all');\r\n      }\r\n    },\r\n  });\r\n\r\n  const {droppableProps} = useDroppable({\r\n    id: 'driveRoot',\r\n    ref: containerRef,\r\n    types: ['nativeFile'],\r\n    disabled: !activePage?.canUpload,\r\n    onDragEnter: () => {\r\n      setIsDragOver(true);\r\n    },\r\n    onDragLeave: () => {\r\n      setIsDragOver(false);\r\n    },\r\n    onDrop: async (draggable: MixedDraggable) => {\r\n      if (draggable.type === 'nativeFile') {\r\n        uploadFiles(await draggable.getData());\r\n      }\r\n    },\r\n  });\r\n\r\n  if (!activePage) return null;\r\n\r\n  let content: ReactNode;\r\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\r\n    const noContentMessage = activePage.noContentMessage(\r\n      isSearchingOrFiltering,\r\n    );\r\n    content = (\r\n      <IllustratedMessage\r\n        className=\"mt-40\"\r\n        image={<SvgImage src={noContentMessage.image} />}\r\n        title={<Trans {...noContentMessage.title} />}\r\n        description={<Trans {...noContentMessage.description} />}\r\n      />\r\n    );\r\n  } else if (!query.isLoading) {\r\n    content =\r\n      viewMode === 'list' ? (\r\n        <FileTable entries={entries} />\r\n      ) : (\r\n        <FileGrid entries={entries} />\r\n      );\r\n  }\r\n\r\n  const handleContextMenu: MouseEventHandler = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    driveState().deselectEntries('all');\r\n    driveState().setContextMenuData({x: e.clientX, y: e.clientY});\r\n  };\r\n\r\n  const handleKeybinds: KeyboardEventHandler = e => {\r\n    if (e.key === 'a' && isCtrlKeyPressed(e)) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      driveState().selectEntries(entries.map(entry => entry.id));\r\n    }\r\n    if (e.key === 'Delete') {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (driveState().selectedEntries.size && !deleteEntries.isPending) {\r\n        if (activePage === TrashPage) {\r\n          driveState().setActiveActionDialog(\r\n            'confirmAndDeleteForever',\r\n            getSelectedEntries(),\r\n          );\r\n        } else {\r\n          deleteEntries.mutate({\r\n            entryIds: [...driveState().selectedEntries],\r\n            deleteForever: activePage === TrashPage,\r\n          });\r\n          driveState().selectEntries([]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx('relative outline-none', className)}\r\n      tabIndex={-1}\r\n      {...mergeProps(containerProps, droppableProps, {\r\n        onKeyDown: createEventHandler(handleKeybinds),\r\n      })}\r\n      onContextMenu={handleContextMenu}\r\n    >\r\n      <div className=\"relative flex min-h-full flex-col pt-10\">\r\n        {isMobileMode ? (\r\n          <PageBreadcrumbs className=\"mb-10 px-14\" />\r\n        ) : (\r\n          <Toolbar />\r\n        )}\r\n        <SearchFilterList />\r\n        <div className=\"relative flex-auto px-18 pb-18 md:px-24\">\r\n          <AdHost slot=\"drive\" className=\"mb-24\" />\r\n          {content}\r\n          <InfiniteScrollSentinel query={query} />\r\n        </div>\r\n        <div\r\n          {...boxProps}\r\n          className=\"pointer-events-none absolute left-0 top-0 z-10 hidden border border-primary-light bg-primary-light/20 shadow-md\"\r\n        />\r\n        <DriveContextMenu />\r\n        <DropTargetMask isVisible={isDragOver} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Toolbar() {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  return (\r\n    <div className=\"my-10 flex min-h-42 items-center justify-between gap-40 px-10 text-muted md:px-18\">\r\n      <DriveSortButton isDisabled={activePage?.disableSort} />\r\n      <EntryActionList className=\"text-muted\" />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ComponentPropsWithoutRef,\r\n  CSSProperties,\r\n  memo,\r\n  ReactElement,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {CheckCircleIcon} from '@ui/icons/material/CheckCircle';\r\nimport {\r\n  UploadedFile,\r\n  UploadedFileFromEntry,\r\n} from '@ui/utils/files/uploaded-file';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {MixedText} from '@ui/i18n/mixed-text';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {ErrorIcon} from '@ui/icons/material/Error';\r\nimport {WarningIcon} from '@ui/icons/material/Warning';\r\nimport {message} from '@ui/i18n/message';\r\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\n\r\ninterface UploadQueueProps {\r\n  file: UploadedFile | UploadedFileFromEntry;\r\n  style: CSSProperties;\r\n}\r\nexport const UploadQueueItem = memo(({file, style}: UploadQueueProps) => {\r\n  return (\r\n    <div\r\n      className=\"absolute left-0 top-0 flex w-full items-center gap-14 p-10\"\r\n      style={style}\r\n    >\r\n      <div className=\"shrink-0 rounded border p-8\">\r\n        <FileTypeIcon className=\"h-22 w-22\" mime={file.mime} />\r\n      </div>\r\n      <div className=\"min-w-0 flex-auto pr-10\">\r\n        <div className=\"mb-2 flex min-w-0 items-center gap-10\">\r\n          <div className=\"min-w-0 flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\r\n            {file.name}\r\n          </div>\r\n        </div>\r\n        <SizeInfo file={file} />\r\n      </div>\r\n      <div className=\"mr-10\">\r\n        <FileStatus file={file} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\ninterface SizeInfoProps {\r\n  file: UploadedFile | UploadedFileFromEntry;\r\n}\r\nfunction SizeInfo({file}: SizeInfoProps) {\r\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\r\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\r\n\r\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\r\n  const uploadedBytes = useMemo(\r\n    () => prettyBytes(bytesUploaded),\r\n    [bytesUploaded],\r\n  );\r\n\r\n  let statusMessage: ReactElement;\r\n  if (fileUpload?.status === 'completed') {\r\n    statusMessage = <Trans message=\"Upload complete\" />;\r\n  } else if (fileUpload?.status === 'aborted') {\r\n    statusMessage = <Trans message=\"Upload cancelled\" />;\r\n  } else if (fileUpload?.status === 'failed') {\r\n    statusMessage = <Trans message=\"Upload failed\" />;\r\n  } else {\r\n    statusMessage = (\r\n      <Trans\r\n        message=\":bytesUploaded of :totalBytes\"\r\n        values={{\r\n          bytesUploaded: uploadedBytes,\r\n          totalBytes,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div className=\"text-xs text-muted\">{statusMessage}</div>;\r\n}\r\n\r\ninterface FileStatusProps {\r\n  file: UploadedFile | UploadedFileFromEntry;\r\n}\r\nfunction FileStatus({file}: FileStatusProps) {\r\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\r\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\r\n  const percentage = fileUpload?.percentage || 0;\r\n  const status = fileUpload?.status;\r\n  const errorMessage = fileUpload?.errorMessage;\r\n\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const abortButton = (\r\n    <IconButton\r\n      size=\"xs\"\r\n      iconSize=\"sm\"\r\n      onClick={() => {\r\n        abortUpload(file.id);\r\n      }}\r\n    >\r\n      <CloseIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const progressButton = (\r\n    <ProgressCircle\r\n      aria-label=\"Upload progress\"\r\n      size=\"w-24 h-24\"\r\n      value={percentage}\r\n      trackWidth={3}\r\n    />\r\n  );\r\n\r\n  let statusButton: ReactElement;\r\n  if (status === 'failed') {\r\n    const errMessage =\r\n      errorMessage || message('This file could not be uploaded');\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\r\n          <ErrorIcon className=\"text-danger\" size=\"md\" />\r\n        </Tooltip>\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'aborted') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <WarningIcon className=\"text-warning\" size=\"md\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'completed') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else {\r\n    statusButton = (\r\n      <AnimatedStatus\r\n        onPointerEnter={e => {\r\n          if (e.pointerType === 'mouse') {\r\n            setIsHovered(true);\r\n          }\r\n        }}\r\n        onPointerLeave={e => {\r\n          if (e.pointerType === 'mouse') {\r\n            setIsHovered(false);\r\n          }\r\n        }}\r\n      >\r\n        {isHovered ? abortButton : progressButton}\r\n      </AnimatedStatus>\r\n    );\r\n  }\r\n\r\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\r\n}\r\n\r\ninterface AnimatedStatusProps\r\n  extends Omit<\r\n    ComponentPropsWithoutRef<'div'>,\r\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\r\n  > {\r\n  children: ReactElement;\r\n}\r\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\r\n  return (\r\n    <m.div\r\n      {...domProps}\r\n      initial={{scale: 0, opacity: 0}}\r\n      animate={{scale: 1, opacity: 1}}\r\n      exit={{scale: 0, opacity: 0}}\r\n    >\r\n      {children}\r\n    </m.div>\r\n  );\r\n}\r\n","import {ReactElement, useRef} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {UploadQueueItem} from './upload-queue-item';\r\nimport {useVirtualizer} from '@tanstack/react-virtual';\r\n\r\nexport function UploadQueue() {\r\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <m.div\r\n          key=\"upload-queue\"\r\n          className=\"fixed bottom-16 right-16 z-modal w-375 rounded border bg text-sm shadow-xl\"\r\n          initial={{y: '100%', opacity: 0}}\r\n          animate={{y: 0, opacity: 1}}\r\n          exit={{y: '100%', opacity: 0}}\r\n        >\r\n          <Header />\r\n          <UploadList />\r\n        </m.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport function Header() {\r\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\r\n  const completedUploadsCount = useFileUploadStore(\r\n    s => s.completedUploadsCount,\r\n  );\r\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\r\n\r\n  let message: ReactElement;\r\n  if (inProgressUploadsCount) {\r\n    message = (\r\n      <Trans\r\n        message=\"Uploading :count files\"\r\n        values={{count: inProgressUploadsCount}}\r\n      />\r\n    );\r\n  } else if (completedUploadsCount) {\r\n    message = (\r\n      <Trans\r\n        message=\"Uploaded :count files\"\r\n        values={{count: completedUploadsCount}}\r\n      />\r\n    );\r\n  } else {\r\n    message = <Trans message=\"No active uploads\" />;\r\n  }\r\n\r\n  // only allow closing upload queue if there are no active uploads\r\n  return (\r\n    <div className=\"flex min-h-[45px] items-center justify-between gap-10 border-b bg-alt px-10 py-4\">\r\n      {message}\r\n      {inProgressUploadsCount === 0 ? (\r\n        <IconButton\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            driveState().setUploadQueueIsOpen(false);\r\n            // wait for upload queue panel animation to complete, then clear inactive uploads\r\n            setTimeout(() => {\r\n              clearInactive();\r\n            }, 200);\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : undefined}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UploadList() {\r\n  const uploads = useFileUploadStore(s => s.fileUploads);\r\n  const uploadsArray = [...uploads.values()];\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const virtualizer = useVirtualizer({\r\n    count: uploads.size,\r\n    getScrollElement: () => ref.current,\r\n    estimateSize: () => 60,\r\n    overscan: 4,\r\n  });\r\n\r\n  return (\r\n    <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\r\n      <div\r\n        className=\"relative w-full\"\r\n        style={{\r\n          height: `${virtualizer.getTotalSize()}px`,\r\n        }}\r\n      >\r\n        {virtualizer.getVirtualItems().map(virtualItem => {\r\n          const upload = uploadsArray[virtualItem.index];\r\n          return (\r\n            <UploadQueueItem\r\n              style={{\r\n                height: `${virtualItem.size}px`,\r\n                transform: `translateY(${virtualItem.start}px)`,\r\n              }}\r\n              key={upload.file.id}\r\n              file={upload.file}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__6b065fb0__\"","import React, {ReactNode, useContext} from 'react';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\r\n\r\ninterface HeaderProps {\r\n  entryType: string;\r\n  entryName: ReactNode;\r\n}\r\nexport function DetailsSidebarHeader({entryType, entryName}: HeaderProps) {\r\n  const {setRightSidenavStatus} = useContext(DashboardLayoutContext);\r\n  return (\r\n    <div className=\"mb-38 flex items-center gap-16 text-text-main\">\r\n      <FileTypeIcon className=\"h-24 w-24\" type={entryType} />\r\n      <div className=\"mr-auto min-w-0 flex-auto text-ellipsis break-words text-xl font-normal\">\r\n        {entryName}\r\n      </div>\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"flex-shrink-0\"\r\n        onClick={() => {\r\n          setRightSidenavStatus('closed');\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  margin?: string;\r\n  className?: string;\r\n}\r\nexport function DetailsSidebarSectionHeader({\r\n  children,\r\n  margin = 'mb-20',\r\n}: Props) {\r\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Tag} from '@common/tags/tag';\r\n\r\ninterface Response extends BackendResponse {\r\n  tags: Tag[];\r\n}\r\n\r\ninterface Params {\r\n  taggableType: string;\r\n  taggableId: string | number;\r\n  initialData?: Tag[];\r\n  notType?: string;\r\n  type?: string;\r\n}\r\n\r\nexport function useTaggableTags(params: Params) {\r\n  return useQuery<Response>({\r\n    queryKey: getQueryKey(params),\r\n    queryFn: () => fetchTaggableTags(params),\r\n    initialData: params.initialData ? {tags: params.initialData} : undefined,\r\n  });\r\n}\r\n\r\nfunction getQueryKey(params: Params) {\r\n  const {taggableType, taggableId, type, notType} = params;\r\n  const key = ['tags', 'taggable', taggableType, `${taggableId}`];\r\n  if (type != null) {\r\n    key.push(type);\r\n  }\r\n  if (notType != null) {\r\n    key.push(notType);\r\n  }\r\n  return key;\r\n}\r\n\r\nexport function invalidateTaggableTagsQuery({\r\n  taggableType,\r\n  taggableIds,\r\n}: {\r\n  taggableType: string;\r\n  taggableIds: (string | number)[];\r\n}) {\r\n  return Promise.allSettled(\r\n    taggableIds.map(taggableId =>\r\n      queryClient.invalidateQueries({\r\n        queryKey: getQueryKey({taggableType, taggableId}),\r\n      }),\r\n    ),\r\n  );\r\n}\r\n\r\nasync function fetchTaggableTags({\r\n  taggableType,\r\n  taggableId,\r\n  notType,\r\n  type,\r\n}: Params) {\r\n  return apiClient\r\n    .get<Response>(`taggable/${taggableType}/${taggableId}/list-tags`, {\r\n      params: {\r\n        notType,\r\n        type,\r\n      },\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {invalidateTaggableTagsQuery} from '@common/tags/use-taggable-tags';\r\n\r\ninterface Payload {\r\n  tagId: number;\r\n  taggableIds: (number | string)[];\r\n  taggableType: string;\r\n}\r\n\r\nexport function useDetachTagFromTaggables() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => detachTag(payload),\r\n    onSuccess: (_, payload) => {\r\n      invalidateTaggableTagsQuery(payload);\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction detachTag(payload: Payload): Promise<BackendResponse> {\r\n  return apiClient.post(`taggable/detach-tag`, payload).then(r => r.data);\r\n}\r\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Tag} from '@common/tags/tag';\r\n\r\ninterface Response extends BackendResponse {\r\n  pagination: PaginationResponse<Tag>;\r\n}\r\n\r\ninterface Params {\r\n  type?: string;\r\n  notType?: string;\r\n  perPage?: number;\r\n  query?: string;\r\n  userId?: number;\r\n}\r\n\r\nexport function useTags(params: Params) {\r\n  return useQuery({\r\n    queryKey: ['tags', params],\r\n    queryFn: ({signal}) => fetchTags(params, signal),\r\n    placeholderData: keepPreviousData,\r\n  });\r\n}\r\n\r\nasync function fetchTags(params: Params, signal?: AbortSignal) {\r\n  if (params.query) {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n  }\r\n  return apiClient\r\n    .get<Response>(`tags`, {\r\n      params: {paginate: 'simple', ...params},\r\n      signal: params.query ? signal : undefined,\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {invalidateTaggableTagsQuery} from '@common/tags/use-taggable-tags';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload {\r\n  tagName: string;\r\n  tagType?: string;\r\n  taggableIds: number[];\r\n  taggableType: string;\r\n  userId?: number;\r\n}\r\n\r\nexport function useAttachTagToTaggables() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => attachTag(payload),\r\n    onSuccess: async (_, payload) => {\r\n      invalidateTaggableTagsQuery(payload);\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction attachTag(payload: Payload): Promise<Response> {\r\n  return apiClient.post(`taggable/attach-tag`, payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {List, ListItem} from '@ui/list/list';\r\nimport {useTags} from '@common/tags/use-tags';\r\nimport {PushPinIcon} from '@ui/icons/material/PushPin';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {CheckIcon} from '@ui/icons/material/Check';\r\nimport clsx from 'clsx';\r\nimport {useMemo, useState} from 'react';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {useDetachTagFromTaggables} from '@common/tags/use-detach-tag-from-taggables';\r\nimport {useAttachTagToTaggables} from '@common/tags/use-attach-tag-to-taggables';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\n\r\ninterface Props {\r\n  attachedTags?: Tag[];\r\n  tagType?: string;\r\n  notTagType?: string;\r\n  taggableType: string;\r\n  taggableIds: number[];\r\n  userId?: number;\r\n  isLoading?: boolean;\r\n  onChange?: (tagId: number) => void;\r\n}\r\nexport function ManageTagsDialog({\r\n  attachedTags: propsAttachedTags,\r\n  tagType,\r\n  notTagType,\r\n  taggableType,\r\n  taggableIds,\r\n  userId,\r\n  isLoading,\r\n  onChange,\r\n}: Props) {\r\n  const {trans} = useTrans();\r\n  const [query, setQuery] = useState('');\r\n  const {\r\n    data,\r\n    isPlaceholderData,\r\n    isLoading: queryIsLoading,\r\n  } = useTags({\r\n    type: tagType,\r\n    notType: notTagType,\r\n    query,\r\n    userId,\r\n  });\r\n  const detachTag = useDetachTagFromTaggables();\r\n  const attachTag = useAttachTagToTaggables();\r\n\r\n  // if all tags does not include tag in attached tags, add it to the top\r\n  const {tags, attachedTagIds} = useMemo(() => {\r\n    const allTags = data?.pagination.data || [];\r\n    const attachedTags = propsAttachedTags || [];\r\n    const attachedTagIds = attachedTags.map(tag => tag.id);\r\n\r\n    const tags = allTags.filter(tag => !attachedTagIds.includes(tag.id));\r\n    tags.unshift(...attachedTags);\r\n    return {tags, attachedTagIds};\r\n  }, [propsAttachedTags, data]);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogBody padding=\"p-8\">\r\n        <form>\r\n          <TextField\r\n            placeholder={trans({message: 'Type tag name...'})}\r\n            inputBorder=\"border-b\"\r\n            inputRadius=\"rounded-none\"\r\n            inputRing=\"ring-0\"\r\n            inputShadow=\"shadow-none\"\r\n            startAdornment={<SearchIcon />}\r\n            value={query}\r\n            onChange={e => setQuery(e.target.value)}\r\n            endAdornment={\r\n              isPlaceholderData && (\r\n                <ProgressCircle isIndeterminate size=\"w-24 h-24\" />\r\n              )\r\n            }\r\n          />\r\n        </form>\r\n        <List className=\"compact-scrollbar h-320 overflow-y-auto stable-scrollbar\">\r\n          {tags.map(tag => {\r\n            const isAttached = attachedTagIds.includes(tag.id);\r\n            const isDisabled =\r\n              attachTag.isPending || detachTag.isPending || isLoading;\r\n            return (\r\n              <ListItem\r\n                isDisabled={isDisabled}\r\n                onSelected={() => {\r\n                  if (isAttached) {\r\n                    detachTag.mutate(\r\n                      {\r\n                        tagId: tag.id,\r\n                        taggableIds,\r\n                        taggableType,\r\n                      },\r\n                      {\r\n                        onSuccess: () => onChange?.(tag.id),\r\n                      },\r\n                    );\r\n                  } else {\r\n                    attachTag.mutate(\r\n                      {\r\n                        taggableType,\r\n                        taggableIds,\r\n                        tagName: tag.name,\r\n                        userId,\r\n                        tagType,\r\n                      },\r\n                      {\r\n                        onSuccess: () => onChange?.(tag.id),\r\n                      },\r\n                    );\r\n                  }\r\n                }}\r\n                className={clsx(\r\n                  isAttached &&\r\n                    (isDisabled ? 'text-primary-light' : 'text-primary'),\r\n                )}\r\n                startIcon={<PushPinIcon size=\"xs\" />}\r\n                key={tag.id}\r\n                endSection={\r\n                  isAttached ? (\r\n                    <CheckIcon size=\"sm\" className=\"block text-primary\" />\r\n                  ) : (\r\n                    <div className=\"h-20 w-20\" />\r\n                  )\r\n                }\r\n              >\r\n                {tag.display_name || tag.name}\r\n              </ListItem>\r\n            );\r\n          })}\r\n          {!isPlaceholderData && !data?.pagination.data.length && query && (\r\n            <ListItem\r\n              startIcon={<PushPinIcon size=\"xs\" />}\r\n              onSelected={() => {\r\n                attachTag.mutate(\r\n                  {\r\n                    taggableType,\r\n                    taggableIds,\r\n                    tagName: query,\r\n                    userId,\r\n                    tagType,\r\n                  },\r\n                  {\r\n                    onSuccess: r => {\r\n                      setQuery('');\r\n                      onChange?.(r.tag.id);\r\n                    },\r\n                  },\r\n                );\r\n              }}\r\n            >\r\n              <Trans message={`Create tag \":name\"`} values={{name: query}} />\r\n            </ListItem>\r\n          )}\r\n          {data && !tags.length && !query && (\r\n            <li className=\"text-center text-muted\">\r\n              <Trans message=\"No tags found\" />\r\n            </li>\r\n          )}\r\n          {queryIsLoading && (\r\n            <li className=\"flex justify-center\">\r\n              <ProgressCircle isIndeterminate size=\"w-24 h24\" />\r\n            </li>\r\n          )}\r\n        </List>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DriveEntry} from '@app/drive/files/drive-entry';\r\nimport React from 'react';\r\nimport {useDetachTagFromTaggables} from '@common/tags/use-detach-tag-from-taggables';\r\nimport {useTaggableTags} from '@common/tags/use-taggable-tags';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {ManageTagsDialog} from '@common/tags/manage-tags-dialog';\r\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\r\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {useAuth} from '@common/auth/use-auth';\r\n\r\ninterface Props {\r\n  entry: DriveEntry;\r\n}\r\nexport function DetailsSidebarTags({entry}: Props) {\r\n  const {user} = useAuth();\r\n  const detachTag = useDetachTagFromTaggables();\r\n  const {data, isFetching} = useTaggableTags({\r\n    taggableType: 'fileEntry',\r\n    taggableId: entry.id,\r\n    initialData: entry.tags?.filter(tag => tag.type !== 'label'),\r\n    type: 'custom',\r\n  });\r\n  return (\r\n    <div className=\"mt-20 border-t pt-20\">\r\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\r\n        <Trans message=\"Tags\" />\r\n      </DetailsSidebarSectionHeader>\r\n      <div className=\"flex items-center gap-8\">\r\n        <ChipList\r\n          size=\"sm\"\r\n          radius=\"rounded-button\"\r\n          startButton={\r\n            <DialogTrigger type=\"modal\">\r\n              <Button\r\n                variant=\"outline\"\r\n                startIcon={<AddIcon />}\r\n                size=\"2xs\"\r\n                className=\"min-h-26\"\r\n              >\r\n                <Trans message=\"Add tag\" />\r\n              </Button>\r\n              <ManageTagsDialog\r\n                attachedTags={data?.tags}\r\n                isLoading={isFetching}\r\n                tagType=\"custom\"\r\n                taggableType=\"fileEntry\"\r\n                taggableIds={[entry.id]}\r\n                userId={user?.id}\r\n              />\r\n            </DialogTrigger>\r\n          }\r\n        >\r\n          {data?.tags.map(tag => (\r\n            <Chip\r\n              key={tag.id}\r\n              disabled={detachTag.isPending || isFetching}\r\n              onRemove={() => {\r\n                detachTag.mutate({\r\n                  tagId: tag.id,\r\n                  taggableIds: [entry.id],\r\n                  taggableType: 'fileEntry',\r\n                });\r\n              }}\r\n            >\r\n              {tag.display_name || tag.name}\r\n            </Chip>\r\n          ))}\r\n        </ChipList>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {useSelectedEntryParent} from '@app/drive/files/use-selected-entries';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport React, {ReactNode, useMemo} from 'react';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {FolderIcon} from '@ui/icons/material/Folder';\r\nimport {\r\n  getPathForFolder,\r\n  RootFolderPage,\r\n} from '@app/drive/drive-page/drive-page';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {DriveEntry} from '@app/drive/files/drive-entry';\r\nimport {GroupsIcon} from '@ui/icons/material/Groups';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {driveState} from '@app/drive/drive-store';\r\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\r\nimport {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\r\nimport {DetailsSidebarTags} from '@app/drive/details-sidebar/details-sidebar-tags';\r\nimport {FileThumbnail} from '@common/uploads/components/file-type-icon/file-thumbnail';\r\nimport {Avatar} from '@ui/avatar/avatar';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\n\r\ninterface EntryPropertiesProps {\r\n  entry: DriveEntry;\r\n}\r\nexport function DetailsSidebarProperties({entry}: EntryPropertiesProps) {\r\n  return (\r\n    <div>\r\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\r\n      {entry.type === 'image' && (\r\n        <FileThumbnail className=\"mb-20\" file={entry} />\r\n      )}\r\n      <div>\r\n        <DetailsSidebarSectionHeader>\r\n          <Trans message=\"Who has access\" />\r\n        </DetailsSidebarSectionHeader>\r\n        <div className=\"flex items-center gap-14\">\r\n          {entry.workspace_id ? (\r\n            <div className=\"flex h-32 w-32 items-center justify-center rounded-full border\">\r\n              <GroupsIcon className=\"icon-md\" />\r\n            </div>\r\n          ) : null}\r\n          {entry.users.map(user => (\r\n            <Tooltip label={user.name} key={user.id}>\r\n              <Avatar src={user.image} size=\"md\" circle />\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n        {entry.permissions['files.update'] && (\r\n          <Button\r\n            className=\"mt-20 block\"\r\n            variant=\"link\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              driveState().setActiveActionDialog('share', [entry]);\r\n            }}\r\n          >\r\n            <Trans message=\"Manage Access\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <PropertyList entry={entry} />\r\n      <DetailsSidebarTags entry={entry} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  entry: DriveEntry;\r\n}\r\nfunction PropertyList({entry}: Props) {\r\n  const parent = useSelectedEntryParent();\r\n  const navigate = useNavigate();\r\n  const owner = entry.users.find(user => user.owns_entry);\r\n  const prettySize = useMemo(\r\n    () => prettyBytes(entry.file_size),\r\n    [entry.file_size],\r\n  );\r\n\r\n  return (\r\n    <div className=\"mt-20 border-t pt-20\">\r\n      <DetailsSidebarSectionHeader>\r\n        <Trans message=\"Properties\" />\r\n      </DetailsSidebarSectionHeader>\r\n      <PropertyItem\r\n        label={<Trans message=\"Type\" />}\r\n        value={\r\n          <span className=\"capitalize\">\r\n            <Trans message={entry.type} />\r\n          </span>\r\n        }\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Size\" />}\r\n        value={entry.file_size ? prettySize : '-'}\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Location\" />}\r\n        value={\r\n          <Button\r\n            variant=\"link\"\r\n            startIcon={<FolderIcon />}\r\n            onClick={() => {\r\n              navigate(\r\n                parent ? getPathForFolder(parent.hash) : RootFolderPage.path,\r\n              );\r\n            }}\r\n          >\r\n            {parent ? parent.name : <Trans message=\"Root\" />}\r\n          </Button>\r\n        }\r\n      />\r\n      {owner && (\r\n        <PropertyItem label={<Trans message=\"Owner\" />} value={owner.name} />\r\n      )}\r\n      <PropertyItem\r\n        label={<Trans message=\"Modified\" />}\r\n        value={<FormattedDate date={entry.updated_at} />}\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Created\" />}\r\n        value={<FormattedDate date={entry.updated_at} />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PropertyItemProps {\r\n  label: ReactNode;\r\n  value: ReactNode;\r\n}\r\nfunction PropertyItem({label, value}: PropertyItemProps) {\r\n  return (\r\n    <div className=\"mb-14 flex items-center\">\r\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\r\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {useSelectedEntry} from '../files/use-selected-entries';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport detailedExamination from './detailed-examination.svg';\r\nimport clsx from 'clsx';\r\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\r\nimport {DetailsSidebarProperties} from '@app/drive/details-sidebar/details-sidebar-properties';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\n\r\ninterface DetailsSidebarProps {\r\n  className?: string;\r\n}\r\nexport function DetailsSidebar({className}: DetailsSidebarProps) {\r\n  const selectedEntry = useSelectedEntry();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'h-full overflow-y-auto border-l bg p-18 text-sm text-muted',\r\n      )}\r\n    >\r\n      {selectedEntry ? (\r\n        <DetailsSidebarProperties entry={selectedEntry} />\r\n      ) : (\r\n        <NothingSelected />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NothingSelected() {\r\n  return (\r\n    <Fragment>\r\n      <DetailsSidebarHeader\r\n        entryType=\"folder\"\r\n        entryName={<Trans message=\"All files\" />}\r\n      />\r\n      <IllustratedMessage\r\n        image={<SvgImage src={detailedExamination} />}\r\n        description={\r\n          <Trans message=\"Select file or folder to see details here\" />\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\n\r\ninterface Response extends BackendResponse {\r\n  fileEntry: FileEntry;\r\n}\r\n\r\ninterface Payload {\r\n  entryId: number;\r\n  name: string;\r\n  initialName: string;\r\n}\r\n\r\nexport function useRenameEntry(form: UseFormReturn<any>) {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => renameEntry(payload),\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message(':oldName renamed to :newName', {\r\n          values: {oldName: p.initialName, newName: r.fileEntry.name},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction renameEntry({entryId, ...payload}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .put(`file-entries/${entryId}`, payload)\r\n    .then(response => response.data);\r\n}\r\n","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useRenameEntry} from '../queries/use-rename-entry';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Form} from '@ui/forms/form';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DriveEntry} from '../drive-entry';\r\n\r\ninterface FormValue {\r\n  name?: string;\r\n}\r\n\r\ninterface RenameEntryDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function RenameEntryDialog({entries}: RenameEntryDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const initialName = entries[0]?.name;\r\n  const form = useForm({defaultValues: {name: initialName}});\r\n  const renameEntry = useRenameEntry(form);\r\n\r\n  const onSubmit = (e: Required<FormValue>) => {\r\n    renameEntry.mutate(\r\n      {\r\n        entryId: entries[0].id,\r\n        name: e.name,\r\n        initialName,\r\n      },\r\n      {onSuccess: close},\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Rename\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form onSubmit={onSubmit} form={form} id={formId}>\r\n          <FormTextField\r\n            placeholder=\"Enter a name...\"\r\n            aria-label=\"Entry name\"\r\n            autoFocus\r\n            name=\"name\"\r\n            required\r\n            minLength={3}\r\n            maxLength={200}\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"flat\" onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          type=\"submit\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={renameEntry.isPending || !form.formState.isDirty}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveFolder} from '../drive-entry';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\n\r\ninterface Response extends BackendResponse {\r\n  folder: DriveFolder;\r\n}\r\n\r\ninterface CreateFolderProps {\r\n  name: string;\r\n  parentId?: number | null;\r\n}\r\n\r\nfunction createFolder({name, parentId}: CreateFolderProps): Promise<Response> {\r\n  return apiClient\r\n    .post('folders', {\r\n      name,\r\n      parentId: parentId === 0 ? null : parentId,\r\n    })\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useCreateFolder(form: UseFormReturn<any>) {\r\n  return useMutation({\r\n    mutationFn: ({name, parentId}: CreateFolderProps) => {\r\n      return createFolder({name, parentId});\r\n    },\r\n    onSuccess: () => invalidateEntryQueries(),\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {Form} from '@ui/forms/form';\r\nimport {useCreateFolder} from '../queries/create-folder';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\n\r\ninterface FormValue {\r\n  name?: string;\r\n}\r\n\r\ninterface NewFolderDialogProps {\r\n  parentId: number;\r\n}\r\nexport function NewFolderDialog({parentId}: NewFolderDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const {trans} = useTrans();\r\n  const form = useForm({\r\n    defaultValues: {\r\n      name: trans({message: 'Untitled Folder'}),\r\n    },\r\n  });\r\n  const createFolder = useCreateFolder(form);\r\n\r\n  const onSubmit = (value: Required<FormValue>) => {\r\n    createFolder.mutate(\r\n      {...value, parentId},\r\n      {\r\n        onSuccess: response => {\r\n          close(response.folder);\r\n          toast(message('Folder created'));\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"New Folder\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form onSubmit={onSubmit} form={form} id={formId}>\r\n          <FormTextField\r\n            placeholder={trans({\r\n              message: 'Enter a name...',\r\n            })}\r\n            aria-label=\"Entry name\"\r\n            autoFocus\r\n            autoSelectText\r\n            name=\"name\"\r\n            required\r\n            minLength={3}\r\n            maxLength={200}\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"flat\" onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          type=\"submit\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={createFolder.isPending}\r\n        >\r\n          <Trans message=\"Create\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {DriveEntry} from '@app/drive/files/drive-entry';\r\nimport {createElement, Fragment, useState} from 'react';\r\nimport {useShareAction} from '@app/drive/entry-actions/use-entry-actions';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {useEntries} from '@app/drive/files/queries/use-entries';\r\nimport {FilePreviewDialog} from '@common/uploads/components/file-preview/file-preview-dialog';\r\n\r\ninterface EntryPreviewDialogProps {\r\n  selectedEntry: DriveEntry;\r\n}\r\nexport function EntryPreviewDialog({selectedEntry}: EntryPreviewDialogProps) {\r\n  const files = useEntries().filter(entry => entry.type !== 'folder');\r\n  const defaultActiveIndex = files.findIndex(\r\n    file => file.id === selectedEntry?.id,\r\n  );\r\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\r\n  return (\r\n    <FilePreviewDialog\r\n      allowDownload={selectedEntry.permissions['files.download']}\r\n      headerActionsLeft={\r\n        <DriveActions activeIndex={activeIndex} entries={files} />\r\n      }\r\n      activeIndex={activeIndex}\r\n      onActiveIndexChange={setActiveIndex}\r\n      entries={files}\r\n    />\r\n  );\r\n}\r\n\r\ninterface DriveActionsProps {\r\n  activeIndex: number;\r\n  entries: DriveEntry[];\r\n}\r\nfunction DriveActions({activeIndex, entries}: DriveActionsProps) {\r\n  const selectedEntry = entries[activeIndex];\r\n  const share = useShareAction([selectedEntry]);\r\n  if (!selectedEntry || !share) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        className=\"md:hidden\"\r\n        onClick={() => {\r\n          share.execute();\r\n        }}\r\n      >\r\n        {createElement(share.icon)}\r\n      </IconButton>\r\n      <Button\r\n        className=\"max-md:hidden\"\r\n        variant=\"text\"\r\n        startIcon={createElement(share.icon)}\r\n        onClick={() => {\r\n          share.execute();\r\n        }}\r\n      >\r\n        <Trans {...share.label} />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {DriveEntryPermissions} from '../../files/drive-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\nexport interface ShareEntryPayload {\r\n  emails: string[];\r\n  permissions: DriveEntryPermissions;\r\n  entryId: number;\r\n  scheduledAt : string;\r\n  premium:boolean;\r\n  price:string;\r\n}\r\n\r\nfunction shareEntry({\r\n  entryId,\r\n  ...payload\r\n}: ShareEntryPayload): Promise<BackendResponse> {\r\n  return apiClient\r\n    .post(`file-entries/${entryId}/share`, payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useShareEntry() {\r\n  return useMutation({\r\n    mutationFn: (payload: ShareEntryPayload) => shareEntry(payload),\r\n    onSuccess: () => {\r\n      invalidateEntryQueries();\r\n    },\r\n    onError: err => {\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        const response = err.response.data as BackendErrorResponse;\r\n        if (response.errors?.emails) {\r\n          toast.danger(response.errors?.emails[0]);\r\n        } else {\r\n          showHttpErrorToast(err);\r\n        }\r\n      }\r\n    },\r\n  });\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\r\n\r\nexport interface DriveEntry extends FileEntry {\r\n  users: DriveEntryUser[];\r\n  workspace_id?: number;\r\n  permissions: {\r\n    'files.create': boolean;\r\n    'files.update': boolean;\r\n    'files.delete': boolean;\r\n    'files.download': boolean;\r\n  };\r\n\r\n}\r\n\r\nexport interface DriveFolder extends DriveEntry {\r\n  type: 'folder';\r\n  model_type?: string;\r\n}\r\n\r\nexport interface DriveEntryUser {\r\n  id: number;\r\n  email: string;\r\n  name: string;\r\n  image?: string;\r\n  owns_entry: boolean;\r\n  entry_permissions: DriveEntryPermissions;\r\n  price:number;\r\n}\r\n\r\nexport interface DriveEntryPermissions {\r\n  edit?: boolean;\r\n  view?: boolean;\r\n  download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n  edit: true,\r\n  view: true,\r\n  download: true,\r\n};\r\n","import {Button} from '@ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\r\nimport {\r\n  DRIVE_ENTRY_FULL_PERMISSIONS,\r\n  DriveEntryPermissions,\r\n  DriveEntryUser,\r\n} from '../files/drive-entry';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\n\r\nexport interface PermissionSelectorItem {\r\n  key: keyof DriveEntryPermissions;\r\n  value: DriveEntryPermissions;\r\n  label: MessageDescriptor;\r\n}\r\n\r\nexport const PermissionSelectorItems: PermissionSelectorItem[] = [\r\n  {\r\n    key: 'view',\r\n    value: {view: true},\r\n    label: message('Can view'),\r\n  },\r\n  {\r\n    key: 'download',\r\n    value: {view: true, download: true},\r\n    label: message('Can Download'),\r\n  },\r\n  {\r\n    key: 'edit',\r\n    value: DRIVE_ENTRY_FULL_PERMISSIONS,\r\n    label: message('Can edit'),\r\n  },\r\n];\r\n\r\ninterface Props {\r\n  onChange: (value: PermissionSelectorItem) => void;\r\n  value: PermissionSelectorItem;\r\n  isDisabled?: boolean;\r\n}\r\nexport function PermissionSelector({value, onChange, isDisabled}: Props) {\r\n  return (\r\n    <MenuTrigger\r\n      selectedValue={value.key}\r\n      selectionMode=\"single\"\r\n      onSelectionChange={key => {\r\n        if (key !== value.key) {\r\n          onChange(PermissionSelectorItems.find(p => p.key === key)!);\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"chip\"\r\n        size=\"xs\"\r\n        endIcon={<ArrowDropDownIcon />}\r\n        disabled={isDisabled}\r\n      >\r\n        <Trans {...value.label} />\r\n      </Button>\r\n      <Menu>\r\n        {PermissionSelectorItems.map(item => {\r\n          return (\r\n            <MenuItem key={item.key} value={item.key}>\r\n              <Trans {...item.label} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n\r\nexport function getPermissionItemForUser(\r\n  user: DriveEntryUser,\r\n): PermissionSelectorItem {\r\n  const {download, edit} = user.entry_permissions;\r\n  if (edit) {\r\n    return PermissionSelectorItems.find(item => item.key === 'edit')!;\r\n  }\r\n  if (download) {\r\n    return PermissionSelectorItems.find(item => item.key === 'download')!;\r\n  }\r\n  return PermissionSelectorItems.find(item => item.key === 'view')!;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {DriveEntryPermissions} from '../../files/drive-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\nexport interface ChangePermissionsPayload {\r\n  userId: number;\r\n  permissions: DriveEntryPermissions;\r\n  entryId: number;\r\n}\r\n\r\nexport function useChangePermission() {\r\n  return useMutation({\r\n    mutationFn: (payload: ChangePermissionsPayload) =>\r\n      changePermission(payload),\r\n    onSuccess: () => {\r\n      invalidateEntryQueries();\r\n      toast(message('Updated user permissions'));\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not update permissions')),\r\n  });\r\n}\r\n\r\nfunction changePermission({\r\n  entryId,\r\n  ...payload\r\n}: ChangePermissionsPayload): Promise<BackendResponse> {\r\n  return apiClient\r\n    .put(`file-entries/${entryId}/change-permissions`, payload)\r\n    .then(response => response.data);\r\n}\r\n","import {useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport clsx from 'clsx';\r\nimport {DriveEntry, DriveEntryUser} from '../files/drive-entry';\r\nimport {\r\n  getPermissionItemForUser,\r\n  PermissionSelector,\r\n  PermissionSelectorItem,\r\n} from './permission-selector';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {useChangePermission} from './queries/use-change-permission';\r\nimport {useUnshareEntries} from './queries/use-unshare-entries';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {UserAvatar} from '@common/auth/user-avatar';\r\n\r\ninterface MemberListProps {\r\n  className?: string;\r\n  entry: DriveEntry;\r\n}\r\n\r\nexport function MemberList({className, entry}: MemberListProps) {\r\n  if (!entry) return null;\r\n\r\n  const users = entry.users;\r\n\r\n  return (\r\n    <div className={clsx(className, 'overflow-hidden')}>\r\n      <div className=\"mb-14 text-sm\">\r\n        <Trans message=\"Who has access\" />\r\n      </div>\r\n      <AnimatePresence initial={false}>\r\n        {users.map(user => (\r\n          <MemberListItem key={user.id} user={user} entry={entry} />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MemberListItemProps {\r\n  user: DriveEntryUser;\r\n  entry: DriveEntry;\r\n}\r\nfunction MemberListItem({user, entry}: MemberListItemProps) {\r\n  return (\r\n    <m.div\r\n      initial={{x: '-100%', opacity: 0}}\r\n      animate={{x: 0, opacity: 1}}\r\n      exit={{x: '100%', opacity: 0}}\r\n      transition={{type: 'tween', duration: 0.125}}\r\n      className=\"mb-20 flex items-center gap-14 text-sm\"\r\n      key={user.id}\r\n    >\r\n      <UserAvatar user={user as any} circle size=\"w-44 h-44\" />\r\n      <div>\r\n        <div>{user.name}</div>\r\n        <div className=\"text-muted\">{user.email}</div>\r\n      </div>\r\n      <div className=\"ml-auto\">\r\n        {user.owns_entry ? (\r\n          <span className=\"text-muted\">\r\n            <Trans message=\"Owner\" />\r\n          </span>\r\n        ) : (\r\n          <ActionButtons user={user} entry={entry} />\r\n        )}\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface ActionButtonsProps {\r\n  user: DriveEntryUser;\r\n  entry: DriveEntry;\r\n}\r\nfunction ActionButtons({user, entry}: ActionButtonsProps) {\r\n  const changePermissions = useChangePermission();\r\n  const unshareEntry = useUnshareEntries();\r\n  const [activePermission, setActivePermission] =\r\n    useState<PermissionSelectorItem>(() => {\r\n      return getPermissionItemForUser(user);\r\n    });\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <PermissionSelector\r\n        isDisabled={changePermissions.isPending}\r\n        onChange={item => {\r\n          changePermissions.mutate({\r\n            userId: user.id,\r\n            permissions: item.value,\r\n            entryId: entry.id,\r\n          });\r\n          setActivePermission(item);\r\n        }}\r\n        value={activePermission}\r\n      />\r\n      <IconButton\r\n        disabled={unshareEntry.isPending}\r\n        onClick={() => {\r\n          unshareEntry.mutate(\r\n            {userId: user.id, entryIds: [entry.id]},\r\n            {\r\n              onSuccess: () => {\r\n                toast(message('Member removed'));\r\n              },\r\n              onError: err =>\r\n                showHttpErrorToast(err, message('Could not remove member')),\r\n            },\r\n          );\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Button } from '@ui/buttons/button';\r\nimport { useShareEntry } from './queries/use-share-entry';\r\nimport {\r\n  PermissionSelector,\r\n  PermissionSelectorItem,\r\n  PermissionSelectorItems,\r\n} from './permission-selector';\r\nimport { MemberList } from './member-list';\r\nimport {\r\n  ChipField,\r\n  ChipValue,\r\n} from '@ui/forms/input-field/chip-field/chip-field';\r\nimport { useTrans } from '@ui/i18n/use-trans';\r\nimport { Trans } from '@ui/i18n/trans';\r\nimport { DriveEntry } from '../files/drive-entry';\r\nimport { Item } from '@ui/forms/listbox/item';\r\nimport { useSettings } from '@ui/settings/use-settings';\r\nimport { useNormalizedModels } from '@common/ui/normalized-model/use-normalized-models';\r\nimport { isEmail } from '@ui/utils/string/is-email';\r\nimport { Avatar } from '@ui/avatar/avatar';\r\nimport { toast } from '@ui/toast/toast';\r\nimport { Switch } from '@ui/forms/toggle/switch';\r\n\r\ninterface SharePanelProps {\r\n  className?: string;\r\n  entry: DriveEntry;\r\n}\r\nexport function SharePanel({ className, entry }: SharePanelProps) {\r\n  const { trans } = useTrans();\r\n  const { share } = useSettings();\r\n  const shareEntry = useShareEntry();\r\n  const [chips, setChips] = useState<ChipValue[]>([]);\r\n  const [isPremium,setIsPremium] = useState<boolean>(false);\r\n  const [isSharing, setIsSharing] = useState<boolean>(false);\r\n  const [price,setPrice] = useState<string>('0');\r\n  const [selectedPermission, setSelectedPermission] = useState<PermissionSelectorItem>(PermissionSelectorItems[0]);\r\n  const [scheduledAt, setScheduledAt] = useState<string>('');\r\n  const allEmailsValid = chips.every(chip => !chip.invalid);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const query = useNormalizedModels(\r\n    'normalized-models/user',\r\n    { perPage: 7, query: inputValue },\r\n    { enabled: share?.suggest_emails },\r\n  );\r\n\r\n  // show user's email, instead of name in the chip\r\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <ChipField\r\n        value={chips}\r\n        onChange={setChips}\r\n        isAsync\r\n        isLoading={query.fetchStatus === 'fetching'}\r\n        inputValue={inputValue}\r\n        onInputValueChange={setInputValue}\r\n        suggestions={query.data?.results}\r\n        displayWith={displayWith}\r\n        validateWith={chip => {\r\n          const invalid = !isEmail(chip.description);\r\n          return {\r\n            ...chip,\r\n            invalid,\r\n            errorMessage: invalid\r\n              ? trans({ message: 'Not a valid email' })\r\n              : undefined,\r\n          };\r\n        }}\r\n        placeholder={trans({ message: 'Enter email addresses' })}\r\n        label={<Trans message=\"Invite people\" />}\r\n      >\r\n        {user => (\r\n          <Item\r\n            value={user.id}\r\n            startIcon={<Avatar circle src={user.image} alt=\"\" />}\r\n            description={user.description}\r\n          >\r\n            {user.name}\r\n          </Item>\r\n        )}\r\n      </ChipField>\r\n      {chips.length ? (<div className=\"mt-14 flex items-center justify-between\">\r\n        <span>{trans({ message: 'Scheduled at' })}</span>\r\n        <input\r\n          type=\"datetime-local\"\r\n          className=\"w-[350px] appearance-none rounded-md border border-gray-300 bg-white px-5 py-2 pr-10 text-black placeholder-gray-500\r\n             focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\r\n             dark:border-gray-600 dark:bg-black dark:text-white dark:placeholder-gray-400\"\r\n          onChange={(e) => {\r\n            const localDateTime = e.target.value;\r\n            if (!localDateTime) return;\r\n            const selectedDate = new Date(localDateTime);\r\n            const now = new Date();\r\n            if (selectedDate < now) {\r\n              toast.danger(trans({ message: 'Please select a future time' }));\r\n              e.target.value = \"\";\r\n              return;\r\n            }\r\n            const utcDateTime = selectedDate.toISOString();\r\n            setScheduledAt(utcDateTime);\r\n          }}\r\n        />\r\n      </div>) : null}\r\n      {chips.length ? (<>\r\n        <div className='mt-14 flex items-center justify-between '>\r\n          <Switch\r\n            disabled={false}\r\n            onChange={() => setIsPremium(!isPremium)}\r\n          >\r\n            <Trans message=\"Premium\" />\r\n          </Switch>\r\n          {isPremium && <input\r\n            type=\"number\"\r\n            onChange={(e) => setPrice(e.target.value)}\r\n            className='appearance-none rounded-md border border-gray-300 bg-white px-5 py-2 pr-10 text-black placeholder-gray-500\r\n             focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\r\n             dark:border-gray-600 dark:bg-black dark:text-white dark:placeholder-gray-400'\r\n             value={price}\r\n          />}\r\n        </div>\r\n      </>) : null}\r\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\r\n        <PermissionSelector\r\n          onChange={setSelectedPermission}\r\n          value={selectedPermission}\r\n        />\r\n        {chips.length ? (\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            size=\"sm\"\r\n            disabled={isSharing || !allEmailsValid}\r\n            onClick={() => {\r\n              setIsSharing(true);\r\n              shareEntry.mutate(\r\n                {\r\n                  emails: chips.map(c => displayWith(c)),\r\n                  permissions: selectedPermission.value,\r\n                  entryId: entry.id,\r\n                  scheduledAt: scheduledAt,\r\n                  premium : isPremium,\r\n                  price : price\r\n                },\r\n                {\r\n                  onSuccess: () => {\r\n                    setChips([]);\r\n                  },\r\n                  onSettled: () => {\r\n                    setIsSharing(false);\r\n                  },\r\n                },\r\n              );\r\n            }}\r\n          >\r\n            <Trans message=\"Share\" />\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n      <MemberList className=\"mt-30\" entry={entry} />\r\n    </div>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {ShareableLink} from '../shareable-link';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport interface FetchShareableLinkResponse extends BackendResponse {\r\n  link: ShareableLink | null;\r\n}\r\n\r\nexport function useEntryShareableLink(entryId: number) {\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchEntryShareableLink(entryId!),\r\n    queryFn: () => fetchLinkByEntryId(entryId!),\r\n    enabled: !!entryId,\r\n  });\r\n}\r\n\r\nfunction fetchLinkByEntryId(\r\n  entryId: number,\r\n): Promise<FetchShareableLinkResponse> {\r\n  return apiClient\r\n    .get(`file-entries/${entryId}/shareable-link`, {\r\n      params: {loader: 'shareableLink'},\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface DeleteLinkParams {\r\n  entryId: number;\r\n}\r\n\r\nfunction deleteShareableLink({\r\n  entryId,\r\n}: DeleteLinkParams): Promise<BackendResponse> {\r\n  return apiClient\r\n    .delete(`file-entries/${entryId}/shareable-link`)\r\n    .then(r => r.data);\r\n}\r\n\r\ninterface Payload {\r\n  entryId: number;\r\n}\r\nexport function useDeleteShareableLink() {\r\n  return useMutation({\r\n    mutationFn: ({entryId}: Payload) => deleteShareableLink({entryId}),\r\n    onSuccess: (response, {entryId}) => {\r\n      queryClient.setQueryData<FetchShareableLinkResponse>(\r\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\r\n        {...response, link: null},\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not delete link')),\r\n  });\r\n}\r\n","export function randomString(length: number = 36) {\r\n  let random = '';\r\n  const possible =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n  for (let i = 0; i < length; i += 1) {\r\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return random;\r\n}\r\n","import useClipboard from 'react-use-clipboard';\r\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\r\nimport {useCreateShareableLink} from '../../shareable-link/queries/create-shareable-link';\r\nimport {useDeleteShareableLink} from '../../shareable-link/queries/use-delete-shareable-link';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {ShareableLink} from '../../shareable-link/shareable-link';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport type {ShareDialogActivePanel} from '../share-dialog';\r\nimport {Switch} from '@ui/forms/toggle/switch';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useActiveDialogEntry} from '../../drive-store';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {randomString} from '@ui/utils/string/random-string';\r\n\r\ninterface ShareableLinkPanelProps {\r\n  setActivePanel: (name: ShareDialogActivePanel) => void;\r\n  entry: DriveEntry;\r\n  focusInput?: boolean;\r\n}\r\nexport function ShareableLinkPanel({\r\n  setActivePanel,\r\n  entry,\r\n  focusInput,\r\n}: ShareableLinkPanelProps) {\r\n  const query = useEntryShareableLink(entry.id);\r\n  const linkExists = !!query.data?.link;\r\n  const createLink = useCreateShareableLink();\r\n  const deleteLink = useDeleteShareableLink();\r\n  const isLoading =\r\n    query.isLoading || createLink.isPending || deleteLink.isPending;\r\n  return (\r\n    <div>\r\n      <div className=\"mb-10\">\r\n        <Trans message=\"Share link\" />\r\n      </div>\r\n      <div className=\"flex items-center justify-between gap-14 px-2 pb-4\">\r\n        <Switch\r\n          checked={linkExists}\r\n          disabled={isLoading}\r\n          onChange={() => {\r\n            if (linkExists) {\r\n              deleteLink.mutate({entryId: entry.id});\r\n            } else {\r\n              createLink.mutate({entryId: entry.id});\r\n            }\r\n          }}\r\n        >\r\n          {linkExists ? (\r\n            <Trans message=\"Shareable link is created\" />\r\n          ) : (\r\n            <Trans message=\"Create shareable link\" />\r\n          )}\r\n        </Switch>\r\n        {linkExists && (\r\n          <Button\r\n            variant=\"link\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setActivePanel('linkSettings');\r\n            }}\r\n          >\r\n            <Trans message=\"Link settings\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ShareableLinkInputProps {\r\n  link?: ShareableLink | null;\r\n  autoFocus?: boolean;\r\n}\r\nfunction ShareableLinkInput({link, autoFocus}: ShareableLinkInputProps) {\r\n  const {base_url} = useSettings();\r\n  const {trans} = useTrans();\r\n  const entry = useActiveDialogEntry();\r\n  const hash = link?.hash || entry?.hash || randomString();\r\n  const linkUrl = `${base_url}/drive/s/${hash}`;\r\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\r\n    successDuration: 1000,\r\n  });\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      disabled={!link}\r\n      className=\"mt-10\"\r\n      readOnly\r\n      value={linkUrl}\r\n      aria-label={trans({message: 'Shareable link'})}\r\n      onFocus={e => {\r\n        (e.target as HTMLInputElement).select();\r\n      }}\r\n      endAppend={\r\n        <Button\r\n          className=\"min-w-100\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          onClick={setCopied}\r\n        >\r\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\n\r\nexport interface UpdateShareableLinkPayload {\r\n  allowEdit: boolean;\r\n  allowDownload: boolean;\r\n  expiresAt: string;\r\n  password: string;\r\n  entryId: number;\r\n}\r\n\r\nfunction updateShareableLink({\r\n  entryId,\r\n  ...payload\r\n}: UpdateShareableLinkPayload): Promise<FetchShareableLinkResponse> {\r\n  return apiClient\r\n    .put(`file-entries/${entryId}/shareable-link`, payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useUpdateShareableLink(\r\n  form: UseFormReturn<UpdateShareableLinkPayload>,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateShareableLinkPayload) =>\r\n      updateShareableLink(payload),\r\n    onSuccess: (data, {entryId}) => {\r\n      queryClient.setQueryData<FetchShareableLinkResponse>(\r\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\r\n        data,\r\n      );\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Fragment, ReactElement, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {m} from 'framer-motion';\r\nimport {getLocalTimeZone, now} from '@internationalized/date';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport type {ShareDialogActivePanel} from '@app/drive/share-dialog/share-dialog';\r\nimport {useEntryShareableLink} from '@app/drive/shareable-link/queries/use-entry-shareable-link';\r\nimport {Form} from '@ui/forms/form';\r\nimport {\r\n  UpdateShareableLinkPayload,\r\n  useUpdateShareableLink,\r\n} from '@app/drive/shareable-link/queries/use-update-shareable-link';\r\nimport {FormSwitch, Switch} from '@ui/forms/toggle/switch';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\n\r\ninterface LinkSettingsDialogProps {\r\n  className?: string;\r\n  setActivePanel: (name: ShareDialogActivePanel) => void;\r\n  entry: FileEntry;\r\n}\r\nexport function LinkSettingsDialog({\r\n  className,\r\n  setActivePanel,\r\n  entry,\r\n}: LinkSettingsDialogProps) {\r\n  const {formId} = useDialogContext();\r\n  const {data} = useEntryShareableLink(entry.id);\r\n  const link = data?.link;\r\n  const form = useForm<UpdateShareableLinkPayload>({\r\n    defaultValues: {\r\n      allowDownload: link?.allow_download,\r\n      allowEdit: link?.allow_edit,\r\n      expiresAt: link?.expires_at,\r\n      entryId: entry.id,\r\n    },\r\n  });\r\n  const updateLink = useUpdateShareableLink(form);\r\n\r\n  return (\r\n    <Fragment>\r\n      <DialogHeader\r\n        onDismiss={() => {\r\n          setActivePanel('main');\r\n        }}\r\n      >\r\n        <Trans message=\"Shareable Link Settings\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <m.div\r\n          key=\"link-settings-content\"\r\n          className=\"min-h-[335px]\"\r\n          animate={{opacity: 1, y: 0}}\r\n          initial={{opacity: 0, y: 20}}\r\n          exit={{opacity: 0, y: -20}}\r\n          transition={{duration: 0.1}}\r\n        >\r\n          <Form\r\n            id={formId}\r\n            className={className}\r\n            form={form}\r\n            onSubmit={value => {\r\n              updateLink.mutate(value, {\r\n                onSuccess: () => {\r\n                  setActivePanel('main');\r\n                  toast(message('Link settings saved'));\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            <LinkExpirationOption showField={!!link?.expires_at} />\r\n            <LinkPasswordOption showField={!!link?.password} />\r\n            <LinkOption>\r\n              <Trans message=\"Allow download\" />\r\n              <FormSwitch name=\"allowDownload\">\r\n                <Trans message=\"Users with link can download this item\" />\r\n              </FormSwitch>\r\n            </LinkOption>\r\n            <LinkOption showBorder={false}>\r\n              <Trans message=\"Allow import\" />\r\n              <FormSwitch name=\"allowEdit\">\r\n                <Trans message=\"Users with link can import this item into their own drive\" />\r\n              </FormSwitch>\r\n            </LinkOption>\r\n          </Form>\r\n        </m.div>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setActivePanel('main');\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          form={formId}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={updateLink.isPending}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst minDate = now(getLocalTimeZone());\r\n\r\ninterface LinkExpirationOptionProps {\r\n  showField: boolean;\r\n}\r\nfunction LinkExpirationOption({\r\n  showField: showFieldDefault,\r\n}: LinkExpirationOptionProps) {\r\n  const {trans} = useTrans();\r\n  const [showField, setShowField] = useState(showFieldDefault);\r\n  return (\r\n    <LinkOption>\r\n      <Trans message=\"Link expiration\" />\r\n      <div>\r\n        <Switch\r\n          checked={showField}\r\n          onChange={e => {\r\n            setShowField(e.target.checked);\r\n          }}\r\n        >\r\n          <Trans message=\"Link is valid until\" />\r\n        </Switch>\r\n        {showField && (\r\n          <FormDatePicker\r\n            min={minDate}\r\n            name=\"expiresAt\"\r\n            granularity=\"minute\"\r\n            className=\"mt-20\"\r\n            aria-label={trans({\r\n              message: 'Link expiration date and time',\r\n            })}\r\n          />\r\n        )}\r\n      </div>\r\n    </LinkOption>\r\n  );\r\n}\r\n\r\ninterface LinkPasswordOptionProps {\r\n  showField: boolean;\r\n}\r\nfunction LinkPasswordOption({\r\n  showField: showFieldDefault,\r\n}: LinkPasswordOptionProps) {\r\n  const {trans} = useTrans();\r\n  const [showField, setShowField] = useState(showFieldDefault);\r\n  return (\r\n    <LinkOption>\r\n      <Trans message=\"Password protect\" />\r\n      <div>\r\n        <Switch\r\n          checked={showField}\r\n          onChange={e => {\r\n            setShowField(e.target.checked);\r\n          }}\r\n        >\r\n          <Trans message=\"Users will need to enter password in order to view this link\" />\r\n        </Switch>\r\n        {showField && (\r\n          <FormTextField\r\n            type=\"password\"\r\n            autoFocus\r\n            name=\"password\"\r\n            className=\"mt-20\"\r\n            aria-label={trans({message: 'Link password'})}\r\n            description={\r\n              <Trans message=\"Password will not be requested when viewing the link as file owner.\" />\r\n            }\r\n            placeholder={trans({\r\n              message: 'Enter new password...',\r\n            })}\r\n          />\r\n        )}\r\n      </div>\r\n    </LinkOption>\r\n  );\r\n}\r\n\r\ninterface LinkOptionProps {\r\n  children: [ReactElement, ReactElement];\r\n  showBorder?: boolean;\r\n}\r\nfunction LinkOption({children, showBorder = true}: LinkOptionProps) {\r\n  const [title, content] = children;\r\n  return (\r\n    <div className={clsx(showBorder && 'mb-20 border-b pb-20')}>\r\n      <div className=\"mb-8 text-sm font-medium\">{title}</div>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n","import {Fragment, useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {SharePanel} from './share-panel';\r\nimport {ShareableLinkPanel} from './link-panel/shareable-link-panel';\r\nimport {LinkSettingsDialog} from './link-panel/link-settings-dialog';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys} from '../drive-query-keys';\r\n\r\nexport type ShareDialogActivePanel = 'main' | 'linkSettings';\r\n\r\ninterface ShareDialogProps {\r\n  entry: DriveEntry;\r\n  focusLinkInput?: boolean;\r\n}\r\nexport function ShareDialog({\r\n  entry: initialEntry,\r\n  focusLinkInput,\r\n}: ShareDialogProps) {\r\n  const {\r\n    data: {fileEntry},\r\n  } = useQuery({\r\n    queryKey: DriveQueryKeys.fetchFileEntry(initialEntry.id),\r\n    queryFn: () =>\r\n      apiClient\r\n        .get(`drive/file-entries/${initialEntry.id}/model`)\r\n        .then(response => response.data as {fileEntry: DriveEntry}),\r\n    initialData: {fileEntry: initialEntry},\r\n  });\r\n\r\n  const [activePanel, setActivePanel] =\r\n    useState<ShareDialogActivePanel>('main');\r\n\r\n  return (\r\n    <Dialog size=\"lg\">\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        {activePanel === 'linkSettings' ? (\r\n          <LinkSettingsDialog\r\n            key=\"one\"\r\n            setActivePanel={setActivePanel}\r\n            entry={fileEntry}\r\n          />\r\n        ) : (\r\n          <MainDialog\r\n            key=\"two\"\r\n            setActivePanel={setActivePanel}\r\n            entry={fileEntry}\r\n            focusLinkInput={focusLinkInput}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface MainDialogProps {\r\n  setActivePanel: (name: ShareDialogActivePanel) => void;\r\n  entry: DriveEntry;\r\n  focusLinkInput?: boolean;\r\n}\r\nfunction MainDialog({setActivePanel, entry, focusLinkInput}: MainDialogProps) {\r\n  return (\r\n    <Fragment>\r\n      <DialogHeader>\r\n        <Trans message=\"Share ‘:name’\" values={{name: entry.name}} />\r\n      </DialogHeader>\r\n      <DialogBody className=\"relative\">\r\n        <m.div\r\n          key=\"share-content\"\r\n          animate={{opacity: 1, y: 0}}\r\n          initial={{opacity: 0, y: 20}}\r\n          exit={{opacity: 0, y: -20}}\r\n          transition={{duration: 0.1}}\r\n        >\r\n          <SharePanel className=\"mb-30 border-b pb-30\" entry={entry} />\r\n          <ShareableLinkPanel\r\n            setActivePanel={setActivePanel}\r\n            entry={entry}\r\n            focusInput={!!focusLinkInput}\r\n          />\r\n        </m.div>\r\n      </DialogBody>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\nimport {DriveQueryKeys} from '@app/drive/drive-query-keys';\r\nimport {DriveApiIndexParams} from '@app/drive/files/queries/use-paginated-entries';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {encodeBackendFilters} from '@common/datatable/filters/utils/encode-backend-filters';\r\nimport {useMemo} from 'react';\r\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {DriveFolder} from '@app/drive/files/drive-entry';\r\n\r\ninterface Props {\r\n  query?: string;\r\n}\r\nexport function useMoveEntriesDialogFolderSearch({query}: Props) {\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const params = useMemo(() => {\r\n    return {\r\n      section: 'search',\r\n      workspaceId,\r\n      query,\r\n      filters: encodeBackendFilters([\r\n        {\r\n          key: 'type',\r\n          value: 'folder',\r\n        },\r\n      ]),\r\n    } as DriveApiIndexParams;\r\n  }, [workspaceId, query]);\r\n\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchEntries(params),\r\n    queryFn: ({signal}) => fetchEntries(params, signal),\r\n    enabled: !!query,\r\n    placeholderData: keepPreviousData,\r\n  });\r\n}\r\n\r\nasync function fetchEntries(\r\n  params: DriveApiIndexParams,\r\n  signal?: AbortSignal,\r\n): Promise<LengthAwarePaginationResponse<DriveFolder>> {\r\n  if (params.query) {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n  }\r\n  return apiClient\r\n    .get('drive/file-entries', {\r\n      params,\r\n      signal: params.query ? signal : undefined,\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {ComboBox} from '@ui/forms/combobox/combobox';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useMoveEntriesDialogFolderSearch} from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search';\r\nimport {DriveFolder} from '@app/drive/files/drive-entry';\r\n\r\ninterface SearchComboBoxProps {\r\n  onFolderSelected: (folder: DriveFolder) => void;\r\n}\r\nexport function MoveEntriesDialogSearch({\r\n  onFolderSelected,\r\n}: SearchComboBoxProps) {\r\n  const {trans} = useTrans();\r\n  const searchLabel = trans({message: 'Search folders'});\r\n  const [query, setQuery] = useState('');\r\n  const {isFetching, data} = useMoveEntriesDialogFolderSearch({query});\r\n  const folders = data?.data;\r\n  return (\r\n    <ComboBox\r\n      size=\"sm\"\r\n      maxItems={10}\r\n      placeholder={searchLabel}\r\n      aria-label={searchLabel}\r\n      className=\"pt-20\"\r\n      endAdornmentIcon={<SearchIcon />}\r\n      isAsync\r\n      isLoading={isFetching}\r\n      inputValue={query}\r\n      onInputValueChange={setQuery}\r\n      blurReferenceOnItemSelection\r\n      clearInputOnItemSelection\r\n      selectionMode=\"none\"\r\n      openMenuOnFocus={false}\r\n    >\r\n      {folders?.map(folder => (\r\n        <Item\r\n          key={folder.id}\r\n          value={folder.id}\r\n          textLabel={folder.name}\r\n          onSelected={() => {\r\n            onFolderSelected(folder);\r\n          }}\r\n        >\r\n          {folder.name}\r\n        </Item>\r\n      ))}\r\n    </ComboBox>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\r\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\r\nimport {FolderIcon} from '@ui/icons/material/Folder';\r\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\r\nimport {useFolderPath} from '@app/drive/files/queries/use-folder-path';\r\nimport {RootFolderPage} from '@app/drive/drive-page/drive-page';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DriveFolder} from '@app/drive/files/drive-entry';\r\n\r\ninterface FolderBreadCrumbsProps {\r\n  selectedFolder: DriveFolder;\r\n  onFolderSelected: (folder: DriveFolder) => void;\r\n}\r\nexport function MoveEntriesDialogBreadcrumbs({\r\n  selectedFolder,\r\n  onFolderSelected,\r\n}: FolderBreadCrumbsProps) {\r\n  const {data} = useFolderPath({\r\n    hash: selectedFolder.hash,\r\n    isEnabled: selectedFolder?.hash !== RootFolderPage.folder.hash,\r\n  });\r\n\r\n  let previous: DriveFolder | null = null;\r\n  if (data?.path) {\r\n    if (data.path.length === 1) {\r\n      previous = RootFolderPage.folder;\r\n    } else {\r\n      previous = data.path[data.path.length - 2];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-6 border-b pb-10\">\r\n      <IconButton\r\n        className=\"flex-shrink-0\"\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n        disabled={!previous}\r\n        onClick={() => {\r\n          if (previous) {\r\n            onFolderSelected(previous);\r\n          }\r\n        }}\r\n      >\r\n        <ArrowBackIcon />\r\n      </IconButton>\r\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\r\n        <BreadcrumbItem\r\n          onSelected={() => {\r\n            onFolderSelected(RootFolderPage.folder);\r\n          }}\r\n          className=\"flex items-center gap-8\"\r\n        >\r\n          <FolderIcon className=\"icon-sm\" />\r\n          <Trans message={RootFolderPage.folder.name} />\r\n        </BreadcrumbItem>\r\n        {data?.path.map(item => (\r\n          <BreadcrumbItem\r\n            onSelected={() => {\r\n              onFolderSelected(item);\r\n            }}\r\n            key={item.id || 'root'}\r\n            className=\"flex items-center gap-8\"\r\n          >\r\n            {!item.id && <FolderIcon className=\"icon-sm\" />}\r\n            {item.name}\r\n          </BreadcrumbItem>\r\n        ))}\r\n      </Breadcrumb>\r\n    </div>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__b64d6dd2__\"","import {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\nimport {DriveQueryKeys} from '@app/drive/drive-query-keys';\r\nimport {DriveApiIndexParams} from '@app/drive/files/queries/use-paginated-entries';\r\nimport {PartialFolder} from '@app/drive/files/utils/can-move-entries-into';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useInfiniteQuery} from '@tanstack/react-query';\r\nimport {\r\n  hasNextPage,\r\n  LengthAwarePaginationResponse,\r\n} from '@common/http/backend-response/pagination-response';\r\nimport {encodeBackendFilters} from '@common/datatable/filters/utils/encode-backend-filters';\r\nimport {useMemo} from 'react';\r\nimport {DriveFolder} from '@app/drive/files/drive-entry';\r\n\r\ninterface Props {\r\n  selectedFolder: PartialFolder;\r\n  movingSharedFiles: boolean;\r\n}\r\nexport function useMoveEntriesDialogFolders({\r\n  selectedFolder,\r\n  movingSharedFiles,\r\n}: Props) {\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const params = useMemo(() => {\r\n    const filters = encodeBackendFilters([\r\n      {\r\n        key: 'type',\r\n        value: 'folder',\r\n      },\r\n    ]);\r\n    return {\r\n      section: 'folder',\r\n      folderId:\r\n        selectedFolder.hash == '0' && movingSharedFiles\r\n          ? 'sharedWithMe'\r\n          : selectedFolder.hash,\r\n      workspaceId,\r\n      filters,\r\n    } as DriveApiIndexParams;\r\n  }, [workspaceId, selectedFolder.hash, movingSharedFiles]);\r\n\r\n  return useInfiniteQuery({\r\n    queryKey: DriveQueryKeys.fetchEntries(params),\r\n    queryFn: ({pageParam = 1}) => {\r\n      return fetchEntries({...params, page: pageParam});\r\n    },\r\n    initialPageParam: 1,\r\n    getNextPageParam: lastResponse => {\r\n      const currentPage = lastResponse.current_page;\r\n      if (!hasNextPage(lastResponse)) {\r\n        return undefined;\r\n      }\r\n      return currentPage + 1;\r\n    },\r\n  });\r\n}\r\n\r\nfunction fetchEntries(\r\n  params: DriveApiIndexParams,\r\n): Promise<LengthAwarePaginationResponse<DriveFolder>> {\r\n  return apiClient\r\n    .get('drive/file-entries', {\r\n      params,\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import React, {Fragment, ReactElement} from 'react';\r\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\r\nimport {ChevronRightIcon} from '@ui/icons/material/ChevronRight';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport myFilesSvg from './my-files.svg';\r\nimport {useMoveEntriesDialogFolders} from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {DriveFolder} from '@app/drive/files/drive-entry';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {List, ListItem} from '@ui/list/list';\r\n\r\ninterface Props {\r\n  selectedFolder: DriveFolder;\r\n  onFolderSelected: (folder: DriveFolder) => void;\r\n  movingSharedFiles: boolean;\r\n}\r\nexport function MoveEntriesDialogFolderList({\r\n  onFolderSelected,\r\n  selectedFolder,\r\n  movingSharedFiles,\r\n}: Props) {\r\n  const query = useMoveEntriesDialogFolders({\r\n    selectedFolder,\r\n    movingSharedFiles,\r\n  });\r\n  let content: ReactElement;\r\n\r\n  if (query.isLoading) {\r\n    content = (\r\n      <div className=\"flex h-full w-full items-center justify-center\">\r\n        <ProgressCircle isIndeterminate size=\"md\" />\r\n      </div>\r\n    );\r\n  } else if (query.data?.pages[0]?.data.length === 0) {\r\n    content = (\r\n      <IllustratedMessage\r\n        size=\"xs\"\r\n        className=\"pb-20 pt-64\"\r\n        image={<SvgImage src={myFilesSvg} />}\r\n        title={\r\n          <Trans\r\n            message={`There are no subfolders in \":folder\"`}\r\n            values={{folder: selectedFolder.name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  } else {\r\n    content = (\r\n      <Fragment>\r\n        <List>\r\n          {query.data?.pages\r\n            .flatMap(r => r.data)\r\n            .map(folder => (\r\n              <ListItem\r\n                className=\"min-h-48 border-b\"\r\n                key={folder.id}\r\n                onSelected={() => {\r\n                  onFolderSelected(folder);\r\n                }}\r\n                startIcon={<FileTypeIcon type=\"folder\" />}\r\n                endIcon={<ChevronRightIcon size=\"md\" />}\r\n              >\r\n                {folder.name}\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n        <InfiniteScrollSentinel query={query} />\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return <div className=\"h-288 overflow-y-auto\">{content}</div>;\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useMoveEntries} from '../../queries/use-move-entries';\r\nimport {NewFolderDialog} from '../new-folder-dialog';\r\nimport {CreateNewFolderIcon} from '@ui/icons/material/CreateNewFolder';\r\nimport {MoveEntriesDialogSearch} from './move-entries-dialog-search';\r\nimport {MoveEntriesDialogBreadcrumbs} from './move-entries-dialog-breadcrumbs';\r\nimport {MoveEntriesDialogFolderList} from './move-entries-dialog-folder-list';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {RootFolderPage} from '../../../drive-page/drive-page';\r\nimport {DriveEntry, DriveFolder} from '../../drive-entry';\r\nimport {useDriveStore} from '../../../drive-store';\r\nimport {canMoveEntriesInto} from '../../utils/can-move-entries-into';\r\nimport {useAuth} from '@common/auth/use-auth';\r\n\r\ninterface MoveEntriesDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function MoveEntriesDialog({entries}: MoveEntriesDialogProps) {\r\n  const {user} = useAuth();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const [selectedFolder, setSelectedFolder] = useState<DriveFolder>(\r\n    activePage?.folder || RootFolderPage.folder,\r\n  );\r\n  const movingSharedFiles = entries.some(\r\n    e => !e.users.find(u => u.id === user!.id)?.owns_entry,\r\n  );\r\n\r\n  return (\r\n    <Dialog size=\"lg\">\r\n      <DialogHeader>\r\n        <Trans\r\n          message=\"Move [one ‘:name‘|other :count items]\"\r\n          values={{\r\n            count: entries.length,\r\n            name: entries[0].name,\r\n          }}\r\n        />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <div className=\"text-sm\">\r\n          <Trans message=\"Select a destination folder.\" />\r\n        </div>\r\n        <MoveEntriesDialogSearch onFolderSelected={setSelectedFolder} />\r\n        <div className=\"mb-20 mt-40\">\r\n          <MoveEntriesDialogBreadcrumbs\r\n            selectedFolder={selectedFolder}\r\n            onFolderSelected={setSelectedFolder}\r\n          />\r\n          <MoveEntriesDialogFolderList\r\n            movingSharedFiles={movingSharedFiles}\r\n            selectedFolder={selectedFolder}\r\n            onFolderSelected={setSelectedFolder}\r\n          />\r\n        </div>\r\n      </DialogBody>\r\n      <Footer\r\n        selectedFolder={selectedFolder}\r\n        setSelectedFolder={setSelectedFolder}\r\n        entries={entries}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  selectedFolder: DriveFolder;\r\n  setSelectedFolder: (folder: DriveFolder) => void;\r\n  entries: DriveEntry[];\r\n}\r\nfunction Footer({selectedFolder, setSelectedFolder, entries}: FooterProps) {\r\n  const {close} = useDialogContext();\r\n  const moveEntries = useMoveEntries();\r\n  return (\r\n    <DialogFooter\r\n      className=\"border-t\"\r\n      startAction={\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={folder => {\r\n            if (folder) {\r\n              setSelectedFolder(folder);\r\n            }\r\n          }}\r\n        >\r\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\r\n            <Trans message=\"New Folder\" />\r\n          </Button>\r\n          <NewFolderDialog parentId={selectedFolder.id} />\r\n        </DialogTrigger>\r\n      }\r\n    >\r\n      <Button className=\"max-md:hidden\" variant=\"flat\" onClick={() => close()}>\r\n        <Trans message=\"Cancel\" />\r\n      </Button>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        disabled={\r\n          !canMoveEntriesInto(entries, selectedFolder) || moveEntries.isPending\r\n        }\r\n        onClick={() => {\r\n          moveEntries.mutate(\r\n            {\r\n              destinationId: selectedFolder.id,\r\n              entryIds: entries.map(e => e.id),\r\n            },\r\n            {onSuccess: close},\r\n          );\r\n        }}\r\n      >\r\n        <Trans message=\"Move here\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n}\r\n","import {DriveEntry} from '../drive-entry';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useDeleteEntries} from '../queries/use-delete-entries';\r\nimport {driveState} from '../../drive-store';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\n\r\ninterface DeleteEntriesForeverDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function DeleteEntriesForeverDialog({\r\n  entries,\r\n}: DeleteEntriesForeverDialogProps) {\r\n  const deleteEntries = useDeleteEntries();\r\n  const {close} = useDialogContext();\r\n\r\n  const message =\r\n    entries.length === 1 ? (\r\n      <Trans\r\n        message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\"\r\n        values={{name: entries[0].name}}\r\n      />\r\n    ) : (\r\n      <Trans\r\n        message=\":count items will be deleted forever and you won't be able to restore them.\"\r\n        values={{count: entries.length}}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Delete forever?\" />}\r\n      body={message}\r\n      confirm={<Trans message=\"Delete forever\" />}\r\n      isLoading={deleteEntries.isPending}\r\n      onConfirm={() => {\r\n        deleteEntries.mutate(\r\n          {\r\n            entryIds: entries.map(e => e.id),\r\n            deleteForever: true,\r\n          },\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              driveState().selectEntries([]);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {DriveEntry} from '../drive-entry';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {driveState} from '../../drive-store';\r\nimport {useRestoreEntries} from '../queries/use-restore-entries';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\n\r\ninterface DeleteEntriesForeverDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function BlockTrashFolderViewDialog({\r\n  entries,\r\n}: DeleteEntriesForeverDialogProps) {\r\n  const restoreEntries = useRestoreEntries();\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <ConfirmationDialog\r\n      title={<Trans message=\"This folder is in your trash\" />}\r\n      body={<Trans message=\"To view this folder, restore it from the trash.\" />}\r\n      confirm={<Trans message=\"Restore\" />}\r\n      isLoading={restoreEntries.isPending}\r\n      onConfirm={() => {\r\n        restoreEntries.mutate(\r\n          {\r\n            entryIds: entries.map(e => e.id),\r\n          },\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              driveState().selectEntries([]);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {ReactElement} from 'react';\r\nimport {ActiveActionDialog, driveState, useDriveStore} from '../../drive-store';\r\nimport {RenameEntryDialog} from './rename-entry-dialog';\r\nimport {NewFolderDialog} from './new-folder-dialog';\r\nimport {EntryPreviewDialog} from './entry-preview-dialog';\r\nimport {ShareDialog} from '../../share-dialog/share-dialog';\r\nimport {MoveEntriesDialog} from './move-entries-dialog/move-entries-dialog';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {DeleteEntriesForeverDialog} from './delete-entries-forever-dialog';\r\nimport {BlockTrashFolderViewDialog} from './block-trash-folder-view-dialog';\r\n\r\nexport function DriveDialogsContainer() {\r\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\r\n  const dialog = getDialog(activeDialog);\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      isOpen={!!dialog}\r\n      onClose={() => {\r\n        driveState().setActiveActionDialog(null);\r\n      }}\r\n    >\r\n      {dialog}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction getDialog(dialog?: ActiveActionDialog | null): ReactElement | null {\r\n  switch (dialog?.name) {\r\n    case 'rename':\r\n      return <RenameEntryDialog entries={dialog.entries} />;\r\n    case 'newFolder':\r\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\r\n    case 'preview':\r\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\r\n    case 'share':\r\n      return <ShareDialog entry={dialog.entries[0]} />;\r\n    case 'getLink':\r\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\r\n    case 'moveTo':\r\n      return <MoveEntriesDialog entries={dialog.entries} />;\r\n    case 'confirmAndDeleteForever':\r\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\r\n    case 'trashFolderBlock':\r\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SearchPage} from '../drive-page/drive-page';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {useSearchParams} from 'react-router';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\n\r\nexport function NavbarSearch() {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const [searchParams] = useSearchParams();\r\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\r\n\r\n  return (\r\n    <form\r\n      className=\"max-w-620 flex-auto\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        navigate(\r\n          {\r\n            pathname: SearchPage.path,\r\n            search: `?query=${inputValue}`,\r\n          },\r\n          {replace: true},\r\n        );\r\n      }}\r\n    >\r\n      <TextField\r\n        size=\"sm\"\r\n        background=\"bg\"\r\n        value={inputValue}\r\n        onChange={e => setInputValue(e.target.value)}\r\n        onFocus={() => {\r\n          if (activePage !== SearchPage) {\r\n            navigate(SearchPage.path);\r\n          }\r\n        }}\r\n        startAdornment={\r\n          <IconButton type=\"submit\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n        }\r\n        className=\"max-w-620 flex-auto\"\r\n        placeholder={trans({message: 'Search'})}\r\n        aria-label={trans({message: 'Search files and folders'})}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import {InteractableEvent} from '../interactable-event';\r\nimport {useEffect, useId, useRef} from 'react';\r\nimport {dragMonitors, DragSessionStatus} from './drag-state';\r\nimport {ConnectedDraggable} from './use-draggable';\r\n\r\nexport interface DragMonitor {\r\n  type: string;\r\n  onDragStart?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\r\n  onDragMove?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\r\n  onDragEnd?: (\r\n    e: InteractableEvent,\r\n    dragTarget: ConnectedDraggable,\r\n    status: DragSessionStatus\r\n  ) => void;\r\n}\r\n\r\nexport function useDragMonitor(monitor: DragMonitor) {\r\n  const monitorRef = useRef(monitor);\r\n  const id = useId();\r\n\r\n  useEffect(() => {\r\n    dragMonitors.set(id, monitorRef.current);\r\n    return () => {\r\n      dragMonitors.delete(id);\r\n    };\r\n  }, [id]);\r\n}\r\n","import {useDragMonitor} from '@ui/interactions/dnd/use-drag-monitor';\r\nimport React, {memo, useRef, useState} from 'react';\r\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {DragSessionStatus, droppables} from '@ui/interactions/dnd/drag-state';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport clsx from 'clsx';\r\nimport {\r\n  isFolderTreeDragId,\r\n  makeFolderTreeDragId,\r\n} from '@app/drive/layout/sidebar/folder-tree-drag-id';\r\nimport {InteractableEvent} from '@ui/interactions/interactable-event';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {ConnectedDraggable} from '@ui/interactions/dnd/use-draggable';\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface DragPreviewState {\r\n  entries?: FileEntry[];\r\n  e?: InteractableEvent;\r\n  status?: DragSessionStatus;\r\n  draggingTreeItem?: boolean;\r\n}\r\n\r\nexport function EntryDragPreview() {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [points, setPoints] = useState<{start?: Point; end?: Point}>();\r\n  const [state, setState] = useState<DragPreviewState>({});\r\n\r\n  useDragMonitor({\r\n    type: 'fileEntry',\r\n    onDragStart: (e, dragTarget) => {\r\n      const target = dragTarget as ConnectedDraggable<FileEntry[]>;\r\n      if (target) {\r\n        setState({\r\n          entries: target.getData(),\r\n          e,\r\n          draggingTreeItem: isFolderTreeDragId(target.id as number),\r\n        });\r\n        setPoints({start: e});\r\n      }\r\n    },\r\n    onDragMove: e => {\r\n      setState(prev => {\r\n        return {...prev, e: e};\r\n      });\r\n      setPoints(prev => {\r\n        return {...prev, end: e};\r\n      });\r\n    },\r\n    onDragEnd: (e, dragTarget, status) => {\r\n      setState({status});\r\n    },\r\n  });\r\n\r\n  let preview = null;\r\n\r\n  if (state.entries && state.e) {\r\n    preview = (\r\n      <div\r\n        ref={ref}\r\n        style={\r\n          state.e\r\n            ? {\r\n                transform: `translate(${state.e.x}px, ${state.e.y}px)`,\r\n                width: `${state.e.rect.width}px`,\r\n              }\r\n            : undefined\r\n        }\r\n        className=\"pointer-events-none fixed left-0 top-0 isolate\"\r\n      >\r\n        {state.entries.map((item, index) => (\r\n          <EntryPreview\r\n            key={item.id}\r\n            index={index}\r\n            entry={item}\r\n            points={points}\r\n            state={state}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\r\n}\r\n\r\ninterface EntryPreviewProps {\r\n  entry: FileEntry;\r\n  index: number;\r\n  points?: {start?: Point; end?: Point};\r\n  state: DragPreviewState;\r\n}\r\nconst EntryPreview = memo(\r\n  ({entry, points, index, state}: EntryPreviewProps) => {\r\n    const viewMode = useDriveStore(s => s.viewMode);\r\n    const droppableId = state.draggingTreeItem\r\n      ? makeFolderTreeDragId(entry)\r\n      : entry.id;\r\n    const target = droppables.get(droppableId);\r\n    if (!target?.rect || !points?.start) return null;\r\n    const rect = target.rect;\r\n    const itemCount = state.entries?.length || 0;\r\n\r\n    const exitVariant = (status: DragSessionStatus) => {\r\n      if (status === 'dropSuccess') {\r\n        return {\r\n          x: 0,\r\n          y: 0,\r\n          opacity: 0,\r\n          transition: {duration: 0.1, delay: 0},\r\n        };\r\n      }\r\n      return {\r\n        x: rect.left - (points.end?.x || 0),\r\n        y: rect.top - (points.end?.y || 0),\r\n        width: `${state.e?.rect.width}px`,\r\n      };\r\n    };\r\n\r\n    return (\r\n      <m.div\r\n        key={entry.id}\r\n        transition={{delay: 0.01 * index, bounce: 0, duration: 0.2}}\r\n        initial={{\r\n          x: rect.left - points.start.x,\r\n          y: rect.top - points.start.y,\r\n          width: `${state.e?.rect.width}px`,\r\n        }}\r\n        animate={{\r\n          x: 0,\r\n          y: 0,\r\n          // in list/table mode limit preview size to 288px, but start and end the animation\r\n          // at full width, so it returns to original position at original size smoothly\r\n          width: viewMode === 'list' ? 288 : undefined,\r\n        }}\r\n        exit={exitVariant as any}\r\n        style={{\r\n          // in grid mode simply use the width of the draggable item\r\n          width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\r\n          height: `${state.e?.rect.height}px`,\r\n        }}\r\n        className={clsx(\r\n          'absolute max-h-48 whitespace-nowrap rounded border border-primary-light bg-paper',\r\n          index < 2 && 'shadow',\r\n          index === 0 && 'left-0 top-0 z-10',\r\n          index > 0 && 'left-6 top-6',\r\n        )}\r\n      >\r\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\r\n        <div className=\"flex h-full items-center justify-center gap-10 overflow-hidden bg-primary-light/20 px-16 text-sm\">\r\n          <FileTypeIcon type={entry.type} />\r\n          <div className=\"flex-auto overflow-hidden text-ellipsis\">\r\n            {entry.name}\r\n          </div>\r\n        </div>\r\n      </m.div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface EntryCountProps {\r\n  count: number;\r\n}\r\nconst EntryCount = memo(({count}: EntryCountProps) => {\r\n  return (\r\n    <m.div\r\n      key=\"entryCount\"\r\n      initial={{opacity: 0}}\r\n      animate={{opacity: 1, transition: {delay: 0.1}}}\r\n      exit={{opacity: 0}}\r\n      transition={{duration: 0.1}}\r\n      className=\"absolute -right-6 -top-6 z-10 z-30 flex h-20 w-20 items-center justify-center rounded-full bg-danger text-sm font-bold text-white shadow-lg\"\r\n    >\r\n      {count}\r\n    </m.div>\r\n  );\r\n});\r\n","import {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface DashboardContentHeaderProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\nexport function DashboardContentHeader({\r\n  children,\r\n  className,\r\n}: DashboardContentHeaderProps) {\r\n  return (\r\n    <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>\r\n  );\r\n}\r\n","import {PageBreadcrumbs} from '../page-breadcrumbs';\r\nimport React, {useContext} from 'react';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {ViewListIcon} from '@ui/icons/material/ViewList';\r\nimport {ViewModuleIcon} from '@ui/icons/material/ViewModule';\r\nimport {InfoIcon} from '@ui/icons/material/Info';\r\nimport {DriveSortButton} from './sorting/drive-sort-button';\r\nimport {DashboardContentHeader} from '@common/ui/dashboard-layout/dashboard-content-header';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\n\r\nexport function DriveContentHeader() {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  return (\r\n    <DashboardContentHeader className=\"flex h-60 items-center gap-20 border-b px-8 py-4 md:px-26\">\r\n      {isMobileMode ? (\r\n        <DriveSortButton isDisabled={activePage?.disableSort} />\r\n      ) : (\r\n        <PageBreadcrumbs />\r\n      )}\r\n      <div className=\"ml-auto flex-shrink-0 text-muted\">\r\n        <ToggleViewModeButton />\r\n        <ToggleDetailsButton />\r\n      </div>\r\n    </DashboardContentHeader>\r\n  );\r\n}\r\n\r\nfunction ToggleViewModeButton() {\r\n  const viewMode = useDriveStore(s => s.viewMode);\r\n  const tooltip =\r\n    viewMode === 'grid' ? (\r\n      <Trans message=\"List view\" />\r\n    ) : (\r\n      <Trans message=\"Grid view\" />\r\n    );\r\n  return (\r\n    <Tooltip label={tooltip}>\r\n      <IconButton\r\n        size=\"md\"\r\n        onClick={() => {\r\n          driveState().setViewMode(\r\n            driveState().viewMode === 'list' ? 'grid' : 'list',\r\n          );\r\n        }}\r\n      >\r\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nfunction ToggleDetailsButton() {\r\n  const {rightSidenavStatus: status, setRightSidenavStatus} = useContext(\r\n    DashboardLayoutContext,\r\n  );\r\n  const tooltip = status ? (\r\n    <Trans message=\"Hide details\" />\r\n  ) : (\r\n    <Trans message=\"Show details\" />\r\n  );\r\n  return (\r\n    <Tooltip label={tooltip}>\r\n      <IconButton\r\n        size=\"md\"\r\n        color={status === 'open' ? 'primary' : null}\r\n        onClick={() => {\r\n          setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\r\n        }}\r\n      >\r\n        <InfoIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React, {Fragment, useContext, useEffect, useMemo} from 'react';\r\nimport {Link, useLocation, useParams} from 'react-router';\r\nimport {Sidebar} from './sidebar/sidebar';\r\nimport {FileView} from '../file-view/file-view';\r\nimport {UploadQueue} from '../uploading/upload-queue';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {\r\n  DRIVE_PAGES,\r\n  makePartialFolderPage,\r\n  SearchPage,\r\n} from '../drive-page/drive-page';\r\nimport {DetailsSidebar} from '../details-sidebar/details-sidebar';\r\nimport {DriveDialogsContainer} from '../files/dialogs/drive-dialogs-container';\r\nimport {NavbarSearch} from '../search/navbar-search';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {EntryDragPreview} from '../file-view/entry-drag-preview';\r\nimport {DriveContentHeader} from './drive-content-header';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {EntryActionList} from '../entry-actions/entry-action-list';\r\nimport {CreateNewButton} from './create-new-button';\r\nimport {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {DashboardSidenav} from '@common/ui/dashboard-layout/dashboard-sidenav';\r\nimport {DashboardContent} from '@common/ui/dashboard-layout/dashboard-content';\r\nimport {DashboardNavbar} from '@common/ui/dashboard-layout/dashboard-navbar';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {DashboardLayout} from '@common/ui/dashboard-layout/dashboard-layout';\r\nimport {FileEntryUrlsContext} from '@common/uploads/file-entry-urls';\r\nimport {FileUploadStoreOptions} from '@common/uploads/uploader/file-upload-store';\r\nimport {getActiveWorkspaceId} from '@common/workspace/active-workspace-id';\r\n\r\nconst uploadStoreOptions: FileUploadStoreOptions = {\r\n  modifyUploadedFile: uploadedFile => {\r\n    const workspaceId = getActiveWorkspaceId();\r\n    uploadedFile.fingerprint = `${uploadedFile.fingerprint}-w-${workspaceId}`;\r\n    return uploadedFile;\r\n  },\r\n};\r\n\r\nexport function DriveLayout() {\r\n  const {pathname} = useLocation();\r\n  const {hash} = useParams();\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  useEffect(() => {\r\n    driveState().setActivePage(\r\n      DRIVE_PAGES.find(p => p.path === pathname) ||\r\n        makePartialFolderPage(hash!),\r\n    );\r\n  }, [pathname, hash]);\r\n\r\n  const urlsContextValue = useMemo(() => {\r\n    return {workspaceId};\r\n  }, [workspaceId]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      driveState().reset();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {activePage?.label && (\r\n        <StaticPageTitle>\r\n          <Trans\r\n            message={\r\n              typeof activePage.label === 'string'\r\n                ? activePage.label\r\n                : activePage.label.message\r\n            }\r\n          />\r\n        </StaticPageTitle>\r\n      )}\r\n      <FileUploadProvider options={uploadStoreOptions}>\r\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\r\n          <DashboardLayout\r\n            name=\"drive\"\r\n            onDragOver={e => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              e.dataTransfer.dropEffect = 'none';\r\n            }}\r\n            onDrop={e => {\r\n              // prevent files from desktop from blowing away the document\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Navbar />\r\n            <DashboardSidenav position=\"left\" size=\"md\">\r\n              <Sidebar />\r\n            </DashboardSidenav>\r\n            <DriveContentHeader />\r\n            <DashboardContent>\r\n              <FileView />\r\n            </DashboardContent>\r\n            <UploadQueue />\r\n            <DriveDialogsContainer />\r\n            <DashboardSidenav position=\"right\" size=\"lg\">\r\n              <DetailsSidebar />\r\n            </DashboardSidenav>\r\n          </DashboardLayout>\r\n        </FileEntryUrlsContext.Provider>\r\n        <EntryDragPreview />\r\n      </FileUploadProvider>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction Navbar() {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  const children = isMobileMode ? null : <NavbarSearch />;\r\n  const searchButton = (\r\n    <IconButton elementType={Link} to={SearchPage.path}>\r\n      <SearchIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const mobileRightChildren = (\r\n    <Fragment>\r\n      {activePage !== SearchPage && searchButton}\r\n      <CreateNewButton isCompact />\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <DashboardNavbar\r\n        rightChildren={isMobileMode && mobileRightChildren}\r\n        menuPosition=\"drive-navbar\"\r\n      >\r\n        {children}\r\n      </DashboardNavbar>\r\n      {isMobileMode && <FloatingActionList />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction FloatingActionList() {\r\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\r\n  if (!entriesSelected) return null;\r\n  return (\r\n    <div className=\"fixed right-0 top-0 z-10 flex h-54 w-full items-center justify-center gap-10 rounded bg-primary px-6 text-on-primary shadow-xl\">\r\n      <IconButton\r\n        onClick={() => {\r\n          driveState().selectEntries([]);\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Trans message=\":count selected\" values={{count: entriesSelected}} />\r\n      <EntryActionList className=\"ml-auto\" />\r\n    </div>\r\n  );\r\n}\r\n","import {create} from 'zustand';\r\nimport {immer} from 'zustand/middleware/immer';\r\nimport {DriveSortDescriptor} from '../../drive-store';\r\nimport {\r\n  getFromLocalStorage,\r\n  setInLocalStorage,\r\n} from '@ui/utils/hooks/local-storage';\r\n\r\ninterface LinkPageState {\r\n  password: string | null;\r\n  setPassword: (value: string) => void;\r\n  isPasswordProtected: boolean;\r\n  setIsPasswordProtected: (value: boolean) => void;\r\n  activeSort: DriveSortDescriptor;\r\n  setActiveSort: (value: DriveSortDescriptor) => void;\r\n  viewMode: 'grid' | 'list';\r\n  setViewMode: (mode: 'grid' | 'list') => void;\r\n}\r\n\r\nexport const useLinkPageStore = create<LinkPageState>()(\r\n  immer(set => ({\r\n    password: null,\r\n    viewMode: getFromLocalStorage<'list' | 'grid'>('drive.viewMode'),\r\n    activeSort: {\r\n      orderBy: 'updated_at',\r\n      orderDir: 'desc',\r\n    },\r\n    setPassword: value => {\r\n      set(state => {\r\n        state.password = value;\r\n      });\r\n    },\r\n    isPasswordProtected: false,\r\n    setIsPasswordProtected: value => {\r\n      set(state => {\r\n        state.isPasswordProtected = value;\r\n      });\r\n    },\r\n    setViewMode: mode => {\r\n      set(state => {\r\n        state.viewMode = mode;\r\n        setInLocalStorage('drive.viewMode', mode);\r\n      });\r\n    },\r\n    setActiveSort: value => {\r\n      set(state => {\r\n        state.activeSort = value;\r\n      });\r\n    },\r\n  })),\r\n);\r\n\r\nexport function linkPageState() {\r\n  return useLinkPageStore.getState();\r\n}\r\n","import {keepPreviousData, useInfiniteQuery} from '@tanstack/react-query';\r\nimport {useParams} from 'react-router';\r\nimport type {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport type {DriveEntry} from '../../files/drive-entry';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {\r\n  linkPageState,\r\n  useLinkPageStore,\r\n} from '../shareable-link-page/link-page-store';\r\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\r\n\r\nexport interface FetchShareableLinkPageResponse\r\n  extends FetchShareableLinkResponse {\r\n  folderChildren: LengthAwarePaginationResponse<DriveEntry>;\r\n  passwordInvalid: boolean;\r\n}\r\n\r\nexport function useShareableLinkPage() {\r\n  const {hash} = useParams();\r\n  const {orderBy, orderDir} = useLinkPageStore(s => s.activeSort);\r\n  const order = `${orderBy}:${orderDir}`;\r\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\r\n  const password = useLinkPageStore(s => s.password);\r\n\r\n  const query = useInfiniteQuery({\r\n    queryKey: DriveQueryKeys.fetchShareableLink({hash, sort: order}),\r\n    queryFn: async ({pageParam = 1}) => {\r\n      const response = await fetchLinkByHash({\r\n        hash: hash!,\r\n        page: pageParam,\r\n        order,\r\n        password,\r\n      });\r\n      if (response.passwordInvalid) {\r\n        linkPageState().setIsPasswordProtected(true);\r\n      }\r\n      return response;\r\n    },\r\n    initialData: () => {\r\n      const data = getBootstrapData().loaders?.shareableLinkPage;\r\n      if (data && data.link?.hash === hash) {\r\n        if (data.passwordInvalid) {\r\n          linkPageState().setIsPasswordProtected(true);\r\n        }\r\n        return {\r\n          pageParams: [undefined, 1],\r\n          pages: [data],\r\n        };\r\n      }\r\n    },\r\n    initialPageParam: 1,\r\n    getNextPageParam: lastResponse => {\r\n      if (!lastResponse.folderChildren) return undefined;\r\n      const currentPage = lastResponse.folderChildren.current_page;\r\n      const lastPage = lastResponse.folderChildren.last_page;\r\n      if (currentPage >= lastPage) {\r\n        return undefined;\r\n      }\r\n      return currentPage + 1;\r\n    },\r\n    // disable query if link is password protected and correct\r\n    // password was not entered yet, to prevent unnecessary requests\r\n    enabled: (!!hash && !isPasswordProtected) || password != null,\r\n    placeholderData: keepPreviousData,\r\n  });\r\n\r\n  return {\r\n    ...query,\r\n    link: query.data?.pages[0].link,\r\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data),\r\n  };\r\n}\r\n\r\ninterface FetchLinkByHashParams {\r\n  hash: string;\r\n  page?: number;\r\n  order?: string;\r\n  password?: string | null;\r\n}\r\nfunction fetchLinkByHash({\r\n  hash,\r\n  page = 1,\r\n  order,\r\n  password,\r\n}: FetchLinkByHashParams): Promise<FetchShareableLinkPageResponse> {\r\n  return apiClient\r\n    .get(`shareable-links/${hash}`, {\r\n      params: {loader: 'shareableLinkPage', page, order, password},\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {linkPageState} from '../link-page-store';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {message} from '@ui/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  matches: boolean;\r\n}\r\n\r\ninterface Props {\r\n  password: string;\r\n  linkHash: string;\r\n}\r\n\r\nfunction checkLinkPassword({password, linkHash}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`shareable-links/${linkHash}/check-password`, {password})\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useCheckLinkPassword() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => checkLinkPassword(props),\r\n    onSuccess: (response, props) => {\r\n      if (response.matches) {\r\n        linkPageState().setPassword(props.password);\r\n      }\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntryUser} from '../../../files/drive-entry';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {useLinkPageStore} from '../link-page-store';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys} from '../../../drive-query-keys';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  users: DriveEntryUser[];\r\n}\r\n\r\ninterface Props {\r\n  password: string | null;\r\n  linkId: number;\r\n}\r\n\r\nfunction importIntoOwnDrive({linkId, password}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`shareable-links/${linkId}/import`, {password})\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useImportIntoOwnDrive() {\r\n  const password = useLinkPageStore(s => s.password);\r\n  return useMutation({\r\n    mutationFn: (props: Omit<Props, 'password'>) =>\r\n      importIntoOwnDrive({...props, password}),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DriveQueryKeys.fetchShareableLink(),\r\n      });\r\n      toast(message('Item imported into your drive'));\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\r\n  });\r\n}\r\n","import {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useFileEntryUrls} from '@common/uploads/file-entry-urls';\r\nimport {useImportIntoOwnDrive} from './queries/import-into-own-drive';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\r\nimport {ImportExportIcon} from '@ui/icons/material/ImportExport';\r\nimport React, {Fragment} from 'react';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\r\n\r\nexport function ShareableLinkPageActionButtons() {\r\n  const {link} = useShareableLinkPage();\r\n  const {user, isLoggedIn} = useAuth();\r\n  const {downloadUrl} = useFileEntryUrls(link?.entry);\r\n  const importIntoOwnDrive = useImportIntoOwnDrive();\r\n  const alreadyImported = link?.entry?.users!.find(u => u.id === user?.id);\r\n\r\n  if (!link?.entry) return null;\r\n\r\n  return (\r\n    <div>\r\n      {link.allow_download && <DownloadButton downloadUrl={downloadUrl} />}\r\n      {!alreadyImported && isLoggedIn && link.allow_edit && (\r\n        <MenuTrigger\r\n          onItemSelected={key => {\r\n            if (key === 'import') {\r\n              importIntoOwnDrive.mutate({linkId: link.id});\r\n            } else if (key === 'download') {\r\n              if (downloadUrl) {\r\n                downloadFileFromUrl(downloadUrl);\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <IconButton className=\"ml-6\" disabled={importIntoOwnDrive.isPending}>\r\n            <KeyboardArrowDownIcon />\r\n          </IconButton>\r\n          <Menu>\r\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\r\n              <Trans message=\"Download\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\r\n              <Trans message=\"Save a copy to your own drive\" />\r\n            </MenuItem>\r\n          </Menu>\r\n        </MenuTrigger>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface DownloadButtonProps {\r\n  downloadUrl: string | undefined;\r\n}\r\nfunction DownloadButton({downloadUrl}: DownloadButtonProps) {\r\n  return (\r\n    <Fragment>\r\n      <Tooltip label={<Trans message=\"Download\" />}>\r\n        <IconButton\r\n          className=\"md:hidden\"\r\n          onClick={() => {\r\n            if (downloadUrl) {\r\n              downloadFileFromUrl(downloadUrl);\r\n            }\r\n          }}\r\n        >\r\n          <FileDownloadIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Button\r\n        className=\"max-md:hidden\"\r\n        size=\"sm\"\r\n        variant=\"flat\"\r\n        color=\"chip\"\r\n        startIcon={<FileDownloadIcon />}\r\n        onClick={() => {\r\n          if (downloadUrl) {\r\n            downloadFileFromUrl(downloadUrl);\r\n          }\r\n        }}\r\n      >\r\n        <Trans message=\"Download\" />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\r\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {ShareableLinkPageActionButtons} from './shareable-link-page-action-buttons';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\r\n\r\nexport function ShareableLinkNavbar() {\r\n  const {link} = useShareableLinkPage();\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <Navbar\r\n      size=\"md\"\r\n      color=\"bg\"\r\n      className=\"flex-shrink-0\"\r\n      rightChildren={link?.entry && <ShareableLinkPageActionButtons />}\r\n      menuPosition=\"shareable-link-page\"\r\n      hideLogo={isMobile}\r\n    >\r\n      {link?.entry && link.entry.type !== 'folder' && (\r\n        <div className=\"fex-auto flex min-w-0 items-center gap-10\">\r\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\r\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\r\n            {link.entry.name}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Navbar>\r\n  );\r\n}\r\n","import {useState} from 'react';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useCheckLinkPassword} from './queries/check-link-password';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\r\nimport {useParams} from 'react-router';\r\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\n\r\nexport function PasswordPage() {\r\n  const {trans} = useTrans();\r\n  const {hash} = useParams();\r\n  const fieldLabel = trans({message: 'Password'});\r\n  const [password, setPassword] = useState<string>('');\r\n  const checkPassword = useCheckLinkPassword();\r\n  const linkHash = hash ? hash.split(':')[0] : null;\r\n\r\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col bg-alt\">\r\n      <ShareableLinkNavbar />\r\n      <div className=\"mx-auto my-80 px-10 md:px-20\">\r\n        <div className=\"flex max-w-[560px] flex-col items-center gap-40 rounded border bg p-24 md:flex-row md:gap-14\">\r\n          <div className=\"h-132 w-[165px]\">\r\n            <SvgImage src={secureFilesSvg} />\r\n          </div>\r\n          <form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              checkPassword.mutate({\r\n                linkHash: linkHash!,\r\n                password,\r\n              });\r\n            }}\r\n          >\r\n            <span className=\"text-sm\">\r\n              <Trans message=\"The link you are trying to access is password protected.\" />\r\n            </span>\r\n            <TextField\r\n              autoFocus\r\n              placeholder={fieldLabel}\r\n              aria-label={fieldLabel}\r\n              className=\"mb-20 mt-10\"\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              errorMessage={\r\n                passwordIsInvalid && <Trans message=\"Password is not valid\" />\r\n              }\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"text-right\">\r\n              <Button\r\n                variant=\"flat\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"w-full md:w-auto\"\r\n                disabled={checkPassword.isPending}\r\n              >\r\n                <Trans message=\"Enter\" />\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {BaseFileGridItem} from '../../../file-view/file-grid/base-file-grid-item';\r\nimport React from 'react';\r\nimport {DriveEntry} from '../../../files/drive-entry';\r\n\r\nexport interface FolderPreviewGridProps {\r\n  entries: DriveEntry[];\r\n  onEntrySelected: (entry: DriveEntry, index: number) => void;\r\n}\r\nexport function FolderPreviewFileGrid({\r\n  entries,\r\n  onEntrySelected,\r\n}: FolderPreviewGridProps) {\r\n  return (\r\n    <div className=\"file-grid\">\r\n      {entries.map((entry, index) => (\r\n        <BaseFileGridItem\r\n          tabIndex={-1}\r\n          className=\"hover:shadow-md cursor-pointer bg\"\r\n          entry={entry}\r\n          key={entry.id}\r\n          onContextMenu={e => {\r\n            e.preventDefault();\r\n          }}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Enter' || e.key === ' ') {\r\n              onEntrySelected(entry, index);\r\n            }\r\n          }}\r\n          onClick={() => {\r\n            onEntrySelected(entry, index);\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import {DriveSortDescriptor} from '@app/drive/drive-store';\r\nimport React from 'react';\r\nimport {Table} from '@common/ui/tables/table';\r\nimport {\r\n  linkPageState,\r\n  useLinkPageStore,\r\n} from '@app/drive/shareable-link/shareable-link-page/link-page-store';\r\nimport type {FolderPreviewGridProps} from '@app/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid';\r\nimport {fileTableColumns} from '@app/drive/file-view/file-table/file-table-columns';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\n\r\nconst mobileColumns = fileTableColumns.filter(\r\n  config => config.key !== 'updated_at',\r\n);\r\n\r\nexport function FolderPreviewFileTable({\r\n  entries,\r\n  onEntrySelected,\r\n}: FolderPreviewGridProps) {\r\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  return (\r\n    <Table\r\n      columns={isMobile ? mobileColumns : fileTableColumns}\r\n      data={entries}\r\n      sortDescriptor={sortDescriptor}\r\n      onSortChange={value => {\r\n        linkPageState().setActiveSort(value as DriveSortDescriptor);\r\n      }}\r\n      onAction={(item, index) => {\r\n        onEntrySelected(item, index);\r\n      }}\r\n      enableSelection={false}\r\n    />\r\n  );\r\n}\r\n","import {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {useNavigate} from 'react-router';\r\nimport {ShareableLink} from '../../shareable-link';\r\n\r\nfunction buildFolderHash(link: ShareableLink, folderHash?: string) {\r\n  let hash = link.hash;\r\n  if (folderHash && link.entry?.hash !== folderHash) {\r\n    hash = `${hash}:${folderHash}`;\r\n  }\r\n  return hash;\r\n}\r\n\r\nexport function useNavigateToSubfolder() {\r\n  const {link} = useShareableLinkPage();\r\n  const navigate = useNavigate();\r\n  return (hash: string) => {\r\n    if (!link) return;\r\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\r\n  };\r\n}\r\n","import {AnimatePresence, m} from 'framer-motion';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport clsx from 'clsx';\r\nimport {DriveEntry} from '../../../files/drive-entry';\r\nimport {FolderPreviewFileGrid} from './folder-preview-file-grid';\r\nimport {useLinkPageStore} from '../link-page-store';\r\nimport {FolderPreviewFileTable} from './folder-preview-file-table';\r\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\r\nimport {useLocation} from 'react-router';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\nimport {FilePreviewDialog} from '@common/uploads/components/file-preview/file-preview-dialog';\r\n\r\ninterface FolderPreviewChildrenProps {\r\n  className?: string;\r\n}\r\nexport function FolderPreviewFileView({className}: FolderPreviewChildrenProps) {\r\n  const {pathname} = useLocation();\r\n  const navigateToSubfolder = useNavigateToSubfolder();\r\n  const [activePreviewIndex, setActivePreviewIndex] = useState<number>();\r\n  const viewMode = useLinkPageStore(s => s.viewMode);\r\n  const sentinelRef = useRef<HTMLDivElement>(null);\r\n  const {\r\n    link,\r\n    entries,\r\n    isFetchingNextPage,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n    isPlaceholderData,\r\n  } = useShareableLinkPage();\r\n\r\n  // close preview modal on back/forward navigation\r\n  useEffect(() => {\r\n    setActivePreviewIndex(undefined);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const sentinelEl = sentinelRef.current;\r\n    if (!sentinelEl) return;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting && hasNextPage) {\r\n        fetchNextPage();\r\n      }\r\n    });\r\n    observer.observe(sentinelEl);\r\n    return () => {\r\n      observer.unobserve(sentinelEl);\r\n    };\r\n  }, [hasNextPage, fetchNextPage]);\r\n\r\n  if (!link || isPlaceholderData) {\r\n    return (\r\n      <div className={clsx('flex justify-center', className)}>\r\n        <ProgressCircle isIndeterminate />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handlePreview = (entry: DriveEntry, index: number) => {\r\n    if (entry.type === 'folder') {\r\n      navigateToSubfolder(entry.hash);\r\n    } else {\r\n      setActivePreviewIndex(index);\r\n    }\r\n  };\r\n\r\n  const folderEntries = entries || [];\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={clsx(\r\n          'file-grid-container flex-auto overflow-auto px-14 pb-14 md:px-24 md:pb-24',\r\n          className,\r\n        )}\r\n      >\r\n        <AdHost slot=\"file-preview\" className=\"mb-40\" />\r\n        {viewMode === 'grid' ? (\r\n          <FolderPreviewFileGrid\r\n            entries={folderEntries}\r\n            onEntrySelected={handlePreview}\r\n          />\r\n        ) : (\r\n          <FolderPreviewFileTable\r\n            entries={folderEntries}\r\n            onEntrySelected={handlePreview}\r\n          />\r\n        )}\r\n        <span ref={sentinelRef} aria-hidden />\r\n        <AnimatePresence>\r\n          {isFetchingNextPage && (\r\n            <m.div\r\n              className=\"mt-24 flex w-full justify-center\"\r\n              {...opacityAnimation}\r\n            >\r\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\r\n            </m.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={activePreviewIndex != undefined}\r\n        onClose={() => setActivePreviewIndex(undefined)}\r\n      >\r\n        <FilePreviewDialog\r\n          entries={folderEntries}\r\n          defaultActiveIndex={activePreviewIndex}\r\n          allowDownload={link.allow_download}\r\n        />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n","import React, {ReactElement, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {DriveFolder} from '../../../files/drive-entry';\r\nimport {useFolderPath} from '../../../files/queries/use-folder-path';\r\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\r\nimport {ShareableLink} from '../../shareable-link';\r\nimport {useLinkPageStore} from '../link-page-store';\r\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\r\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  folder?: DriveFolder;\r\n  link: ShareableLink;\r\n}\r\nexport function FolderPreviewBreadcrumb({className, folder, link}: Props) {\r\n  const navigateToSubfolder = useNavigateToSubfolder();\r\n  const password = useLinkPageStore(s => s.password);\r\n  const query = useFolderPath({\r\n    hash: folder?.hash,\r\n    params: {\r\n      shareable_link: link.id,\r\n      password,\r\n    },\r\n  });\r\n\r\n  let content: ReactNode;\r\n\r\n  if (query.isLoading) {\r\n    content = null;\r\n  } else {\r\n    const items: {folder: DriveFolder; label: ReactElement}[] = [];\r\n    if (query.data) {\r\n      query.data.path.forEach(parent => {\r\n        items.push({\r\n          folder: parent,\r\n          label: <>{parent.name}</>,\r\n        });\r\n      });\r\n    }\r\n\r\n    content = (\r\n      <Breadcrumb size=\"lg\" isNavigation>\r\n        {items.map(item => {\r\n          return (\r\n            <BreadcrumbItem\r\n              onSelected={() => {\r\n                navigateToSubfolder(item.folder.hash);\r\n              }}\r\n              key={item.folder.hash}\r\n            >\r\n              {item.label}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  }\r\n\r\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\r\n}\r\n","import React from 'react';\r\nimport {FolderPreviewBreadcrumb} from './folder-preview-breadcrumb';\r\nimport {EntriesSortButton} from '../../../layout/sorting/entries-sort-button';\r\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {GridViewIcon} from '@ui/icons/material/GridView';\r\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {DriveFolder} from '../../../files/drive-entry';\r\n\r\nexport function FolderPreviewHeader() {\r\n  const activeSort = useLinkPageStore(s => s.activeSort);\r\n  const {link, isFetching} = useShareableLinkPage();\r\n  const hasEntry = link && link.entry;\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-between gap-14 p-14 md:h-90 md:flex-row md:items-center md:p-24\">\r\n      {hasEntry && (\r\n        <FolderPreviewBreadcrumb\r\n          link={link}\r\n          folder={link.entry as DriveFolder}\r\n          className=\"flex-auto\"\r\n        />\r\n      )}\r\n      {hasEntry && (\r\n        <div className=\"flex items-center justify-between text-muted md:justify-start\">\r\n          <EntriesSortButton\r\n            isDisabled={isFetching}\r\n            descriptor={activeSort}\r\n            onChange={value => {\r\n              linkPageState().setActiveSort(value);\r\n            }}\r\n          />\r\n          <div className=\"ml-10 md:border-l md:pl-10\">\r\n            <IconButton\r\n              onClick={() => {\r\n                linkPageState().setViewMode(\r\n                  linkPageState().viewMode === 'grid' ? 'list' : 'grid',\r\n                );\r\n              }}\r\n            >\r\n              <GridViewIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {FolderPreviewFileView} from './folder-preview-file-view';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ShareableLinkPageActionButtons} from '../shareable-link-page-action-buttons';\r\nimport {FolderPreviewHeader} from './folder-preview-header';\r\nimport shareSvg from './share.svg';\r\nimport clsx from 'clsx';\r\nimport {DashboardLayout} from '@common/ui/dashboard-layout/dashboard-layout';\r\nimport {DashboardNavbar} from '@common/ui/dashboard-layout/dashboard-navbar';\r\nimport {DashboardContentHeader} from '@common/ui/dashboard-layout/dashboard-content-header';\r\nimport {DashboardContent} from '@common/ui/dashboard-layout/dashboard-content';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\n\r\nexport function FolderPreview() {\r\n  const {entries, isFetched} = useShareableLinkPage();\r\n  const showEmptyMessage = isFetched && !entries?.length;\r\n\r\n  return (\r\n    <DashboardLayout name=\"folder-preview\">\r\n      <DashboardNavbar\r\n        hideToggleButton\r\n        rightChildren={<ShareableLinkPageActionButtons />}\r\n        color=\"bg\"\r\n      />\r\n      <DashboardContentHeader>\r\n        <FolderPreviewHeader />\r\n      </DashboardContentHeader>\r\n      <FileUploadProvider>\r\n        <DashboardContent>\r\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\r\n        </DashboardContent>\r\n      </FileUploadProvider>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\ninterface EmptyMessageProps {\r\n  className?: string;\r\n}\r\nfunction EmptyMessage({className}: EmptyMessageProps) {\r\n  return (\r\n    <IllustratedMessage\r\n      className={clsx(className, 'mt-80')}\r\n      image={<SvgImage src={shareSvg} />}\r\n      title={<Trans message=\"Folder is empty\" />}\r\n      description={\r\n        <Trans message=\"No files have been uploaded to this folder yet\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {FilePreviewContainer} from '@common/uploads/components/file-preview/file-preview-container';\r\n\r\nexport function ShareableLinkPageFilePreview() {\r\n  const {link} = useShareableLinkPage();\r\n\r\n  if (!link?.entry) return null;\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col bg-alt\">\r\n      <ShareableLinkNavbar />\r\n      <AdHost slot=\"file-preview\" className=\"mx-auto mt-24\" />\r\n      <FilePreviewContainer\r\n        entries={[link.entry]}\r\n        showHeader={false}\r\n        allowDownload={link.allow_download}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, {ReactElement} from 'react';\r\nimport {useShareableLinkPage} from '@app/drive/shareable-link/queries/use-shareable-link-page';\r\nimport {useLinkPageStore} from '@app/drive/shareable-link/shareable-link-page/link-page-store';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {PasswordPage} from '@app/drive/shareable-link/shareable-link-page/password-page';\r\nimport {FolderPreview} from '@app/drive/shareable-link/shareable-link-page/folder-preview/folder-preview';\r\nimport {ShareableLinkPageFilePreview} from './shareable-link-page-file-preview';\r\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\r\nimport {FileEntryUrlsContext} from '@common/uploads/file-entry-urls';\r\nimport {ActiveWorkspaceProvider} from '@common/workspace/active-workspace-id-context';\r\n\r\nexport function ShareableLinkPage() {\r\n  const {status, link} = useShareableLinkPage();\r\n  const {trans} = useTrans();\r\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\r\n  const password = useLinkPageStore(s => s.password);\r\n\r\n  let content: ReactElement;\r\n\r\n  if (status === 'pending') {\r\n    content = (\r\n      <div className=\"flex h-screen flex-auto items-center justify-center\">\r\n        <ProgressCircle\r\n          aria-label={trans({message: 'Loading link'})}\r\n          isIndeterminate\r\n        />\r\n      </div>\r\n    );\r\n  } else if (!link && !isPasswordProtected) {\r\n    return <NotFoundPage />;\r\n  } else if (isPasswordProtected && !password) {\r\n    content = <PasswordPage />;\r\n  } else if (link?.entry?.type === 'folder') {\r\n    content = <FolderPreview />;\r\n  } else {\r\n    content = <ShareableLinkPageFilePreview />;\r\n  }\r\n\r\n  return (\r\n    <ActiveWorkspaceProvider>\r\n      <FileEntryUrlsContext.Provider\r\n        value={{shareable_link: link?.id, password}}\r\n      >\r\n        {content}\r\n      </FileEntryUrlsContext.Provider>\r\n    </ActiveWorkspaceProvider>\r\n  );\r\n}\r\n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","query","state","result","isFetching","isRefetching","isFetchingNextPage","_b","_a","isFetchingPreviousPage","_d","_c","hasNextPage","hasPreviousPage","useInfiniteQuery","queryClient","useBaseQuery","DriveQueryKeys","params","key","hash","entryId","id","invalidateEntryQueries","useStorageSummary","useQuery","fetchStorageSummary","formatResponse","apiClient","response","percentage","prettyBytes","Meter","props","jsx","ProgressBarBase","StorageMeter","isLoading","data","label","clsx","Trans","jsxs","StorageIcon","useCreateWorkspace","form","useMutation","createWorkspace","toast","message","WorkspaceQueryKeys","r","onFormQueryError","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","FormTextField","DialogFooter","Button","fetchWorkspaceWithMembers","workspaceId","useWorkspaceWithMembers","InviteMembers","other","useInviteMembers","err","showHttpErrorToast","ResendInvite","inviteId","useResendInvite","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","useActiveWorkspaceId","user","useAuth","PersonalWorkspace","LeaveWorkspaceConfirmation","onConfirm","ConfirmationDialog","matcher","isEmail","string","WorkspaceMembersDialog","workspace","ProgressCircle","Manager","can","usePermissions","members","shouldHideOtherMembers","InviteChipField","GroupIcon","AnimatePresence","MemberListItem","m","Avatar","MemberDisplayNameAppend","MemberActions","authUser","permissions","authMember","mb","permission","p","selectedRole","setSelectedRole","useState","changeRole","isOwner","isCurrentUser","roleSelector","RoleMenuTrigger","roleId","Fragment","RemoveMemberButton","trans","useTrans","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","useValueLists","useEffect","ChipField","invalid","c","type","DialogTrigger","isConfirmed","IconButton","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","value","onChange","size","className","isDisabled","role","MenuTrigger","newValue","ArrowDropDownIcon","Menu","MenuItem","ResendInviteDialogTrigger","resendInvite","updateWorkspace","useUpdateWorkspace","RenameWorkspaceDialog","deleteWorkspace","useDeleteWorkspace","payload","PolicyFailMessage","resourceName","color","reason","MessageText","SectionHelper","billing","useSettings","upgradeMsgValues","text","Link","LinkStyle","WorkspaceSelector","trigger","placement","workspaces","isFetched","useUserWorkspaces","activeWorkspace","useActiveWorkspace","selectorIsOpen","setSelectorIsOpen","hasPermission","cloneElement","DefaultTrigger","WorkspaceItem","CreateWorkspaceButton","onClick","onCreated","workspaceCount","checkOverQuotaOrNoPermission","overQuotaOrNoPermission","e","openDialog","AddIcon","forwardRef","ref","ButtonBase","UnfoldMoreIcon","isActive","CheckIcon","ManageButton","LeaveWorkspaceDialog","DeleteWorkspaceConfirmation","KeyboardArrowDownIcon","PersonAddIcon","EditIcon","DeleteIcon","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","shareSvg","defaultSortDescriptor","makeFolderPage","folder","makePartialFolderPage","getPathForFolder","rootFolder","getBootstrapData","RootFolderPage","RecentPage","SearchPage","isSearchingOrFiltering","SharesPage","TrashPage","StarredPage","DRIVE_PAGES","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","s","h","i","d","getNestedProperty","l","countNodes","fetchUserFolders","useFolders","stableArray","enableMapSet","initialState","getFromLocalStorage","useDriveStore","create","immer","set","get","isOpen","activePageId","setInLocalStorage","storedDescriptor","name","entries","current","mode","index","merge","driveState","useActiveDialogEntry","dialog","useMoveEntries","moveEntries","EightMB","useDriveUploadQueue","uploadMultiple","useFileUploadStore","usage","uploads","maxFileSize","allowedFileTypes","blockedFileTypes","useCallback","files","getActiveWorkspaceId","file","UploadedFile","sizeOfFiles","sum","currentlyUsing","availableSpace","entry","canMoveEntriesInto","targets","destination","target","destinationIsInTarget","destinationPath","part","useFolderDropAction","uploadFiles","folderAcceptsDrop","makeFolderTreeDragId","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","Tree","children","expandedKeys","setExpandedKeys","useControlledState","selectedKeys","setSelectedKeys","focusedNode","setFocusedNode","FocusScope","TreeRoot","TreeLabel","icon","domProps","useContext","isExpanded","isSelected","handleExpandIconClick","newExpandedKeys","_","ArrowRightIcon","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","hasChildren","isFirstNode","isFocused","onKeyDown","newKeys","parentEl","childNode","createEventHandler","FolderTree","navigate","useNavigate","activePage","tree","useMemo","folders","keys","entryHash","findHash","FolderTreeItem","useRef","isRootFolder","isDragging","draggableProps","useDraggable","droppableProps","mergeProps","BackupIcon","FolderIcon","item","deleteEntries","useDeleteEntries","getLoaderMessage","entryIds","emptyTrash","deleteForever","backendError","getAxiosErrorMessage","SidebarMenu","CustomMenu","TrashMenuItem","CustomMenuItem","CreateNewButton","isCompact","button","FileUploadIcon","openUploadWindow","activeFolder","UploadFileIcon","DriveFolderUploadIcon","CreateNewFolderIcon","Sidebar","isSubscribed","WorkspaceSwitcher","fetchEntries","setActiveFolder","newFolder","currentPage","shallowEqual","usePaginatedEntries","page","sortDescriptor","searchParams","useSearchParams","isDisabledInSearch","pageParam","lastResponse","getAllEntries","all","cache","driveSearchFilters","FILE_ENTRY_TYPE_FILTER","FilterOperator","FilterControlType","createdAtFilter","updatedAtFilter","alwaysShownFilters","f","SearchFilterList","isMobileMode","DashboardLayoutContext","inputValue","setInputValue","TextField","SearchIcon","FilterList","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","createShareableLink","useCreateShareableLink","addStarToEntries","useAddStarToEntries","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","action","RemoveRedEyeIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","downloadUrl","useFileEntryUrls","FileDownloadIcon","downloadFileFromUrl","RestoreIcon","useDrivePageActions","useNewFolderAction","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","DeleteForeverIcon","EntryActionMenuTrigger","showIfNoActions","PageMenu","EntriesMenu","actions","BaseMenu","createElement","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","EntryActionList","selectedEntries","ActionList","removeShared","Tooltip","MoreVertIcon","DriveContextMenu","PageContextMenu","EntriesContextMenu","position","BaseContextMenu","ContextMenu","useIsTouchDevice","useMediaQuery","useFileViewDnd","isTouchDevice","itemClassName","FileTableRow","isCollapsedMode","TableContext","useViewItemActionHandler","formatFileSize","memoize","bytes","fileTableColumns","FileNameColumn","FormattedDate","ActionsColumn","sizeClassName","FileThumbnail","selectedRows","Checkbox","FileTable","performViewItemAction","Table","BaseFileGridItem","React","footerAdornment","Footer","isMobile","adornment","FileGridItem","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","keyboardHandler","contextMenuHandler","FooterAdornment","FileGrid","AVAILABLE_SORTS","EntriesSortButton","descriptor","column","direction","sort","SortIcon","MenuSection","DriveSortButton","useFolderPath","isEnabled","fetchFolderPath","PageBreadcrumbs","rootItem","useRootItem","content","items","parent","Breadcrumb","BreadcrumbItem","isMenuItem","MixedText","owner","u","InfiniteScrollSentinel","isInitialLoading","fetchNextPage","loaderMarginTop","style","_variant","loadMoreExtraContent","sentinelRef","loadMoreClickCount","setLoadMoreClickCount","innerVariant","leftViewAfterLoading","sentinelEl","observer","opacityAnimation","DropTargetMask","isVisible","mask","FileView","viewMode","containerProps","boxProps","noContentMessage","IllustratedMessage","SvgImage","handleContextMenu","handleKeybinds","isCtrlKeyPressed","Toolbar","AdHost","UploadQueueItem","memo","FileTypeIcon","SizeInfo","FileStatus","fileUpload","bytesUploaded","totalBytes","uploadedBytes","statusMessage","abortUpload","status","errorMessage","isHovered","setIsHovered","abortButton","progressButton","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","UploadQueue","Header","UploadList","inProgressUploadsCount","completedUploadsCount","clearInactive","uploadsArray","virtualizer","useVirtualizer","virtualItem","upload","detailedExamination","DetailsSidebarHeader","entryType","entryName","setRightSidenavStatus","DetailsSidebarSectionHeader","margin","useTaggableTags","getQueryKey","fetchTaggableTags","taggableType","taggableId","notType","invalidateTaggableTagsQuery","taggableIds","useDetachTagFromTaggables","detachTag","useTags","signal","fetchTags","keepPreviousData","resolve","useAttachTagToTaggables","attachTag","ManageTagsDialog","propsAttachedTags","tagType","notTagType","userId","setQuery","isPlaceholderData","queryIsLoading","tags","attachedTagIds","allTags","attachedTags","List","isAttached","ListItem","PushPinIcon","DetailsSidebarTags","ChipList","Chip","DetailsSidebarProperties","GroupsIcon","PropertyList","prettySize","PropertyItem","DetailsSidebar","selectedEntry","NothingSelected","useRenameEntry","renameEntry","RenameEntryDialog","initialName","onSubmit","createFolder","parentId","useCreateFolder","NewFolderDialog","EntryPreviewDialog","defaultActiveIndex","activeIndex","setActiveIndex","FilePreviewDialog","DriveActions","shareEntry","useShareEntry","axios","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","PermissionSelector","getPermissionItemForUser","edit","useChangePermission","changePermission","MemberList","users","UserAvatar","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","SharePanel","isPremium","setIsPremium","isSharing","setIsSharing","price","setPrice","selectedPermission","setSelectedPermission","scheduledAt","setScheduledAt","useNormalizedModels","Item","localDateTime","selectedDate","utcDateTime","Switch","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","randomString","length","random","possible","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","ShareableLinkInput","link","autoFocus","base_url","linkUrl","isCopied","setCopied","useClipboard","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showFieldDefault","showField","setShowField","FormDatePicker","showBorder","title","ShareDialog","initialEntry","focusLinkInput","fileEntry","activePanel","MainDialog","useMoveEntriesDialogFolderSearch","encodeBackendFilters","MoveEntriesDialogSearch","onFolderSelected","searchLabel","ComboBox","MoveEntriesDialogBreadcrumbs","selectedFolder","previous","ArrowBackIcon","myFilesSvg","useMoveEntriesDialogFolders","movingSharedFiles","filters","MoveEntriesDialogFolderList","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","DeleteEntriesForeverDialog","BlockTrashFolderViewDialog","DriveDialogsContainer","activeDialog","getDialog","NavbarSearch","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","prev","EntryPreview","droppableId","itemCount","exitVariant","EntryCount","count","DashboardContentHeader","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","tooltip","ViewListIcon","ViewModuleIcon","InfoIcon","uploadStoreOptions","uploadedFile","DriveLayout","pathname","useLocation","useParams","urlsContextValue","StaticPageTitle","FileUploadProvider","FileEntryUrlsContext","DashboardLayout","Navbar","DashboardSidenav","DashboardContent","searchButton","mobileRightChildren","DashboardNavbar","FloatingActionList","entriesSelected","useLinkPageStore","linkPageState","useShareableLinkPage","orderBy","orderDir","order","isPasswordProtected","password","fetchLinkByHash","lastPage","checkLinkPassword","linkHash","useCheckLinkPassword","importIntoOwnDrive","linkId","useImportIntoOwnDrive","ShareableLinkPageActionButtons","isLoggedIn","alreadyImported","DownloadButton","ImportExportIcon","ShareableLinkNavbar","useIsMobileMediaQuery","PasswordPage","fieldLabel","setPassword","checkPassword","passwordIsInvalid","secureFilesSvg","FolderPreviewFileGrid","onEntrySelected","mobileColumns","config","FolderPreviewFileTable","buildFolderHash","folderHash","useNavigateToSubfolder","FolderPreviewFileView","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","handlePreview","folderEntries","FolderPreviewBreadcrumb","FolderPreviewHeader","activeSort","hasEntry","GridViewIcon","FolderPreview","showEmptyMessage","EmptyMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","NotFoundPage","ActiveWorkspaceProvider"],"mappings":"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","x_google_ignoreList":[0,1,29]}