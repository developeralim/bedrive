{"version":3,"mappings":"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","names":["useIsMutating","filters","queryClient","client","useQueryClient","useMutationState","getResult","mutationCache","options","mutation","optionsRef","React.useRef","result","React.useEffect","React.useSyncExternalStore","React.useCallback","onStoreChange","nextResult","replaceEqualDeep","notifyManager","DashboardLeftSidebar","className","isCompactMode","matchDescendants","menuName","bottomContent","isOverlayMode","variant","customMenuRender","isDarkMode","useIsDarkMode","jsxs","clsx","Fragment","jsx","Logo","SidebarToggleButton","CustomMenu","isActive","dashboardLeftSidebarItemClassName","leftSidenavStatus","setLeftSidenavStatus","name","useContext","DashboardLayoutContext","handleToggle","newStatus","setInLocalStorage","KeyboardArrowLeftIcon","KeyboardArrowRightIcon","DashboardLeftSidebarItem","forwardRef","elementType","isCompact","icon","label","otherChildren","target","to","otherProps","ref","Element","cloneElement","KeyboardArrowUpIcon","createSvgIcon","AdminSidebar","props","version","useSettings","isMobileMode","AdminSidebarNotificationsItem","AdminSidebarAuthUserItem","Trans","user","useAuth","hasUnread","DialogTrigger","NotificationsIcon","Badge","NotificationsDialog","propsAvatar","ItemAvatar","UserAvatar","avatar","NavbarAuthMenu","useAdminSetupAlerts","useQuery","fetchAlerts","apiClient","response","AdminLayout","useIsMobileMediaQuery","DashboardLayout","DashboardNavbar","DashboardSidenav","DashboardContent","SetupAlertsList","Outlet","data","dismissValue","useLocalStorage","shouldShowAlert","SetupAlert","alert","description","SectionHelper","ErrorIcon","UserDatatableFilters","message","FilterOperator","FilterControlType","createdAtFilter","updatedAtFilter","DatatableDataQueryKey","endpoint","params","baseQueryKey","key","useDatatableData","onLoad","optionsQueryKey","signal","paginate","keepPreviousData","resolve","DataTableContext","React","useDataTable","defaultPerPage","perPageOptions","DataTablePaginationFooter","query","onPerPageChange","onPageChange","isMobile","numberFormatter","useNumberFormatter","pagination","_a","perPageSelect","Select","value","option","Item","IconButton","hasNextPage","FilterAltIcon","AccordionAnimation","Accordion","mode","children","isLazy","other","expandedValues","setExpandedValues","useControlledState","itemsCount","AnimatePresence","FocusScope","child","index","isValidElement","AccordionItem","disabled","bodyClassName","bodyPadding","labelClassName","buttonPadding","startIcon","endAppend","chevronPosition","isFirst","footerContent","onHeaderMouseEnter","onHeaderMouseLeave","useRef","isExpanded","wasExpandedOnce","focusManager","useFocusManager","id","useId","buttonId","panelId","onKeyDown","e","toggle","i","newKeys","chevron","ArrowDropDownIcon","m","BooleanFilterPanel","filter","AddFilterDialog","decodedFilters","useBackendFilterUrlParams","formId","useDialogContext","expandedFilters","setExpandedFilters","useState","f","clearButton","Button","applyButton","Dialog","DialogHeader","DialogBody","FilterList","replaceAll","defaultValues","appliedFilter","form","useForm","close","Form","formValue","filterValue","fieldValue","Checkbox","AddFilterDialogPanel","SelectFilterPanel","ChipFieldFilterPanel","DateRangeFilterPanel","NormalizedModelFilterPanel","InputFilterPanel","CustomComponent","AddFilterButton","color","size","desktopButton","mobileButton","DataTableHeader","actions","filtersLoading","searchPlaceholder","searchValue","onSearchChange","trans","useTrans","HeaderLayout","TextField","SearchIcon","domProps","SelectedStateDatatableHeader","selectedItemsCount","FilterListSkeleton","opacityAnimation","Skeleton","DataTable","pinnedFilters","columns","queryParams","baseQueryKeyProp","selectedActions","emptyStateMessage","tableDomProps","onRowAction","enableSelection","selectionStyle","cellHeight","collapseTableOnMobile","skeletonsWhileLoading","border","encodedFilters","setParams","selectedRows","setSelectedRows","BackendFiltersUrlKey","isFiltering","nanoid","ProgressBar","Table","descriptor","page","perPage","DataTablePage","title","headerContent","headerItemsAlign","padding","dataTableProps","titleId","StaticPageTitle","useDeleteSelectedRows","useMutation","deleteSelectedRows","toast","err","showHttpErrorToast","ids","r","DeleteSelectedItemsAction","DeleteItemsDialog","ConfirmationDialog","errorStatusIs","DataTableEmptyStateMessage","filteringTitle","image","IllustratedMessage","SvgImage","teamSvg","DataTableAddItemButton","onClick","href","download","AddIcon","useExportCsv","payload","exportCsv","CsvExportInfoDialog","DialogFooter","DataTableExportCsvButton","dialogIsOpen","setDialogIsOpen","downloadFileFromUrl","FileDownloadIcon","NameWithAvatar","avatarSize","alwaysShowAvatar","avatarLabel","avatarCircle","Avatar","PersonOffIcon","useBanUser","userId","banUser","onFormQueryError","BanUserDialog","isPermanent","values","FormDatePicker","FormSwitch","FormTextField","useUnbanUser","unbanUser","useImpersonateUser","impersonateUser","userDatatableColumns","ChipList","role","Chip","Link","s","CheckIcon","CloseIcon","FormattedDate","Tooltip","EditIcon","UnbanButton","ImpersonateButton","unban","confirmed","impersonate","LoginIcon","useCreateUser","navigate","useNavigate","createUser","CreateUserDialog","FileUploadProvider","FormImageSelector","UserDatatable","billing","filteredColumns","c","Actions","subscribeWithSelectorImpl","fn","set","get","api","origSubscribe","selector","optListener","listener","equalityFn","currentSlice","state","nextSlice","previousSlice","subscribeWithSelector","DefaultAppearanceConfig","mergedAppearanceConfig","deepMerge","AppAppearanceConfig","resolvePreviewAppIsLoaded","previewAppIsLoaded","useAppearanceStore","create","preview","postMessage","font","themeId","node","document","window","command","appearanceState","useAdminSettings","adminSettingsQueryOptions","fetchAdminSettings","prepareSettingsForHookForm","obj","useAppearanceEditorValuesQuery","fetchAppearanceValues","useAppearanceEditorValues","usePreviewRoute","pathname","useLocation","subRoute","_b","useMatches","activeSection","config","baseRoute","AppearanceEditorPage","isAppearanceEditorActive","useAppearanceEditorMode","base_url","iframeRef","iframeRoute","useEffect","Navigate","url","Sidebar","spinner","ProgressCircle","AppearanceButton","endIcon","ButtonBase","MenuList","fields","append","useFieldArray","field","useAvailableRoutes","menuConfig","route","ucFirst","string","AddMenuItemDialog","useValueLists","categories","routeItems","AddCustomLink","AddRoute","category","items","List","item","ListItem","last","DragIndicatorIcon","dropdownMenu","sortableLineStrategy","sortSession","onDropPositionChange","previousPosition","newPosition","rect","droppables","midY","overIndex","clearLinePreview","addLinePreview","droppableId","droppable","itemIndex","el","side","moveItemInArray","array","fromIndex","toIndex","from","clamp","delta","moveItemInNewArray","newArray","transition","sortableTransformStrategy","sortable","currentIndex","rects","newRects","oldRect","newRect","sortableTarget","x","y","sortableMoveNodeStrategy","moveNode","newIndex","parentEl","strategies","useSortable","type","onSortEnd","onSortStart","onDragEnd","strategy","draggableProps","dragHandleRef","useDraggable","getScrollParent","updateRects","droppableProps","useDroppable","oldIndex","mergeProps","AppearanceMenuEditor","menuIndex","useParams","getValues","useFormContext","menuFormPath","menu","MenuEditorSection","has_mobile_app","menuSectionConfig","menuPositions","useMemo","positions","position","FormChipField","Option","MenuItemsManager","DeleteMenuTrigger","formPath","useWatch","menuItemConfig","MenuListItem","menus","isConfirmed","_","DeleteIcon","sortableProps","Icon","createSvgIconFromTree","iconOnlyLabel","PermissionSelector","valueListKey","permissions","setValue","showAdvanced","setShowAdvanced","groupedPermissions","buildPermissionList","onRestrictionChange","newPermission","newValue","p","groupName","anyChecked","prettyName","DoneAllIcon","permission","v","isChecked","Switch","Restrictions","onChange","setRestrictionValue","nextState","produce","draftState","restriction","isLast","FormPermissionSelector","useController","formProps","allPermissions","selectedPermissions","group","g","mergedPermission","mergeRestrictions","allRestrictions","selectedRestrictions","selected","iconGridStyle","skeletons","IconList","__vitePreload","IconPicker","onIconSelected","Suspense","IconPickerDialog","IconPickerWrapper","MenuItemForm","formPathPrefix","hideRoleAndPermissionFields","prefixName","IconDialogTrigger","DestinationSelector","TargetSelect","RoleSelector","SubscriptionStatusSelector","buttonProps","watch","fieldName","watchedItemIcon","iconTree","currentType","previousType","usePrevious","selectedCategory","FormSelect","roles","Section","AppearanceMenuItemEditor","menuItemIndex","MenuItemEditor","itemsPath","MenuItemEditorSection","DeleteItemTrigger","currentItems","saveAppearanceChangesMutationKey","useSaveAppearanceChanges","saveChanges","changes","BlockerDialog","isBlocked","allowedPath","reset","proceed","useBlocker","nextLocation","handleBeforeUnload","AppearanceEditorForm","breadcrumb","blockerAllowedPath","isDirty","useFormState","subscription","AppearanceEditorLayout","AppearanceEditorHeader","isSaving","usePreviousPath","location","AppearanceEditorBreadcrumb","backLink","childrenArray","Children","previousPath","sections","LabelList","isEmphasized","GeneralSection","BrandingImageSelector","SiteNameTextField","SiteDescriptionTextArea","defaultValue","randomNumber","min","max","randomBuffer","number","ThemeList","lightThemeColors","currentThemes","NavLink","AceEditor","AceDialog","onSave","footerStartAction","beautify","editorRef","isValid","setIsValid","Footer","startAction","useSeoTags","fetchTags","useUpdateSeoTags","updateTags","tags","pages","names","SeoSection","isLoading","FullPageLoader","TagEditorTrigger","TagsEditorDialog","resetButton","CustomCodeSection","CustomCodeDialogTrigger","articlesSvg","CustomPageDatatableFilters","dynamicFilters","USER_MODEL","CustomPageDatatableColumns","LinkStyle","CustomPageDatablePage","SiteConfigContext","AppSettingsNavConfig","filteredSettingsNavConfig","getBootstrapData","SettingsNavConfig","AdminSettingsPage","propsNavConfig","navConfig","a","b","MobileNav","DesktopNav","newPage","useGenerateSitemap","generate","useUpdateAdminSettings","updateAdminSettings","server","files","formData","file","SettingsSeparator","SettingsFormLoadingIndicator","AdminSettingsForm","updateSettings","errors","keys","AdminSettingsLayout","headerMargin","LearnMoreLink","link","site","LinkIcon","ExternalLink","GeneralSettings","_c","_d","SiteUrlSection","HomepageSection","ThemeSection","SitemapSection","isInvalid","chunks","homepage","selectedType","themes","useBootstrapDataStore","theme","generateSitemap","ColorIcon","colorToThemeValue","parseColor","TuneIcon","ThemeSettingsDialogTrigger","themeIndex","currentTheme","SettingsDialog","RestartAltIcon","ThemeMoreOptionsButton","confirmDialogOpen","setConfirmDialogOpen","deleteTheme","MenuTrigger","path","defaultColors","colorName","themeValue","MoreVertIcon","Menu","MenuItem","u","t","n","o","d","h","l","C","E","H","L","w","K","I","q","D","S","T","F","X","Y","V","$","J","Q","U","W","Z","qe","ke","Ie","Oe","ColorPresets","ColorSwatch","colors","presetButtons","isSelected","DefaultPresets","ColorPicker","colorPresets","showInput","setColor","presets","style","getInputFieldClassNames","HexColorPicker","newColor","hex","HexColorInput","ColorPickerDialog","hideFooter","initialValue","navbarColorMap","NavbarColorPicker","selectedValue","previewColor","bgColor","AppearanceSectionTitle","marginTop","colorList","ThemeEditor","selectedFont","isAborted","ColorPickerTrigger","initialThemeValue","selectedThemeValue","setSelectedThemeValue","selectThemeValue","themeValueToHex","valueChanged","TabContext","Tabs","overflow","tabsRef","selectedTab","setSelectedTab","ContextValue","TabLine","setStyle","useLayoutEffect","prevState","TabList","center","expand","Tab","isDisabled","paddingProp","relative","width","height","mergedClassname","textColor","tabIndex","TabPanels","panelArray","rendered","panel","TabPanel","setTabIndex","update","walker","getFocusableTreeWalker","observer","SettingsErrorGroup","separatorBottom","separatorTop","error","JsonChipField","onBlur","invalid","arrayValue","mixedValue","ChipField","SubscriptionSettings","_e","_g","_f","_i","_h","_k","_j","_l","_m","_n","_o","_p","_q","PaypalSection","StripeSection","paypalIsEnabled","stripeEnabled","LocalizationSettings","optionQuery","timezones","localizations","today","useCurrentDateTime","timezone","locale","FormRadioGroup","FormRadio","DateFormatPresets","format","AuthenticationSettings","_r","_s","_t","_u","_v","_w","EmailConfirmationSection","EnvatoSection","GoogleSection","FacebookSection","TwitterSection","MailNotSetupWarning","text","settings","envatoLoginEnabled","googleLoginEnabled","facebookLoginEnabled","twitterLoginEnabled","spaceUnits","convertToBytes","unit","MaxValue","FormFileSizeField","setByteValue","byteValue","inputRef","liveValue","setLiveValue","setUnit","amount","newUnit","fromBytes","newBytes","unitSelect","memoize","bytes","pretty","prettyBytes","fetchMaxServerUploadSize","useMaxServerUploadSize","useGenerateDropboxRefreshToken","generateToken","DropboxForm","appKey","appSecret","refreshToken","DropboxRefreshTokenDialog","generateRefreshToken","useUploadS3Cors","uploadCors","UploadingSettings","PrivateUploadSection","PublicUploadSection","CredentialsSection","MaxUploadSizeSection","clearErrors","drives","S3Form","FtpForm","DigitalOceanForm","BackblazeForm","S3DirectUploadField","defaultSettings","s3DriverEnabled","MailgunCredentials","SmtpCredentials","SesCredentials","PostmarkCredentials","GmailIcon","ConnectGmailPanel","connectSocial","useSocialLogin","connectedEmail","handleGmailConnect","email","connectButton","reconnectPanel","OutgoingMailGroup","selectedDriver","credentialForms","CredentialsForm","OutgoingEmailSettings","ContactAddressSection","contactPageUrl","clearCache","useClearCache","CacheSettings","CacheSelect","cacheDriver","CredentialSection","MemcachedCredentials","LoggingSettings","SentrySection","parts","useQueueStats","fetchStats","QueueSettings","StatusWidget","DriverSection","status","OpenInNewIcon","queueDriver","SqsCredentials","WebsocketSettings","control","driver","PusherFields","AblyFields","RecaptchaSettings","RecaptchaSection","FileField","useObjectRef","fieldProps","inputProps","useField","inputFieldClassNames","Field","FormFileField","ReportsSettings","AnalyticsSection","useStickySentinel","isSticky","setIsSticky","observerRef","sentinelRef","useCallback","sentinel","CrupdateResourceLayout","onSubmit","subTitle","backButton","disableSaveWhenNotDirty","wrapInContainer","submitButtonText","saveButton","CrupdateResourceHeader","DirtyFormSaveDrawer","startActions","endActions","CrupdateResourceSection","margin","labelMargin","formState","UpdateUserPageHeader","badge","isSuspended","banReason","AvatarSelector","ErrorOutlineIcon","uploadAvatar","useUploadAvatar","removeAvatar","useRemoveAvatar","ImageSelector","onSuccess","useUrlBackedTabs","tabName","tab","updateUserPageTabs","UpdateUserPageTabs","tabs","authUser","hasPermission","apiEnabled","filteredTabs","activeTab","setActiveTab","useDeleteUser","deleteUser","UpdateUserPageActions","deleteDialogOpen","setDeleteDialogOpen","DeleteUserDialog","KeyboardArrowDownIcon","openDialog","UpdateUserPage","useUser","PageContent","PageStatus","ArrowBackIcon","TranslateIcon","getLocalWithLinesQueryKey","localeId","useLocaleWithLines","fetchLocaleWithLines","UpdateLocalization","useUpdateLocalization","UpdateLocalizationDialog","localization","languages","updateLocalization","language","createLocalization","useCreateLocalization","CreateLocationDialog","aroundTheWorldSvg","useUploadTranslationFile","uploadFile","columnConfig","RowActionsMenuTrigger","LocalizationIndex","openUploadWindow","FileInputType","NewTranslationDialog","TranslationManagementPage","lines","setLines","searchQuery","setSearchQuery","Header","LinesList","Breadcrumb","BreadcrumbItem","newTranslation","newLines","ActionsMenuTrigger","filteredLines","translation","lowerCaseQuery","rowVirtualizer","useVirtualizer","virtualItem","ImageZoomDialog","images","activeIndex","setActiveIndex","src","AdsPage","AdsForm","ads","ad","AdSection","adConfig","SectionList","sortedSection","section","RoleIndexPageFilters","RolesIndexPage","Endpoint","useRole","roleId","fetchRole","useUpdateRole","updateRole","CrupdateRolePageSettingsPanel","isInternal","workspaces","watchedType","SelectUserDialog","multiple","searchTerm","setSearchTerm","useNormalizedModels","users","selectedUsers","setSelectedUsers","UserListItem","onSelected","useRemoveUsersFromRole","userIds","removeUsersFromRole","useAddUsersToRole","addUsersToRole","userColumn","desktopColumns","mobileColumns","EditRolePageUsersPanel","AssignUserAction","RemoveUsersAction","addUsers","removeUsers","EditRolePage","useCreateRole","createRole","CreateRolePage","TagIndexPageFilters","types","softwareEngineerSvg","CrupdateTagForm","isSystem","root","factory","module","this","charMap","locales","replace","replacement","trim","slug","ch","appendChar","customMap","slugifyString","strict","slugified","slugify","useCreateNewTag","createNewTag","CreateTagDialog","useUpdateTag","updateTag","UpdateTagDialog","tag","TagIndexPage","VisibilityIcon","uploadSvg","entry","owner","FileTypeIcon","FormattedBytes","FilePreviewDialog","FileEntryIndexPage","FILE_ENTRY_INDEX_FILTERS","SubscriptionIndexPageFilters","timestampFilter","subscriptionsSvg","useUpdateSubscription","updateSubscription","CrupdateSubscriptionForm","useProducts","watchedProductId","selectedProduct","FormNormalizedModelField","product","price","FormattedPrice","UpdateSubscriptionDialog","useCreateSubscription","createNewSubscription","CreateSubscriptionDialog","createSubscription","PauseIcon","PlayArrowIcon","SubscriptionActions","SubscriptionsIndexPage","PageActions","ResumeSubscriptionButton","SuspendSubscriptionButton","CancelSubscriptionButton","cancelSubscription","useCancelSubscription","handleSuspendSubscription","resumeSubscription","useResumeSubscription","handleResumeSubscription","handleDeleteSubscription","SyncIcon","useSyncProducts","syncPlans","useDeleteProduct","updateProduct","productId","PlansIndexPageFilters","DeleteProductButton","PlansIndexPage","deleteProduct","useProduct","fetchProduct","BillingPeriodPresets","PriceForm","onRemovePrice","currencies","isNewProduct","isNewPrice","subscriberCount","billingPeriodPreset","setBillingPeriodPreset","interval","intervalCount","preset","allowPriceChanges","BillingPeriodSelect","CustomBillingPeriodField","onValueChange","setFormValue","maxIntervalCount","CrupdatePlanForm","FeatureListForm","PricingListForm","remove","useUpdateProduct","backendPayload","feature","EditPlanPage","useCreateProduct","createProduct","CreatePlanPage","GdprSettings","CookieNoticeSection","RegistrationPoliciesSection","noticeEnabled","useUpdateCustomPage","pageId","finalEndpoint","updatePage","ArticleEditorTitle","editingTitle","setEditingTitle","watchedTitle","titlePlaceholder","SlugEditor","host","placeholder","onInputBlur","showLinkIcon","pattern","minLength","maxLength","hideButton","prefix","suffix","isEditing","setIsEditing","handleSubmit","UndoIcon","RedoIcon","HistoryButtons","editor","CodeIcon","ModeButton","Divider","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FontStyleButtons","FormatListBulletedIcon","FormatListNumberedIcon","ListButtons","bulletActive","orderedActive","insertLinkIntoTextEditor","LinkButton","LinkDialog","previousUrl","previousText","ImageIcon","TwoMB","ImageButton","diskPrefix","selectAndUploadFile","useActiveUpload","handleUpload","Disk","FormatClearIcon","ClearFormatButton","HorizontalRuleIcon","PriorityHighIcon","NoteIcon","SmartDisplayIcon","InsertMenuTrigger","dialog","setDialog","WarningIcon","EmbedDialog","previousSrc","Keyboard","modifier","separator","modKey","isMac","FormatMenuTrigger","FormatColorTextIcon","FormatColorFillIcon","ColorButtons","textActive","backgroundActive","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","iconMap","AlignButtons","activeKey","ActiveIcon","FormatIndentDecreaseIcon","FormatIndentIncreaseIcon","IndentButtons","CodeBlockMenuTrigger","MenubarRowClassName","ArticleBodyEditorMenubar","justify","hideInsertButton","imageDiskPrefix","extendedVisible","setExtendedVisible","UnfoldLessIcon","UnfoldMoreIcon","ExtendedButtons","ArticleEditorStickyHeader","allowSlugEditing","slugPrefix","FormSlugEditor","SaveButton","manuallyChanged","formVal","ArticleBodyEditor","EditCustomPage","useCustomPage","PageMetaTags","crupdatePage","handleSave","editorContent","content","FormProvider","useCreateCustomPage","createPage","CreateCustomPage","fontImage","FontSelectorFilters","setFilters","BrowserSafeFonts","chunkArray","chunkSize","resultArray","chunkIndex","useFilter","collator","useCollator","substring","scan","sliceLen","slice","useFontSelectorState","currentPage","setCurrentPage","setFilterState","contains","allFonts","filteredFonts","fonts","loadFonts","FontSelectorPagination","total","FontSelector","FontList","gridClassName","FontListSkeleton","FontButton","displayName","ThemeFontPanel","radiusMap","ThemeRadiusPanel","RadiusSelector","hidePill","formKey","currentValue","PreviewButton","radius","LogsPage","BooleanIndicator","useRerunScheduledCommand","rerunCommand","EventRepeatIcon","ScheduleDatatableColumns","FormattedRelativeTime","RerunButton","timelineImage","DownloadIcon","ScheduleLogDatatable","bugFixingImage","ErrorLogDatatableColumns","InfoIcon","ErrorLogEntryDialog","downloadLogItem","useDeleteErrorLog","deleteLogFile","identifier","ErrorLogDatatable","setOnce","selectedFile","setSelectedFile","firstFile","FileSelector","ConfirmDeleteDialog","deleteLog","closeDialog","openedImage","useOutgoingEmailLogItemWithMime","fetchLogItem","OutgoingEmailLogEntryDialog","logItemId","iframe","OutgoingEmailLogDatatableColumns","StatusChip","PreviewEmailButton","OutgoingEmailLogDatatableFilters","OutgoingEmailLogDatatable","UserRoleSection","setQuery","suggestion","useUpdateUser","updateUser","UpdateUserForm","useOutletContext","UpdateUserDetailsTab","EmailConfirmSection","resendConfirmationEmail","useResendVerificationEmail","require_email_confirmation","UpdateUserPermissionsTab","UpdateUserDatetimeTab","LocalizationPanel","UpdateUserApiTab","AccessTokenPanel","UpdateUserSecurityTab","ChangePasswordPanel","TwoFactorPanel","SocialLoginPanel","SessionsPanel","ThemeEditorForm","ThemeEditorBreadcrumb","lastSegment","allThemes","activeTheme","MenuEditorForm","MenuEditorBreadcrumb","allMenus","activeMenu","activeItem","DriveSettings","LandingPageAppearanceForm","BaseSlider","inline","showValueLabel","slider","trackColor","fillColor","trackRef","getThumbPercent","getThumbValueLabel","labelId","groupId","thumbIds","minValue","maxValue","step","getValueLabel","outputValue","maxLabelLength","wrapperClassname","getWrapperHeight","getTrackColor","getTrackHeight","getFillColor","wrapperHeight","useSlider","formatOptions","onChangeEnd","onPointerDown","showThumbOnHoverOnly","thumbSize","onPointerMove","isPointerOver","setIsPointerOver","addGlobalListener","removeGlobalListener","useGlobalListeners","setValues","valuesRef","draggedThumbs","setDraggedThumbs","draggedThumbsRef","getFormattedValue","isThumbDragging","getThumbMinValue","getThumbMaxValue","setThumbValue","isThumbEditable","thisMin","thisMax","snapValueToStep","replaceIndex","updateDraggedThumbs","dragging","wasDragging","focusedThumb","setFocusedThumb","getValuePercent","setThumbPercent","percent","getPercentValue","getRoundedValue","val","editableThumbsRef","setThumbEditable","editable","realTimeTrackDraggingIndex","currentPointer","handlePointerDown","trackPosition","closestThumb","split","lastLeft","firstRight","onUpTrack","currentPosition","moveDomProps","usePointerEvents","deltaX","SliderThumb","isThumbDisabled","ariaLabel","inputObjRef","isSliderDisabled","isDragging","focusInput","isFocused","handlePointerUp","thumbColor","createEventHandler","Slider","baseProps","FormSlider","LandingPageSectionGeneral","HeaderSection","FooterSection","defaultImage","LandingPageSectionActionButtons","LandingPageSectionPrimaryFeatures","FeatureForm","LandingPageSecondaryFeatures","getDefaultImage"],"sources":["../../../node_modules/@tanstack/react-query/build/modern/useMutationState.js","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-left-sidebar.tsx","../../../common/foundation/resources/client/ui/library/icons/material/KeyboardArrowUp.tsx","../../../common/foundation/resources/client/admin/admin-sidebar.tsx","../../../common/foundation/resources/client/admin/use-admin-setup-alerts.ts","../../../common/foundation/resources/client/admin/admin-layout.tsx","../../../common/foundation/resources/client/admin/users/user-datatable-filters.ts","../../../common/foundation/resources/client/datatable/requests/paginated-resources.ts","../../../common/foundation/resources/client/datatable/page/data-table-context.ts","../../../common/foundation/resources/client/datatable/data-table-pagination-footer.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FilterAlt.tsx","../../../common/foundation/resources/client/ui/library/accordion/accordtion-animation.ts","../../../common/foundation/resources/client/ui/library/accordion/accordion.tsx","../../../common/foundation/resources/client/datatable/filters/panels/boolean-filter-panel.tsx","../../../common/foundation/resources/client/datatable/filters/add-filter-dialog.tsx","../../../common/foundation/resources/client/datatable/filters/add-filter-button.tsx","../../../common/foundation/resources/client/datatable/data-table-header.tsx","../../../common/foundation/resources/client/datatable/selected-state-datatable-header.tsx","../../../common/foundation/resources/client/datatable/filters/filter-list/filter-list-skeleton.tsx","../../../common/foundation/resources/client/datatable/data-table.tsx","../../../common/foundation/resources/client/datatable/page/data-table-page.tsx","../../../common/foundation/resources/client/datatable/requests/delete-selected-rows.ts","../../../common/foundation/resources/client/datatable/page/delete-selected-items-action.tsx","../../../common/foundation/resources/client/datatable/page/data-table-emty-state-message.tsx","../../../common/foundation/resources/client/admin/roles/team.svg","../../../common/foundation/resources/client/datatable/data-table-add-item-button.tsx","../../../common/foundation/resources/client/datatable/requests/use-export-csv.ts","../../../common/foundation/resources/client/datatable/csv-export/csv-export-info-dialog.tsx","../../../common/foundation/resources/client/datatable/csv-export/data-table-export-csv-button.tsx","../../../common/foundation/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PersonOff.tsx","../../../common/foundation/resources/client/admin/users/requests/use-ban-user.ts","../../../common/foundation/resources/client/admin/users/ban-user-dialog.tsx","../../../common/foundation/resources/client/admin/users/requests/use-unban-user.ts","../../../common/foundation/resources/client/admin/users/requests/use-impersonate-user.ts","../../../common/foundation/resources/client/admin/users/user-datatable-columns.tsx","../../../common/foundation/resources/client/admin/users/requests/create-user.ts","../../../common/foundation/resources/client/admin/users/create-user-dialog.tsx","../../../common/foundation/resources/client/admin/users/user-datatable.tsx","../../../node_modules/zustand/esm/middleware.mjs","../../../common/foundation/resources/client/admin/appearance/config/default-appearance-config.ts","../../../common/foundation/resources/client/admin/appearance/config/merged-appearance-config.ts","../../../common/foundation/resources/client/admin/appearance/appearance-store.ts","../../../common/foundation/resources/client/admin/settings/requests/use-admin-settings.ts","../../../common/foundation/resources/client/admin/appearance/requests/use-appearance-editor-values.ts","../../../common/foundation/resources/client/admin/appearance/appearance-editor-page.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-button.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-list.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/hooks/available-routes.ts","../../../common/foundation/resources/client/ui/library/utils/string/uc-first.ts","../../../common/foundation/resources/client/admin/appearance/sections/menus/add-menu-item-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/DragIndicator.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/dropdown-menu.svg","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/sortable-line-strategy.ts","../../../common/foundation/resources/client/ui/library/utils/array/move-item-in-array.ts","../../../common/foundation/resources/client/ui/library/utils/array/move-item-in-new-array.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/sortable-transform-strategy.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/sortable-move-node-strategy.ts","../../../common/foundation/resources/client/ui/library/interactions/dnd/sortable/use-sortable.ts","../../../common/foundation/resources/client/admin/appearance/sections/menus/appearance-menu-editor.tsx","../../../common/foundation/resources/client/auth/ui/permission-selector.tsx","../../../common/foundation/resources/client/ui/icon-picker/icon-grid-style.ts","../../../common/foundation/resources/client/ui/icon-picker/icon-picker.tsx","../../../common/foundation/resources/client/ui/icon-picker/icon-picker-dialog.tsx","../../../common/foundation/resources/client/admin/menus/menu-item-form.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-item-editor.tsx","../../../common/foundation/resources/client/admin/appearance/requests/use-save-appearance-editor-changes.ts","../../../common/foundation/resources/client/ui/library/overlays/dialog/blocker-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-editor-form.tsx","../../../common/foundation/resources/client/ui/navigation/use-previous-path.ts","../../../common/foundation/resources/client/admin/appearance/appearance-editor-breadcrumb.tsx","../../../common/foundation/resources/client/admin/appearance/sections/general-section.tsx","../../../common/foundation/resources/client/ui/library/utils/string/random-number.ts","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-list.tsx","../../../common/foundation/resources/client/ace-editor/ace-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/sections/seo/use-seo-tags.ts","../../../common/foundation/resources/client/admin/appearance/sections/seo/use-update-seo-tags.ts","../../../common/foundation/resources/client/admin/appearance/sections/seo/seo-section.tsx","../../../common/foundation/resources/client/admin/appearance/sections/code/custom-code-section.tsx","../../../common/foundation/resources/client/admin/custom-pages/articles.svg","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datatable-filters.tsx","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datatable-columns.tsx","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datable-page.tsx","../../../resources/client/admin/settings/app-settings-nav-config.ts","../../../common/foundation/resources/client/admin/settings/settings-nav-config.ts","../../../common/foundation/resources/client/admin/settings/admin-settings-page.tsx","../../../common/foundation/resources/client/admin/settings/requests/use-generate-sitemap.ts","../../../common/foundation/resources/client/admin/settings/requests/use-update-admin-settings.ts","../../../common/foundation/resources/client/admin/settings/form/settings-separator.tsx","../../../common/foundation/resources/client/admin/settings/form/settings-form-loading-indicator.tsx","../../../common/foundation/resources/client/admin/settings/form/admin-settings-form.tsx","../../../common/foundation/resources/client/admin/settings/form/learn-more-link.tsx","../../../common/foundation/resources/client/admin/settings/pages/general-settings.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/color-icon.tsx","../../../common/foundation/resources/client/ui/library/themes/utils/color-to-theme-value.ts","../../../common/foundation/resources/client/ui/library/icons/material/Tune.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-settings-dialog-trigger.tsx","../../../common/foundation/resources/client/ui/library/icons/material/RestartAlt.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-more-options-button.tsx","../../../node_modules/react-colorful/dist/index.mjs","../../../common/foundation/resources/client/ui/library/color-picker/color-presets.ts","../../../common/foundation/resources/client/ui/library/color-picker/color-swatch.tsx","../../../common/foundation/resources/client/ui/library/color-picker/color-picker.tsx","../../../common/foundation/resources/client/ui/library/color-picker/color-picker-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/navbar-color-picker.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-section-title.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-editor.tsx","../../../common/foundation/resources/client/ui/library/tabs/tabs-context.tsx","../../../common/foundation/resources/client/ui/library/tabs/tabs.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab-line.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab-list.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab.tsx","../../../common/foundation/resources/client/ui/library/tabs/tab-panels.tsx","../../../common/foundation/resources/client/admin/settings/form/settings-error-group.tsx","../../../common/foundation/resources/client/admin/settings/form/json-chip-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/subscription-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/localization-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/authentication-settings.tsx","../../../common/foundation/resources/client/ui/library/utils/files/space-units.ts","../../../common/foundation/resources/client/ui/library/utils/files/convert-to-bytes.ts","../../../common/foundation/resources/client/uploads/components/file-size-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/max-server-upload-size.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/use-generate-dropbox-refresh-token.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form.tsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/use-upload-s3-cors.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/uploading-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/mailgun-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/smtp-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/ses-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/postmark-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/gmail-icon.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/connect-gmail-panel.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-mail-group.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-email-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/clear-cache.ts","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/cache-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/logging-settings.tsx","../../../common/foundation/resources/client/admin/settings/requests/use-queue-stats.ts","../../../common/foundation/resources/client/admin/settings/pages/queue-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/websocket-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/recaptcha-settings.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/file-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/reports-settings.tsx","../../../common/foundation/resources/client/ui/library/utils/hooks/sticky-sentinel.ts","../../../common/foundation/resources/client/admin/crupdate-resource-layout.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-header.tsx","../../../common/foundation/resources/client/http/use-url-backed-tabs.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-tabs.tsx","../../../common/foundation/resources/client/admin/users/requests/use-delete-user.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-actions.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Translate.tsx","../../../common/foundation/resources/client/admin/translations/use-locale-with-lines.ts","../../../common/foundation/resources/client/admin/translations/update-localization.ts","../../../common/foundation/resources/client/admin/translations/update-localization-dialog.tsx","../../../common/foundation/resources/client/admin/translations/create-localization.ts","../../../common/foundation/resources/client/admin/translations/create-localization-dialog.tsx","../../../common/foundation/resources/client/admin/translations/around-the-world.svg","../../../common/foundation/resources/client/admin/translations/use-upload-translation-file.ts","../../../common/foundation/resources/client/admin/translations/localization-index.tsx","../../../common/foundation/resources/client/admin/translations/new-translation-dialog.tsx","../../../common/foundation/resources/client/admin/translations/translation-management-page.tsx","../../../common/foundation/resources/client/ui/library/overlays/dialog/image-zoom-dialog.tsx","../../../common/foundation/resources/client/admin/ads/ads-page.tsx","../../../common/foundation/resources/client/admin/appearance/section-list.tsx","../../../common/foundation/resources/client/admin/roles/role-index-page-filters.ts","../../../common/foundation/resources/client/admin/roles/roles-index-page.tsx","../../../common/foundation/resources/client/admin/roles/requests/use-role.ts","../../../common/foundation/resources/client/admin/roles/requests/use-update-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/crupdate-role-settings-panel.tsx","../../../common/foundation/resources/client/users/select-user-dialog.tsx","../../../common/foundation/resources/client/admin/roles/requests/use-remove-users-from-role.ts","../../../common/foundation/resources/client/admin/roles/requests/use-add-users-to-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/edit-role-page-users-panel.tsx","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/edit-role-page.tsx","../../../common/foundation/resources/client/admin/roles/requests/user-create-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/create-role-page.tsx","../../../common/foundation/resources/client/admin/tags/tag-index-page-filters.ts","../../../common/foundation/resources/client/admin/tags/software-engineer.svg","../../../common/foundation/resources/client/admin/tags/crupdate-tag-form.tsx","../../../node_modules/slugify/slugify.js","../../../common/foundation/resources/client/ui/library/utils/string/slugify-string.ts","../../../common/foundation/resources/client/admin/tags/requests/use-create-new-tag.ts","../../../common/foundation/resources/client/admin/tags/create-tag-dialog.tsx","../../../common/foundation/resources/client/admin/tags/requests/use-update-tag.ts","../../../common/foundation/resources/client/admin/tags/update-tag-dialog.tsx","../../../common/foundation/resources/client/admin/tags/tag-index-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Visibility.tsx","../../../common/foundation/resources/client/admin/file-entry/upload.svg","../../../common/foundation/resources/client/admin/file-entry/file-entry-index-page.tsx","../../../common/foundation/resources/client/admin/subscriptions/subscription-index-page-filters.ts","../../../common/foundation/resources/client/admin/subscriptions/subscriptions.svg","../../../common/foundation/resources/client/admin/subscriptions/requests/use-update-subscription.ts","../../../common/foundation/resources/client/admin/subscriptions/crupdate-subscription-form.tsx","../../../common/foundation/resources/client/admin/subscriptions/update-subscription-dialog.tsx","../../../common/foundation/resources/client/admin/subscriptions/requests/use-create-subscription.ts","../../../common/foundation/resources/client/admin/subscriptions/create-subscription-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Pause.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PlayArrow.tsx","../../../common/foundation/resources/client/admin/subscriptions/subscriptions-index-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Sync.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-sync-products.ts","../../../common/foundation/resources/client/admin/plans/requests/use-delete-product.ts","../../../common/foundation/resources/client/admin/plans/plans-index-page-filters.ts","../../../common/foundation/resources/client/admin/plans/plans-index-page.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/billing-period-presets.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/price-form.tsx","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/crupdate-plan-form.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-update-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/edit-plan-page.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-create-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/create-plan-page.tsx","../../../common/foundation/resources/client/admin/settings/pages/gdpr-settings.tsx","../../../common/foundation/resources/client/admin/custom-pages/requests/use-update-custom-page.ts","../../../common/foundation/resources/client/article-editor/article-editor-title.tsx","../../../common/foundation/resources/client/ui/other/slug-editor.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Undo.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Redo.tsx","../../../common/foundation/resources/client/text-editor/menubar/history-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Code.tsx","../../../common/foundation/resources/client/text-editor/menubar/mode-button.tsx","../../../common/foundation/resources/client/text-editor/menubar/divider.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatBold.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatItalic.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatUnderlined.tsx","../../../common/foundation/resources/client/text-editor/menubar/font-style-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatListBulleted.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatListNumbered.tsx","../../../common/foundation/resources/client/text-editor/menubar/list-buttons.tsx","../../../common/foundation/resources/client/text-editor/insert-link-into-text-editor.ts","../../../common/foundation/resources/client/text-editor/menubar/link-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Image.tsx","../../../common/foundation/resources/client/text-editor/menubar/image-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatClear.tsx","../../../common/foundation/resources/client/text-editor/menubar/clear-format-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/HorizontalRule.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PriorityHigh.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Note.tsx","../../../common/foundation/resources/client/ui/library/icons/material/SmartDisplay.tsx","../../../common/foundation/resources/client/text-editor/menubar/insert-menu-trigger.tsx","../../../common/foundation/resources/client/ui/library/keyboard/keyboard.tsx","../../../common/foundation/resources/client/text-editor/menubar/format-menu-trigger.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatColorText.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatColorFill.tsx","../../../common/foundation/resources/client/text-editor/menubar/color-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignLeft.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignCenter.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignRight.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignJustify.tsx","../../../common/foundation/resources/client/text-editor/menubar/align-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatIndentDecrease.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatIndentIncrease.tsx","../../../common/foundation/resources/client/text-editor/menubar/indent-buttons.tsx","../../../common/foundation/resources/client/text-editor/menubar/code-block-menu-trigger.tsx","../../../common/foundation/resources/client/article-editor/article-body-editor-menubar.tsx","../../../common/foundation/resources/client/article-editor/article-editor-sticky-header.tsx","../../../common/foundation/resources/client/admin/custom-pages/edit-custom-page.tsx","../../../common/foundation/resources/client/admin/custom-pages/requests/use-create-custom-page.ts","../../../common/foundation/resources/client/admin/custom-pages/create-custom-page.tsx","../../../common/foundation/resources/client/ui/font-selector/font.svg","../../../common/foundation/resources/client/ui/font-selector/font-selector-filters.tsx","../../../common/foundation/resources/client/ui/library/fonts/font-picker/browser-safe-fonts.ts","../../../common/foundation/resources/client/ui/library/utils/array/chunk-array.ts","../../../common/foundation/resources/client/ui/library/i18n/use-filter.ts","../../../common/foundation/resources/client/ui/font-selector/font-selector-state.ts","../../../common/foundation/resources/client/ui/font-selector/font-selector-pagination.tsx","../../../common/foundation/resources/client/ui/font-selector/font-selector.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-font-panel.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-radius-panel.tsx","../../../common/foundation/resources/client/admin/logging/logs-page.tsx","../../../common/foundation/resources/client/datatable/column-templates/boolean-indicator.tsx","../../../common/foundation/resources/client/admin/logging/schedule/use-rerurun-scheduled-command.tsx","../../../common/foundation/resources/client/ui/library/icons/material/EventRepeat.tsx","../../../common/foundation/resources/client/admin/logging/schedule/schedule-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/schedule/timeline.svg","../../../common/foundation/resources/client/ui/library/icons/material/Download.tsx","../../../common/foundation/resources/client/admin/logging/schedule/schedule-log-datatable.tsx","../../../common/foundation/resources/client/admin/logging/error/bug-fixing.svg","../../../common/foundation/resources/client/admin/logging/error/error-log-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/error/error-log-entry-dialog.tsx","../../../common/foundation/resources/client/admin/logging/error/use-delete-error-log.ts","../../../common/foundation/resources/client/admin/logging/error/error-log-datatable.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/opened.svg","../../../common/foundation/resources/client/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime.ts","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-entry-dialog.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-filters.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/user-role-section.tsx","../../../common/foundation/resources/client/admin/users/requests/user-update-user.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-form.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-details-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-permissions-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-datetime-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-api-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-security-tab.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-editor-form.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-editor-form.tsx","../../../resources/client/admin/settings/drive-settings.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-appearance-form.tsx","../../../common/foundation/resources/client/ui/library/forms/slider/base-slider.tsx","../../../common/foundation/resources/client/ui/library/forms/slider/use-slider.ts","../../../common/foundation/resources/client/ui/library/forms/slider/slider-thumb.tsx","../../../common/foundation/resources/client/ui/library/forms/slider/slider.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-general.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-action-buttons.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-primary-features.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-secondary-features.tsx"],"sourcesContent":["\"use client\";\n\n// src/useMutationState.ts\nimport * as React from \"react\";\nimport { notifyManager, replaceEqualDeep } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsMutating(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  return useMutationState(\n    { filters: { ...filters, status: \"pending\" } },\n    client\n  ).length;\n}\nfunction getResult(mutationCache, options) {\n  return mutationCache.findAll(options.filters).map(\n    (mutation) => options.select ? options.select(\n      mutation\n    ) : mutation.state\n  );\n}\nfunction useMutationState(options = {}, queryClient) {\n  const mutationCache = useQueryClient(queryClient).getMutationCache();\n  const optionsRef = React.useRef(options);\n  const result = React.useRef();\n  if (!result.current) {\n    result.current = getResult(mutationCache, options);\n  }\n  React.useEffect(() => {\n    optionsRef.current = options;\n  });\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => mutationCache.subscribe(() => {\n        const nextResult = replaceEqualDeep(\n          result.current,\n          getResult(mutationCache, optionsRef.current)\n        );\n        if (result.current !== nextResult) {\n          result.current = nextResult;\n          notifyManager.schedule(onStoreChange);\n        }\n      }),\n      [mutationCache]\n    ),\n    () => result.current,\n    () => result.current\n  );\n}\nexport {\n  useIsMutating,\n  useMutationState\n};\n//# sourceMappingURL=useMutationState.js.map","import clsx from 'clsx';\r\nimport React, {\r\n  cloneElement,\r\n  forwardRef,\r\n  Fragment,\r\n  JSXElementConstructor,\r\n  ReactElement,\r\n  ReactNode,\r\n  useContext,\r\n} from 'react';\r\nimport {CustomMenu, CustomMenuProps} from '@common/menus/custom-menu';\r\nimport {DashboardSidenavChildrenProps} from '@common/ui/dashboard-layout/dashboard-sidenav';\r\nimport {Logo} from '@common/ui/navigation/navbar/logo';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\r\nimport {useIsDarkMode} from '@ui/themes/use-is-dark-mode';\r\nimport {SvgIconProps} from '@ui/icons/svg-icon';\r\nimport type {To} from 'react-router';\r\nimport {setInLocalStorage} from '@ui/utils/hooks/local-storage';\r\n\r\ntype MatchDescendants = undefined | boolean | ((to: string) => boolean);\r\n\r\nexport type DashboardLeftSidebarVariant = 'withoutNavbar' | 'withNavbar';\r\n\r\nexport interface DashboardLeftSidebarProps\r\n  extends DashboardSidenavChildrenProps {\r\n  matchDescendants?: MatchDescendants;\r\n  menuName: string;\r\n  bottomContent?: ReactNode;\r\n  variant?: DashboardLeftSidebarVariant;\r\n  customMenuRender?: CustomMenuProps['children'];\r\n}\r\nexport function DashboardLeftSidebar({\r\n  className,\r\n  isCompactMode = false,\r\n  matchDescendants,\r\n  menuName,\r\n  bottomContent,\r\n  isOverlayMode,\r\n  variant = 'withNavbar',\r\n  customMenuRender,\r\n}: DashboardLeftSidebarProps) {\r\n  const isDarkMode = useIsDarkMode();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        isCompactMode ? 'px-6 pt-6' : 'px-12 pt-26',\r\n        'relative flex flex-col gap-20 overflow-y-auto overflow-x-hidden bg-alt pb-16 text-sm font-medium text-muted',\r\n        isOverlayMode && 'border-r',\r\n      )}\r\n    >\r\n      {variant === 'withoutNavbar' && (\r\n        <Fragment>\r\n          <Logo\r\n            color={isDarkMode ? 'light' : 'dark'}\r\n            logoType={isCompactMode ? 'compact' : 'wide'}\r\n            className={isCompactMode ? 'mx-auto mt-12' : 'mb-12'}\r\n            size={isCompactMode ? 'h-34 w-34' : 'h-36'}\r\n          />\r\n          <SidebarToggleButton />\r\n        </Fragment>\r\n      )}\r\n\r\n      <CustomMenu\r\n        matchDescendants={matchDescendants}\r\n        menu={menuName}\r\n        orientation=\"vertical\"\r\n        onlyShowIcons={isCompactMode}\r\n        iconSize={isCompactMode ? 'md' : 'sm'}\r\n        gap={isCompactMode ? 'gap-2' : 'gap-4'}\r\n        itemClassName={({isActive}) =>\r\n          dashboardLeftSidebarItemClassName({isActive, isCompactMode})\r\n        }\r\n      >\r\n        {customMenuRender}\r\n      </CustomMenu>\r\n      <div className={clsx('mt-auto space-y-2', isCompactMode && 'mx-auto')}>\r\n        {bottomContent}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SidebarToggleButton() {\r\n  const {leftSidenavStatus, setLeftSidenavStatus, name} = useContext(\r\n    DashboardLayoutContext,\r\n  );\r\n\r\n  const handleToggle = () => {\r\n    const newStatus = leftSidenavStatus === 'open' ? 'compact' : 'open';\r\n    setLeftSidenavStatus(newStatus);\r\n    setInLocalStorage(`${name}.sidenav.compact`, newStatus === 'compact');\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={clsx(\r\n        'fixed bottom-180 z-10 flex select-none appearance-none items-center justify-center rounded-full border bg align-middle outline-none transition-[left,color,shadow] duration-200 hover:text-primary focus-visible:ring',\r\n        leftSidenavStatus === 'open' ? 'left-[212px]' : 'left-48',\r\n      )}\r\n      onClick={() => handleToggle()}\r\n    >\r\n      {leftSidenavStatus === 'open' ? (\r\n        <KeyboardArrowLeftIcon size=\"sm\" />\r\n      ) : (\r\n        <KeyboardArrowRightIcon size=\"sm\" />\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n\r\ninterface DashboardLeftSidebarItemProps {\r\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\r\n  isCompact?: boolean;\r\n  children: [ReactElement<SvgIconProps>, ReactNode, ...ReactNode[]];\r\n  className?: string;\r\n  to?: To;\r\n  target?: '_blank';\r\n}\r\n\r\nexport const DashboardLeftSidebarItem = forwardRef<\r\n  unknown,\r\n  DashboardLeftSidebarItemProps\r\n>(\r\n  (\r\n    {\r\n      elementType = 'button',\r\n      isCompact = false,\r\n      children: [icon, label, ...otherChildren],\r\n      className,\r\n      target,\r\n      to,\r\n      ...otherProps\r\n    },\r\n    ref,\r\n  ) => {\r\n    const Element = elementType;\r\n    return (\r\n      <Element\r\n        ref={ref}\r\n        {...otherProps}\r\n        target={target}\r\n        to={to}\r\n        className={clsx(\r\n          className,\r\n          'flex',\r\n          isCompact ? 'gap-2' : 'gap-8',\r\n          dashboardLeftSidebarItemClassName({\r\n            isActive: false,\r\n            isCompactMode: isCompact,\r\n          }),\r\n        )}\r\n      >\r\n        {cloneElement(icon, {size: isCompact ? 'md' : 'sm'})}\r\n        {!isCompact && label}\r\n        {otherChildren}\r\n      </Element>\r\n    );\r\n  },\r\n);\r\n\r\nexport function dashboardLeftSidebarItemClassName({\r\n  isActive,\r\n  isCompactMode,\r\n}: {\r\n  isActive: boolean;\r\n  isCompactMode: boolean;\r\n}) {\r\n  return clsx(\r\n    'rounded-button',\r\n    isCompactMode\r\n      ? 'w-48 h-48 items-center justify-center'\r\n      : 'w-full py-12 px-16 block justify-start',\r\n    isActive ? 'bg-primary/6 text-primary font-semibold' : 'hover:bg-hover',\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const KeyboardArrowUpIcon = createSvgIcon(\r\n  <path d=\"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6 1.41 1.41z\" />\r\n, 'KeyboardArrowUpOutlined');\r\n","import React, {Fragment, JSXElementConstructor, useContext} from 'react';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {\r\n  DashboardLeftSidebar,\r\n  DashboardLeftSidebarItem,\r\n  DashboardLeftSidebarProps,\r\n} from '@common/ui/dashboard-layout/dashboard-left-sidebar';\r\nimport {DashboardSidenavChildrenProps} from '@common/ui/dashboard-layout/dashboard-sidenav';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {NotificationsIcon} from '@ui/icons/material/Notifications';\r\nimport {Badge} from '@ui/badge/badge';\r\nimport {NotificationsDialog} from '@common/notifications/dialog/notification-dialog-trigger';\r\nimport {NavbarAuthMenu} from '@common/ui/navigation/navbar/navbar-auth-menu';\r\nimport {UserAvatar, UserAvatarProps} from '@common/auth/user-avatar';\r\nimport {DashboardLayoutContext} from '@common/ui/dashboard-layout/dashboard-layout-context';\r\nimport {KeyboardArrowUpIcon} from '@ui/icons/material/KeyboardArrowUp';\r\n\r\ninterface Props extends DashboardSidenavChildrenProps {\r\n  variant?: DashboardLeftSidebarProps['variant'];\r\n}\r\nexport function AdminSidebar(props: Props) {\r\n  const {version} = useSettings();\r\n  const {isMobileMode, leftSidenavStatus} = useContext(DashboardLayoutContext);\r\n  const isCompactMode =\r\n    isMobileMode || leftSidenavStatus === 'compact' || false;\r\n\r\n  const bottomContent = (\r\n    <Fragment>\r\n      {props.variant === 'withoutNavbar' && (\r\n        <Fragment>\r\n          <AdminSidebarNotificationsItem isCompact={isCompactMode} />\r\n          <AdminSidebarAuthUserItem isCompact={isCompactMode} />\r\n        </Fragment>\r\n      )}\r\n      {!props.isCompactMode ? (\r\n        <span>\r\n          <div className=\"mt-16 overflow-hidden text-ellipsis whitespace-nowrap px-16 text-xs\">\r\n            <Trans message=\"Version: :number\" values={{number: version}} />\r\n          </div>\r\n        </span>\r\n      ) : undefined}\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <DashboardLeftSidebar\r\n      {...props}\r\n      matchDescendants={to => to === '/admin'}\r\n      menuName=\"admin-sidebar\"\r\n      bottomContent={bottomContent}\r\n    />\r\n  );\r\n}\r\n\r\ninterface AdminSidebarNotificationsItemProps {\r\n  isCompact: boolean;\r\n}\r\nexport function AdminSidebarNotificationsItem({\r\n  isCompact,\r\n}: AdminSidebarNotificationsItemProps) {\r\n  const {user} = useAuth();\r\n  const hasUnread = !!user?.unread_notifications_count;\r\n  return (\r\n    <DialogTrigger type=\"popover\" placement=\"top\">\r\n      <DashboardLeftSidebarItem isCompact={isCompact} className=\"relative\">\r\n        <NotificationsIcon />\r\n        <Trans message=\"Notifications\" />\r\n        {hasUnread ? (\r\n          <Badge>{user?.unread_notifications_count}</Badge>\r\n        ) : undefined}\r\n      </DashboardLeftSidebarItem>\r\n      <NotificationsDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface AuthUserItemProps {\r\n  isCompact: boolean;\r\n  avatar?: JSXElementConstructor<UserAvatarProps>;\r\n}\r\nexport function AdminSidebarAuthUserItem({\r\n  isCompact,\r\n  avatar: propsAvatar,\r\n}: AuthUserItemProps) {\r\n  const {user} = useAuth();\r\n  if (!user) return null;\r\n\r\n  const ItemAvatar = propsAvatar || UserAvatar;\r\n  const avatar = <ItemAvatar user={user} size=\"w-32 h-32\" />;\r\n\r\n  return (\r\n    <NavbarAuthMenu placement=\"top\">\r\n      {isCompact ? (\r\n        <button\r\n          aria-label=\"toggle authentication menu\"\r\n          className=\"flex h-48 w-48 items-center justify-center rounded-button hover:bg-hover\"\r\n        >\r\n          {avatar}\r\n        </button>\r\n      ) : (\r\n        <button className=\"flex w-full items-center rounded-button px-12 py-8 hover:bg-hover\">\r\n          {avatar}\r\n          <span className=\"ml-8 block min-w-0 overflow-x-hidden overflow-ellipsis whitespace-nowrap text-sm\">\r\n            {user.name}\r\n          </span>\r\n          <KeyboardArrowUpIcon size=\"xs\" className=\"ml-auto block\" />\r\n        </button>\r\n      )}\r\n    </NavbarAuthMenu>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\n\r\nexport interface AdminSetupAlert {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\ninterface Response extends BackendResponse {\r\n  alerts: AdminSetupAlert[];\r\n}\r\n\r\nexport function useAdminSetupAlerts() {\r\n  return useQuery({\r\n    queryKey: ['admin-setup-alerts'],\r\n    queryFn: () => fetchAlerts(),\r\n  });\r\n}\r\n\r\nfunction fetchAlerts() {\r\n  return apiClient\r\n    .get<Response>(`admin/setup-alerts`)\r\n    .then(response => response.data);\r\n}\r\n","import {Outlet} from 'react-router';\r\nimport {AdminSidebar} from './admin-sidebar';\r\nimport {DashboardLayout} from '@common/ui/dashboard-layout/dashboard-layout';\r\nimport {DashboardContent} from '@common/ui/dashboard-layout/dashboard-content';\r\nimport {DashboardSidenav} from '@common/ui/dashboard-layout/dashboard-sidenav';\r\nimport {DashboardNavbar} from '@common/ui/dashboard-layout/dashboard-navbar';\r\nimport {\r\n  AdminSetupAlert,\r\n  useAdminSetupAlerts,\r\n} from '@common/admin/use-admin-setup-alerts';\r\nimport {SectionHelper} from '@common/ui/other/section-helper';\r\nimport {ErrorIcon} from '@ui/icons/material/Error';\r\nimport {\r\n  setInLocalStorage,\r\n  useLocalStorage,\r\n} from '@ui/utils/hooks/local-storage';\r\nimport clsx from 'clsx';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {DashboardLeftSidebarVariant} from '@common/ui/dashboard-layout/dashboard-left-sidebar';\r\n\r\nexport function AdminLayout() {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const variant: DashboardLeftSidebarVariant = isMobile\r\n    ? 'withNavbar'\r\n    : 'withoutNavbar';\r\n  return (\r\n    <DashboardLayout name=\"admin\" leftSidenavCanBeCompact className=\"bg-alt\">\r\n      {variant === 'withNavbar' && (\r\n        <DashboardNavbar size=\"sm\" menuPosition=\"admin-navbar\" />\r\n      )}\r\n      <DashboardSidenav position=\"left\" size=\"sm\">\r\n        <AdminSidebar variant=\"withoutNavbar\" />\r\n      </DashboardSidenav>\r\n      <DashboardContent>\r\n        <div\r\n          className={clsx(\r\n            variant === 'withoutNavbar'\r\n              ? 'relative bg ring-divider dark:bg-alt md:mt-6 md:rounded-tl-md md:shadow-sm md:ring md:ring-1'\r\n              : 'border-l bg dark:bg-alt',\r\n          )}\r\n        >\r\n          <SetupAlertsList />\r\n          <Outlet />\r\n        </div>\r\n      </DashboardContent>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nfunction SetupAlertsList() {\r\n  const {data} = useAdminSetupAlerts();\r\n  const [dismissValue] = useLocalStorage<{\r\n    timestamp: number;\r\n  } | null>('admin-setup-alert-dismissed', null);\r\n\r\n  // show alert if 1 day passed since last dismiss\r\n  const shouldShowAlert =\r\n    !dismissValue || Date.now() - dismissValue.timestamp > 86400000;\r\n\r\n  if (!data?.alerts.length || !shouldShowAlert) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed left-24 right-24 top-24 z-10 mx-auto w-max max-w-[calc(100%-48px)] overflow-hidden rounded-panel bg shadow-md\">\r\n      <SetupAlert alert={data.alerts[0]} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SetupAlertProps {\r\n  alert: AdminSetupAlert;\r\n}\r\nfunction SetupAlert({alert}: SetupAlertProps) {\r\n  const description = (\r\n    <div dangerouslySetInnerHTML={{__html: alert.description}}></div>\r\n  );\r\n  return (\r\n    <SectionHelper\r\n      leadingIcon={<ErrorIcon size=\"xs\" className=\"text-danger\" />}\r\n      onClose={() => {\r\n        setInLocalStorage('admin-setup-alert-dismissed', {\r\n          timestamp: Date.now(),\r\n        });\r\n      }}\r\n      key={alert.title}\r\n      title={alert.title}\r\n      description={description}\r\n      color=\"neutral\"\r\n    />\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '../../datatable/filters/timestamp-filters';\r\nimport {message} from '@ui/i18n/message';\r\n\r\nexport const UserDatatableFilters: BackendFilter[] = [\r\n  {\r\n    key: 'email_verified_at',\r\n    label: message('Email'),\r\n    description: message('Email verification status'),\r\n    defaultOperator: FilterOperator.ne,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('is confirmed'),\r\n          value: {value: null, operator: FilterOperator.ne},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('is not confirmed'),\r\n          value: {value: null, operator: FilterOperator.eq},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date user registered or was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date user was last updated'),\r\n  }),\r\n  {\r\n    key: 'subscriptions',\r\n    label: message('Subscription'),\r\n    description: message('Whether user is subscribed or not'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('is subscribed'),\r\n          value: {value: '*', operator: FilterOperator.has},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('is not subscribed'),\r\n          value: {value: '*', operator: FilterOperator.doesntHave},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n];\r\n","import {\r\n  keepPreviousData,\r\n  useQuery,\r\n  UseQueryOptions,\r\n} from '@tanstack/react-query';\r\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\r\nimport {apiClient} from '../../http/query-client';\r\n\r\nexport interface GetDatatableDataParams {\r\n  orderBy?: string;\r\n  orderDir?: 'asc' | 'desc';\r\n  filters?: string | null;\r\n  query?: string;\r\n  with?: string;\r\n  perPage?: number | string | null;\r\n  page?: number | string;\r\n  paginate?: 'simple' | 'lengthAware' | 'preferLengthAware' | 'cursor';\r\n  [key: string]: string | number | boolean | undefined | null;\r\n}\r\n\r\nexport const DatatableDataQueryKey = (\r\n  endpoint: string,\r\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\r\n  baseQueryKey?: string[],\r\n) => {\r\n  // split endpoint by slash, so we can clear cache from the root later,\r\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\r\n  const key: (string | GetDatatableDataParams)[] = baseQueryKey\r\n    ? [...baseQueryKey]\r\n    : endpoint.split('/');\r\n  if (params) {\r\n    key.push(params);\r\n  }\r\n  return key;\r\n};\r\n\r\nexport function useDatatableData<T = object>(\r\n  endpoint: string,\r\n  params: GetDatatableDataParams,\r\n  options?: Omit<\r\n    UseQueryOptions<\r\n      PaginatedBackendResponse<T>,\r\n      unknown,\r\n      PaginatedBackendResponse<T>,\r\n      any[]\r\n    >,\r\n    'queryKey' | 'queryFn'\r\n  > & {baseQueryKey?: string[]},\r\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\r\n) {\r\n  if (!params.paginate) {\r\n    params.paginate = 'preferLengthAware';\r\n  }\r\n  // having queryKey in option will cause unnecessary re-fetching\r\n  const optionsQueryKey = options?.baseQueryKey;\r\n  delete options?.baseQueryKey;\r\n  return useQuery({\r\n    ...options,\r\n    queryKey: DatatableDataQueryKey(endpoint, params, optionsQueryKey),\r\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\r\n    placeholderData: keepPreviousData,\r\n  });\r\n}\r\n\r\nasync function paginate<T>(\r\n  endpoint: string,\r\n  params: GetDatatableDataParams,\r\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\r\n  signal?: AbortSignal,\r\n): Promise<PaginatedBackendResponse<T>> {\r\n  if (params.query) {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n  }\r\n  const response = await apiClient\r\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\r\n    .then(response => response.data);\r\n  onLoad?.(response);\r\n  return response;\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {GetDatatableDataParams} from '../requests/paginated-resources';\r\nimport {UseQueryResult} from '@tanstack/react-query';\r\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\r\n\r\nexport interface DataTableContextValue<T = unknown, A = unknown> {\r\n  selectedRows: (string | number)[];\r\n  setSelectedRows: (keys: (string | number)[]) => void;\r\n  endpoint: string;\r\n  params: GetDatatableDataParams;\r\n  setParams: (value: GetDatatableDataParams) => void;\r\n  query: UseQueryResult<PaginatedBackendResponse<T> & A, unknown>;\r\n  baseQueryKey?: string[];\r\n}\r\n\r\nexport const DataTableContext = React.createContext<DataTableContextValue>(\r\n  null!,\r\n);\r\n\r\nexport function useDataTable<T = unknown, A = unknown>() {\r\n  return useContext(DataTableContext) as DataTableContextValue<T, A>;\r\n}\r\n","import {UseQueryResult} from '@tanstack/react-query';\r\nimport {\r\n  hasNextPage,\r\n  LengthAwarePaginationResponse,\r\n  PaginatedBackendResponse,\r\n} from '../http/backend-response/pagination-response';\r\nimport {useNumberFormatter} from '@ui/i18n/use-number-formatter';\r\nimport {Select} from '@ui/forms/select/select';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\r\nimport React from 'react';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport clsx from 'clsx';\r\n\r\nconst defaultPerPage = 15;\r\nconst perPageOptions = [{key: 10}, {key: 15}, {key: 20}, {key: 50}, {key: 100}];\r\n\r\ntype DataTablePaginationFooterProps = {\r\n  query: UseQueryResult<PaginatedBackendResponse<unknown>, unknown>;\r\n  onPerPageChange?: (perPage: number) => void;\r\n  onPageChange?: (page: number) => void;\r\n  className?: string;\r\n};\r\nexport function DataTablePaginationFooter({\r\n  query,\r\n  onPerPageChange,\r\n  onPageChange,\r\n  className,\r\n}: DataTablePaginationFooterProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const numberFormatter = useNumberFormatter();\r\n  const pagination = query.data\r\n    ?.pagination as LengthAwarePaginationResponse<any>;\r\n\r\n  if (!pagination) return null;\r\n\r\n  const perPageSelect = onPerPageChange ? (\r\n    <Select\r\n      minWidth=\"min-w-auto\"\r\n      selectionMode=\"single\"\r\n      disabled={query.isLoading}\r\n      labelPosition=\"side\"\r\n      size=\"xs\"\r\n      label={<Trans message=\"Items per page\" />}\r\n      selectedValue={\r\n        pagination.per_page ? +pagination.per_page : defaultPerPage\r\n      }\r\n      onSelectionChange={value => onPerPageChange(value as number)}\r\n    >\r\n      {perPageOptions.map(option => (\r\n        <Item key={option.key} value={option.key}>\r\n          {option.key}\r\n        </Item>\r\n      ))}\r\n    </Select>\r\n  ) : null;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'flex h-54 select-none items-center justify-end gap-20 px-20',\r\n        className,\r\n      )}\r\n    >\r\n      {!isMobile && perPageSelect}\r\n      {pagination.from && pagination.to && 'total' in pagination ? (\r\n        <div className=\"text-sm\">\r\n          <Trans\r\n            message=\":from - :to of :total\"\r\n            values={{\r\n              from: pagination.from,\r\n              to: pagination.to,\r\n              total: numberFormatter.format(pagination.total),\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"text-muted\">\r\n        <IconButton\r\n          disabled={query.isFetching || pagination.current_page < 2}\r\n          onClick={() => {\r\n            onPageChange?.(pagination?.current_page - 1);\r\n          }}\r\n        >\r\n          <KeyboardArrowLeftIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={query.isFetching || !hasNextPage(pagination)}\r\n          onClick={() => {\r\n            onPageChange?.(pagination?.current_page + 1);\r\n          }}\r\n        >\r\n          <KeyboardArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FilterAltIcon = createSvgIcon(\r\n  <path d=\"M7 6h10l-5.01 6.3L7 6zm-2.75-.39C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\" />\r\n, 'FilterAltOutlined');\r\n","export const AccordionAnimation = {\r\n  variants: {\r\n    open: {\r\n      height: 'auto',\r\n      visibility: 'visible',\r\n      transitionEnd: {\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    closed: {\r\n      height: 0,\r\n      overflow: 'hidden',\r\n      transitionEnd: {\r\n        visibility: 'hidden',\r\n      },\r\n    },\r\n  },\r\n  transition: {type: 'tween', duration: 0.2},\r\n} as const;\r\n","import React, {\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useId,\r\n  useRef,\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {FocusScope, useFocusManager} from '@react-aria/focus';\r\nimport {AccordionAnimation} from '@ui/accordion/accordtion-animation';\r\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\r\n\r\ntype Props = {\r\n  variant?: 'outline' | 'default' | 'minimal';\r\n  children?: ReactNode;\r\n  mode?: 'single' | 'multiple';\r\n  expandedValues?: (string | number)[];\r\n  defaultExpandedValues?: (string | number)[];\r\n  onExpandedChange?: (key: (string | number)[]) => void;\r\n  className?: string;\r\n  isLazy?: boolean;\r\n};\r\nexport const Accordion = React.forwardRef<HTMLDivElement, Props>(\r\n  (\r\n    {\r\n      variant = 'default',\r\n      mode = 'single',\r\n      children,\r\n      className,\r\n      isLazy,\r\n      ...other\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [expandedValues, setExpandedValues] = useControlledState(\r\n      other.expandedValues,\r\n      other.defaultExpandedValues || [],\r\n      other.onExpandedChange,\r\n    );\r\n\r\n    const itemsCount = React.Children.count(children);\r\n\r\n    return (\r\n      <div\r\n        className={clsx(variant === 'outline' && 'space-y-10', className)}\r\n        ref={ref}\r\n        role=\"presentation\"\r\n      >\r\n        <AnimatePresence>\r\n          <FocusScope>\r\n            {React.Children.map(children, (child, index) => {\r\n              if (!isValidElement<AccordionItemProps>(child)) return null;\r\n              return cloneElement<AccordionItemProps>(child, {\r\n                key: child.key || index,\r\n                value: child.props.value || index,\r\n                isFirst: index === 0,\r\n                isLast: index === itemsCount - 1,\r\n                mode,\r\n                variant,\r\n                expandedValues,\r\n                setExpandedValues,\r\n                isLazy,\r\n              });\r\n            })}\r\n          </FocusScope>\r\n        </AnimatePresence>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport interface AccordionItemProps {\r\n  children: ReactNode;\r\n  disabled?: boolean;\r\n  label: ReactNode;\r\n  description?: ReactNode;\r\n  value?: string | number;\r\n  isFirst?: boolean;\r\n  isLast?: boolean;\r\n  bodyClassName?: string;\r\n  bodyPadding?: string;\r\n  labelClassName?: string;\r\n  buttonPadding?: string;\r\n  chevronPosition?: 'left' | 'right';\r\n  startIcon?: ReactElement;\r\n  endAppend?: ReactElement;\r\n  variant?: 'outline' | 'default' | 'minimal';\r\n  expandedValues?: (string | number)[];\r\n  setExpandedValues?: (keys: (string | number)[]) => void;\r\n  mode?: 'single' | 'multiple';\r\n  footerContent?: ReactNode;\r\n  isLazy?: boolean;\r\n  onHeaderMouseEnter?: () => void;\r\n  onHeaderMouseLeave?: () => void;\r\n}\r\nexport function AccordionItem(props: AccordionItemProps) {\r\n  const {\r\n    children,\r\n    label,\r\n    disabled,\r\n    bodyClassName,\r\n    bodyPadding = 'p-16',\r\n    labelClassName,\r\n    buttonPadding = 'py-10 pl-14 pr-10',\r\n    startIcon,\r\n    description,\r\n    endAppend,\r\n    chevronPosition = 'right',\r\n    isFirst,\r\n    mode,\r\n    isLazy,\r\n    variant,\r\n    footerContent,\r\n    onHeaderMouseEnter,\r\n    onHeaderMouseLeave,\r\n  } = props;\r\n  const expandedValues = props.expandedValues || [];\r\n  const value = props.value || 0;\r\n  const setExpandedValues = props.setExpandedValues || (() => {});\r\n  const ref = useRef<HTMLButtonElement>(null);\r\n  const isExpanded = !disabled && expandedValues!.includes(value!);\r\n  const wasExpandedOnce = useRef(false);\r\n  if (isExpanded) {\r\n    wasExpandedOnce.current = true;\r\n  }\r\n  const focusManager = useFocusManager();\r\n  const id = useId();\r\n  const buttonId = `${id}-button`;\r\n  const panelId = `${id}-panel`;\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\r\n    switch (e.key) {\r\n      case 'ArrowDown':\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'ArrowUp':\r\n        focusManager?.focusPrevious();\r\n        break;\r\n      case 'Home':\r\n        focusManager?.focusFirst();\r\n        break;\r\n      case 'End':\r\n        focusManager?.focusLast();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const toggle = () => {\r\n    const i = expandedValues.indexOf(value);\r\n    if (i > -1) {\r\n      const newKeys = [...expandedValues];\r\n      newKeys.splice(i, 1);\r\n      setExpandedValues(newKeys);\r\n    } else if (mode === 'single') {\r\n      setExpandedValues([value]);\r\n    } else {\r\n      setExpandedValues([...expandedValues, value]);\r\n    }\r\n  };\r\n\r\n  const chevron = (\r\n    <div className={clsx(variant === 'minimal' && '')}>\r\n      <ArrowDropDownIcon\r\n        aria-hidden=\"true\"\r\n        size=\"md\"\r\n        className={clsx(\r\n          disabled ? 'text-disabled' : 'text-muted',\r\n          isExpanded && 'rotate-180 transition-transform',\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        variant === 'default' && 'border-b',\r\n        variant === 'outline' && 'rounded-panel border',\r\n        disabled && 'text-disabled',\r\n      )}\r\n    >\r\n      <h3\r\n        className={clsx(\r\n          'flex w-full items-center justify-between text-sm',\r\n          disabled && 'pointer-events-none',\r\n          isFirst && variant === 'default' && 'border-t',\r\n          isExpanded && variant !== 'minimal'\r\n            ? 'border-b'\r\n            : 'border-b border-b-transparent',\r\n          variant === 'outline'\r\n            ? isExpanded\r\n              ? 'rounded-panel-t'\r\n              : 'rounded-panel'\r\n            : undefined,\r\n        )}\r\n        onMouseEnter={onHeaderMouseEnter}\r\n        onMouseLeave={onHeaderMouseLeave}\r\n      >\r\n        <button\r\n          disabled={disabled}\r\n          aria-expanded={isExpanded}\r\n          id={buttonId}\r\n          aria-controls={panelId}\r\n          type=\"button\"\r\n          ref={ref}\r\n          onKeyDown={onKeyDown}\r\n          onClick={() => {\r\n            if (!disabled) {\r\n              toggle();\r\n            }\r\n          }}\r\n          className={clsx(\r\n            'flex flex-auto items-center gap-10 text-left outline-none hover:bg-hover focus-visible:bg-primary/focus',\r\n            buttonPadding,\r\n          )}\r\n        >\r\n          {chevronPosition === 'left' && chevron}\r\n          {startIcon &&\r\n            cloneElement(startIcon, {\r\n              size: 'md',\r\n              className: clsx(\r\n                startIcon.props.className,\r\n                disabled ? 'text-disabled' : 'text-muted',\r\n              ),\r\n            })}\r\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis\">\r\n            <div className={labelClassName} data-testid=\"accordion-label\">\r\n              {label}\r\n            </div>\r\n            {description && (\r\n              <div className=\"text-xs text-muted\">{description}</div>\r\n            )}\r\n          </div>\r\n          {chevronPosition === 'right' && chevron}\r\n        </button>\r\n        {endAppend && (\r\n          <div className=\"flex-shrink-0 px-4 text-sm text-muted\">\r\n            {endAppend}\r\n          </div>\r\n        )}\r\n      </h3>\r\n      <m.div\r\n        aria-labelledby={id}\r\n        role=\"region\"\r\n        variants={AccordionAnimation.variants}\r\n        transition={AccordionAnimation.transition}\r\n        initial={false}\r\n        animate={isExpanded ? 'open' : 'closed'}\r\n      >\r\n        <div className={clsx(bodyPadding, bodyClassName)}>\r\n          {!isLazy || wasExpandedOnce ? children : null}\r\n        </div>\r\n        {footerContent}\r\n      </m.div>\r\n    </div>\r\n  );\r\n}\r\n","import {FilterPanelProps} from './filter-panel-props';\r\nimport {FilterBooleanToggleControl} from '@common/datatable/filters/backend-filter';\r\n\r\nexport function BooleanFilterPanel({\r\n  filter,\r\n}: FilterPanelProps<FilterBooleanToggleControl>) {\r\n  // Toggling accordion in the dialog will already apply boolean filter, no need for any extra fields here\r\n  return null;\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {\r\n  BackendFilter,\r\n  CustomFilterControl,\r\n  DatePickerFilterControl,\r\n  FilterBooleanToggleControl,\r\n  FilterChipFieldControl,\r\n  FilterControlType,\r\n  FilterOperator,\r\n  FilterSelectControl,\r\n  FilterSelectModelControl,\r\n  FilterTextInputControl,\r\n} from './backend-filter';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useState} from 'react';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {useBackendFilterUrlParams} from './backend-filter-url-params';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Form} from '@ui/forms/form';\r\nimport {Checkbox} from '@ui/forms/toggle/checkbox';\r\nimport {SelectFilterPanel} from './panels/select-filter-panel';\r\nimport {DateRangeFilterPanel} from './panels/date-range-filter-panel';\r\nimport {NormalizedModelFilterPanel} from './panels/normalized-model-filter-panel';\r\nimport {InputFilterPanel} from './panels/input-filter-panel';\r\nimport {BooleanFilterPanel} from './panels/boolean-filter-panel';\r\nimport clsx from 'clsx';\r\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\r\n\r\nexport interface FilterItemFormValue<T = any> {\r\n  value: T;\r\n  operator?: FilterOperator;\r\n}\r\n\r\ninterface AddFilterDialogProps {\r\n  filters: BackendFilter[];\r\n}\r\nexport function AddFilterDialog({filters}: AddFilterDialogProps) {\r\n  const {decodedFilters} = useBackendFilterUrlParams(filters);\r\n  const {formId} = useDialogContext();\r\n\r\n  // expand currently active filters\r\n  const [expandedFilters, setExpandedFilters] = useState<(string | number)[]>(\r\n    () => {\r\n      return decodedFilters.map(f => f.key);\r\n    },\r\n  );\r\n\r\n  const clearButton = (\r\n    <Button\r\n      size=\"xs\"\r\n      variant=\"outline\"\r\n      className=\"mr-auto\"\r\n      onClick={() => {\r\n        setExpandedFilters([]);\r\n      }}\r\n    >\r\n      <Trans message=\"Clear\" />\r\n    </Button>\r\n  );\r\n\r\n  const applyButton = (\r\n    <Button\r\n      size=\"xs\"\r\n      variant=\"flat\"\r\n      color=\"primary\"\r\n      className=\"ml-auto\"\r\n      type=\"submit\"\r\n      form={formId}\r\n    >\r\n      <Trans message=\"Apply\" />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Dialog className=\"min-w-[300px]\" maxWidth=\"max-w-400\" size=\"auto\">\r\n      <DialogHeader\r\n        padding=\"px-14 py-10\"\r\n        leftAdornment={clearButton}\r\n        rightAdornment={applyButton}\r\n      >\r\n        <Trans message=\"Filter\" />\r\n      </DialogHeader>\r\n      <DialogBody padding=\"p-0\">\r\n        <FilterList\r\n          filters={filters}\r\n          expandedFilters={expandedFilters}\r\n          setExpandedFilters={setExpandedFilters}\r\n        />\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface FilterListProps {\r\n  filters: BackendFilter[];\r\n  expandedFilters: (string | number)[];\r\n  setExpandedFilters: (value: (string | number)[]) => void;\r\n}\r\nfunction FilterList({\r\n  filters,\r\n  expandedFilters,\r\n  setExpandedFilters,\r\n}: FilterListProps) {\r\n  const {decodedFilters, replaceAll} = useBackendFilterUrlParams(filters);\r\n\r\n  // either get value and operator from url params if filter is active, or get defaults from filter config\r\n  const defaultValues: Record<string, FilterItemFormValue> = {};\r\n  filters.forEach(filter => {\r\n    const appliedFilter = decodedFilters.find(f => f.key === filter.key);\r\n    defaultValues[filter.key] =\r\n      appliedFilter?.value !== undefined\r\n        ? // there might be some extra keys set on filter besides\r\n          // \"value\" and \"operator\", so add the whole object to form\r\n          appliedFilter\r\n        : {\r\n            value: filter.control.defaultValue,\r\n            operator: filter.defaultOperator,\r\n          };\r\n  });\r\n  const form = useForm<Record<string, FilterItemFormValue>>({defaultValues});\r\n  const {formId, close} = useDialogContext();\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      id={formId}\r\n      onSubmit={formValue => {\r\n        const filterValue = Object.entries(formValue)\r\n          // remove undefined and non-expanded filters, so \"clear\" button will correctly remove active filters\r\n          .filter(\r\n            ([key, fieldValue]) =>\r\n              expandedFilters.includes(key) && fieldValue !== undefined,\r\n          )\r\n          .map(([key, fieldValue]) => ({\r\n            key,\r\n            ...fieldValue, // value and operator from form\r\n          }));\r\n\r\n        replaceAll(filterValue);\r\n        close();\r\n      }}\r\n    >\r\n      <Accordion\r\n        mode=\"multiple\"\r\n        expandedValues={expandedFilters}\r\n        onExpandedChange={setExpandedFilters}\r\n      >\r\n        {filters.map(filter => (\r\n          <AccordionItem\r\n            startIcon={\r\n              <Checkbox checked={expandedFilters.includes(filter.key)} />\r\n            }\r\n            key={filter.key}\r\n            value={filter.key}\r\n            label={<Trans {...filter.label} />}\r\n            bodyClassName=\"max-h-288 overflow-y-auto compact-scrollbar\"\r\n          >\r\n            {filter.description && (\r\n              <div\r\n                className={clsx(\r\n                  'text-xs text-muted',\r\n                  // boolean filter will have nothing in the panel, no need to add margin\r\n                  filter.control.type !== FilterControlType.BooleanToggle &&\r\n                    'mb-14',\r\n                )}\r\n              >\r\n                <Trans {...filter.description} />\r\n              </div>\r\n            )}\r\n            <AddFilterDialogPanel filter={filter} />\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface ActiveFilterPanelProps {\r\n  filter: BackendFilter;\r\n}\r\nexport function AddFilterDialogPanel({filter}: ActiveFilterPanelProps) {\r\n  switch (filter.control.type) {\r\n    case FilterControlType.Select:\r\n      return (\r\n        <SelectFilterPanel\r\n          filter={filter as BackendFilter<FilterSelectControl>}\r\n        />\r\n      );\r\n    case FilterControlType.ChipField:\r\n      return (\r\n        <ChipFieldFilterPanel\r\n          filter={filter as BackendFilter<FilterChipFieldControl>}\r\n        />\r\n      );\r\n    case FilterControlType.DateRangePicker:\r\n      return (\r\n        <DateRangeFilterPanel\r\n          filter={filter as BackendFilter<DatePickerFilterControl>}\r\n        />\r\n      );\r\n    case FilterControlType.SelectModel:\r\n      return (\r\n        <NormalizedModelFilterPanel\r\n          filter={filter as BackendFilter<FilterSelectModelControl>}\r\n        />\r\n      );\r\n    case FilterControlType.Input:\r\n      return (\r\n        <InputFilterPanel\r\n          filter={filter as BackendFilter<FilterTextInputControl>}\r\n        />\r\n      );\r\n    case FilterControlType.BooleanToggle:\r\n      return (\r\n        <BooleanFilterPanel\r\n          filter={filter as BackendFilter<FilterBooleanToggleControl>}\r\n        />\r\n      );\r\n    case 'custom':\r\n      const CustomComponent = filter.control.panel;\r\n      return (\r\n        <CustomComponent\r\n          filter={filter as BackendFilter<CustomFilterControl>}\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import {Button, ButtonProps} from '@ui/buttons/button';\r\nimport {BackendFilter} from './backend-filter';\r\nimport {FilterAltIcon} from '@ui/icons/material/FilterAlt';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {AddFilterDialog} from './add-filter-dialog';\r\nimport {ReactElement} from 'react';\r\n\r\ninterface AddFilterButtonProps {\r\n  filters: BackendFilter[];\r\n  icon?: ReactElement;\r\n  color?: ButtonProps['color'];\r\n  variant?: ButtonProps['variant'];\r\n  disabled?: boolean;\r\n  size?: ButtonProps['size'];\r\n  className?: string;\r\n}\r\nexport function AddFilterButton({\r\n  filters,\r\n  icon = <FilterAltIcon />,\r\n  color = 'primary',\r\n  variant = 'outline',\r\n  size = 'sm',\r\n  disabled,\r\n  className,\r\n}: AddFilterButtonProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  const desktopButton = (\r\n    <Button\r\n      variant={variant}\r\n      color={color}\r\n      startIcon={icon}\r\n      disabled={disabled}\r\n      size={size}\r\n      className={className}\r\n    >\r\n      <Trans message=\"Filter\" />\r\n    </Button>\r\n  );\r\n\r\n  const mobileButton = (\r\n    <IconButton\r\n      color={color}\r\n      size=\"sm\"\r\n      variant={variant}\r\n      disabled={disabled}\r\n      className={className}\r\n    >\r\n      {icon}\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <DialogTrigger type=\"popover\">\r\n      {isMobile ? mobileButton : desktopButton}\r\n      <AddFilterDialog filters={filters} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\r\nimport {BackendFilter} from './filters/backend-filter';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {AddFilterButton} from './filters/add-filter-button';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {message} from '@ui/i18n/message';\r\n\r\ninterface Props {\r\n  actions?: ReactNode;\r\n  filters?: BackendFilter[];\r\n  filtersLoading?: boolean;\r\n  searchPlaceholder?: MessageDescriptor;\r\n  searchValue?: string;\r\n  onSearchChange: (value: string) => void;\r\n}\r\nexport function DataTableHeader({\r\n  actions,\r\n  filters,\r\n  filtersLoading,\r\n  searchPlaceholder = message('Type to search...'),\r\n  searchValue = '',\r\n  onSearchChange,\r\n}: Props) {\r\n  const {trans} = useTrans();\r\n  return (\r\n    <HeaderLayout>\r\n      <TextField\r\n        size=\"sm\"\r\n        className=\"mr-auto min-w-180 max-w-440 flex-auto\"\r\n        inputWrapperClassName=\"mr-24 md:mr-0\"\r\n        placeholder={trans(searchPlaceholder)}\r\n        startAdornment={<SearchIcon size=\"sm\" />}\r\n        value={searchValue}\r\n        onChange={e => {\r\n          onSearchChange(e.target.value);\r\n        }}\r\n      />\r\n      {filters && (\r\n        <AddFilterButton filters={filters} disabled={filtersLoading} />\r\n      )}\r\n      {actions}\r\n    </HeaderLayout>\r\n  );\r\n}\r\n\r\ninterface AnimatedHeaderProps extends ComponentPropsWithoutRef<'div'> {\r\n  children: ReactNode;\r\n}\r\nexport function HeaderLayout({children, ...domProps}: AnimatedHeaderProps) {\r\n  return (\r\n    <div\r\n      className=\"hidden-scrollbar relative mb-24 flex h-42 items-center gap-8 overflow-x-auto text-muted md:gap-12\"\r\n      {...domProps}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport React, {ReactNode} from 'react';\r\nimport {HeaderLayout} from '@common/datatable/data-table-header';\r\n\r\ninterface Props {\r\n  actions?: ReactNode;\r\n  selectedItemsCount: number;\r\n}\r\nexport function SelectedStateDatatableHeader({\r\n  actions,\r\n  selectedItemsCount,\r\n}: Props) {\r\n  return (\r\n    <HeaderLayout data-testid=\"datatable-selected-header\">\r\n      <div className=\"mr-auto\">\r\n        <Trans\r\n          message=\"[one 1 item|other :count items] selected\"\r\n          values={{count: selectedItemsCount}}\r\n        />\r\n      </div>\r\n      {actions}\r\n    </HeaderLayout>\r\n  );\r\n}\r\n","import {m} from 'framer-motion';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\nimport {Skeleton} from '@ui/skeleton/skeleton';\r\nimport React from 'react';\r\n\r\nexport function FilterListSkeleton() {\r\n  return (\r\n    <m.div\r\n      className=\"flex h-30 items-center gap-6\"\r\n      key=\"filter-list-skeleton\"\r\n      {...opacityAnimation}\r\n    >\r\n      <Skeleton variant=\"rect\" size=\"h-full w-144\" radius=\"rounded-md\" />\r\n      <Skeleton variant=\"rect\" size=\"h-full w-112\" radius=\"rounded-md\" />\r\n      <Skeleton variant=\"rect\" size=\"h-full w-172\" radius=\"rounded-md\" />\r\n    </m.div>\r\n  );\r\n}\r\n","import React, {\r\n  cloneElement,\r\n  ComponentProps,\r\n  ReactElement,\r\n  ReactNode,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {TableDataItem} from '../ui/tables/types/table-data-item';\r\nimport {BackendFilter} from './filters/backend-filter';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {ColumnConfig} from './column-config';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useBackendFilterUrlParams} from './filters/backend-filter-url-params';\r\nimport {\r\n  GetDatatableDataParams,\r\n  useDatatableData,\r\n} from './requests/paginated-resources';\r\nimport {DataTableContext} from './page/data-table-context';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {ProgressBar} from '@ui/progress/progress-bar';\r\nimport {Table, TableProps} from '../ui/tables/table';\r\nimport {DataTablePaginationFooter} from './data-table-pagination-footer';\r\nimport {DataTableHeader} from './data-table-header';\r\nimport {FilterList} from './filters/filter-list/filter-list';\r\nimport {SelectedStateDatatableHeader} from '@common/datatable/selected-state-datatable-header';\r\nimport clsx from 'clsx';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\nimport {FilterListSkeleton} from '@common/datatable/filters/filter-list/filter-list-skeleton';\r\nimport {nanoid} from 'nanoid';\r\n\r\nexport interface DataTableProps<T extends TableDataItem> {\r\n  filters?: BackendFilter[];\r\n  pinnedFilters?: string[];\r\n  filtersLoading?: boolean;\r\n  columns: ColumnConfig<T>[];\r\n  searchPlaceholder?: MessageDescriptor;\r\n  queryParams?: Record<string, string | number | undefined | null>;\r\n  endpoint: string;\r\n  baseQueryKey?: string[];\r\n  skeletonsWhileLoading?: number;\r\n  resourceName?: ReactNode;\r\n  emptyStateMessage: ReactElement<{isFiltering: boolean}>;\r\n  actions?: ReactNode;\r\n  enableSelection?: boolean;\r\n  selectionStyle?: TableProps<T>['selectionStyle'];\r\n  selectedActions?: ReactNode;\r\n  onRowAction?: TableProps<T>['onAction'];\r\n  tableDomProps?: ComponentProps<'table'>;\r\n  children?: ReactNode;\r\n  collapseTableOnMobile?: boolean;\r\n  cellHeight?: string;\r\n  border?: string;\r\n}\r\nexport function DataTable<T extends TableDataItem>({\r\n  filters,\r\n  pinnedFilters,\r\n  filtersLoading,\r\n  columns,\r\n  searchPlaceholder,\r\n  queryParams,\r\n  endpoint,\r\n  baseQueryKey: baseQueryKeyProp,\r\n  actions,\r\n  selectedActions,\r\n  emptyStateMessage,\r\n  tableDomProps,\r\n  onRowAction,\r\n  enableSelection = true,\r\n  selectionStyle = 'checkbox',\r\n  children,\r\n  cellHeight,\r\n  collapseTableOnMobile = true,\r\n  skeletonsWhileLoading,\r\n  border,\r\n}: DataTableProps<T>) {\r\n  const baseQueryKey = useRef(baseQueryKeyProp);\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const {trans} = useTrans();\r\n  const {encodedFilters} = useBackendFilterUrlParams(filters);\r\n  const [params, setParams] = useState<GetDatatableDataParams>({perPage: 15});\r\n  const [selectedRows, setSelectedRows] = useState<(string | number)[]>([]);\r\n  const query = useDatatableData<T>(\r\n    endpoint,\r\n    {\r\n      ...params,\r\n      ...queryParams,\r\n      [BackendFiltersUrlKey]: encodedFilters,\r\n    },\r\n    {baseQueryKey: baseQueryKey.current},\r\n    () => setSelectedRows([]),\r\n  );\r\n\r\n  const isFiltering = !!(params.query || params.filters || encodedFilters);\r\n  const pagination = query.data?.pagination;\r\n\r\n  const data =\r\n    pagination?.data ||\r\n    (query.isLoading && skeletonsWhileLoading\r\n      ? Array.from({length: skeletonsWhileLoading}).map(() => {\r\n          return {\r\n            id: nanoid(),\r\n            isPlaceholder: true,\r\n          };\r\n        })\r\n      : []);\r\n\r\n  return (\r\n    <DataTableContext.Provider\r\n      value={{\r\n        selectedRows,\r\n        setSelectedRows,\r\n        endpoint,\r\n        params,\r\n        setParams,\r\n        query,\r\n        baseQueryKey: baseQueryKey.current,\r\n      }}\r\n    >\r\n      {children}\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        {selectedRows.length ? (\r\n          <SelectedStateDatatableHeader\r\n            selectedItemsCount={selectedRows.length}\r\n            actions={selectedActions}\r\n            key=\"selected\"\r\n          />\r\n        ) : (\r\n          <DataTableHeader\r\n            searchPlaceholder={searchPlaceholder}\r\n            searchValue={params.query}\r\n            onSearchChange={query => setParams({...params, query})}\r\n            actions={actions}\r\n            filters={filters}\r\n            filtersLoading={filtersLoading}\r\n            key=\"default\"\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {filters && (\r\n        <div className=\"mb-14\">\r\n          <AnimatePresence initial={false} mode=\"wait\">\r\n            {filtersLoading && (encodedFilters || pinnedFilters?.length) ? (\r\n              <FilterListSkeleton />\r\n            ) : (\r\n              <m.div key=\"filter-list\" {...opacityAnimation}>\r\n                <FilterList filters={filters} pinnedFilters={pinnedFilters} />\r\n              </m.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className={clsx(\r\n          'relative rounded-panel',\r\n          border ? border : (!isMobile || !collapseTableOnMobile) && 'border',\r\n        )}\r\n      >\r\n        {query.isFetching && !skeletonsWhileLoading && (\r\n          <ProgressBar\r\n            isIndeterminate\r\n            className=\"absolute left-0 top-0 z-10 w-full\"\r\n            aria-label={trans({message: 'Loading'})}\r\n            size=\"xs\"\r\n          />\r\n        )}\r\n\r\n        <div className=\"relative overflow-x-auto md:overflow-hidden\">\r\n          <Table\r\n            {...tableDomProps}\r\n            columns={columns}\r\n            data={data as T[]}\r\n            sortDescriptor={params}\r\n            onSortChange={descriptor => {\r\n              setParams({...params, ...descriptor});\r\n            }}\r\n            selectedRows={selectedRows}\r\n            enableSelection={enableSelection}\r\n            selectionStyle={selectionStyle}\r\n            onSelectionChange={setSelectedRows}\r\n            onAction={onRowAction}\r\n            collapseOnMobile={collapseTableOnMobile}\r\n            cellHeight={cellHeight}\r\n          />\r\n        </div>\r\n\r\n        {(query.isFetched || query.isPlaceholderData) &&\r\n        !pagination?.data.length ? (\r\n          <div className=\"pt-50\">\r\n            {cloneElement(emptyStateMessage, {\r\n              isFiltering,\r\n            })}\r\n          </div>\r\n        ) : undefined}\r\n\r\n        <DataTablePaginationFooter\r\n          query={query}\r\n          onPageChange={page => setParams({...params, page})}\r\n          onPerPageChange={perPage => setParams({...params, perPage})}\r\n        />\r\n      </div>\r\n    </DataTableContext.Provider>\r\n  );\r\n}\r\n","import React, {ReactElement, ReactNode, useId} from 'react';\r\nimport {TableDataItem} from '../../ui/tables/types/table-data-item';\r\nimport {DataTable, DataTableProps} from '../data-table';\r\nimport {TableProps} from '../../ui/tables/table';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props<T extends TableDataItem> extends DataTableProps<T> {\r\n  title?: ReactElement<MessageDescriptor>;\r\n  headerContent?: ReactNode;\r\n  headerItemsAlign?: string;\r\n  enableSelection?: boolean;\r\n  onRowAction?: TableProps<T>['onAction'];\r\n  padding?: string;\r\n  className?: string;\r\n  variant?: 'default' | 'fullPage';\r\n}\r\nexport function DataTablePage<T extends TableDataItem>({\r\n  title,\r\n  headerContent,\r\n  headerItemsAlign = 'items-end',\r\n  className,\r\n  padding,\r\n  variant,\r\n  ...dataTableProps\r\n}: Props<T>) {\r\n  const titleId = useId();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        padding ?? variant === 'fullPage' ? 'p-0' : 'p-12 md:p-24',\r\n        className,\r\n      )}\r\n    >\r\n      {title && (\r\n        <div\r\n          className={clsx(\r\n            variant === 'fullPage' ? 'mb-6 border-b px-24 py-12' : 'mb-16',\r\n            headerContent && `flex ${headerItemsAlign} gap-4`,\r\n          )}\r\n        >\r\n          <StaticPageTitle>{title}</StaticPageTitle>\r\n          <h1 className=\"text-3xl font-light first:capitalize\" id={titleId}>\r\n            {title}\r\n          </h1>\r\n          {headerContent}\r\n        </div>\r\n      )}\r\n      <div className={clsx(variant === 'fullPage' ? 'p-12 md:p-24' : 'p-0')}>\r\n        <DataTable\r\n          {...dataTableProps}\r\n          tableDomProps={{\r\n            'aria-labelledby': title ? titleId : undefined,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {DatatableDataQueryKey} from './paginated-resources';\r\nimport {useDataTable} from '../page/data-table-context';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\nimport {Key} from 'react';\r\n\r\ninterface Response extends BackendResponse {\r\n  //\r\n}\r\n\r\nexport function useDeleteSelectedRows() {\r\n  const {endpoint, selectedRows, setSelectedRows, baseQueryKey} =\r\n    useDataTable();\r\n  return useMutation({\r\n    mutationFn: () => deleteSelectedRows(endpoint, selectedRows),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint, undefined, baseQueryKey),\r\n      });\r\n      toast(\r\n        message('Deleted [one 1 record|other :count records]', {\r\n          values: {count: selectedRows.length},\r\n        }),\r\n      );\r\n      setSelectedRows([]);\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not delete records')),\r\n  });\r\n}\r\n\r\nfunction deleteSelectedRows(endpoint: string, ids: Key[]): Promise<Response> {\r\n  return apiClient.delete(`${endpoint}/${ids.join(',')}`).then(r => r.data);\r\n}\r\n","import {Button} from '@ui/buttons/button';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport React from 'react';\r\nimport {useDeleteSelectedRows} from '../requests/delete-selected-rows';\r\nimport {useDataTable} from './data-table-context';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {errorStatusIs} from '@common/http/error-status-is';\r\n\r\nexport function DeleteSelectedItemsAction() {\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Button variant=\"flat\" color=\"danger\" className=\"ml-auto\">\r\n        <Trans message=\"Delete\" />\r\n      </Button>\r\n      <DeleteItemsDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction DeleteItemsDialog() {\r\n  const deleteSelectedRows = useDeleteSelectedRows();\r\n  const {selectedRows, setSelectedRows} = useDataTable();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <ConfirmationDialog\r\n      isLoading={deleteSelectedRows.isPending}\r\n      title={\r\n        <Trans\r\n          message=\"Delete [one 1 item|other :count items]?\"\r\n          values={{count: selectedRows.length}}\r\n        />\r\n      }\r\n      body={\r\n        <Trans message=\"This will permanently remove the items and cannot be undone.\" />\r\n      }\r\n      confirm={<Trans message=\"Delete\" />}\r\n      isDanger\r\n      onConfirm={() => {\r\n        deleteSelectedRows.mutate(undefined, {\r\n          onSuccess: () => close(),\r\n          onError: err => {\r\n            if (errorStatusIs(err, 422)) {\r\n              setSelectedRows([]);\r\n              close();\r\n            }\r\n          },\r\n        });\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\n\r\nexport interface DataTableEmptyStateMessageProps {\r\n  isFiltering?: boolean;\r\n  title: ReactNode;\r\n  filteringTitle?: ReactNode;\r\n  image: string;\r\n  size?: 'sm' | 'md';\r\n  className?: string;\r\n}\r\nexport function DataTableEmptyStateMessage({\r\n  isFiltering,\r\n  title,\r\n  filteringTitle,\r\n  image,\r\n  size,\r\n  className,\r\n}: DataTableEmptyStateMessageProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  if (!size) {\r\n    size = isMobile ? 'sm' : 'md';\r\n  }\r\n\r\n  // allow user to disable filtering message variation by not passing in \"filteringTitle\"\r\n  return (\r\n    <IllustratedMessage\r\n      className={className}\r\n      size={size}\r\n      image={<SvgImage src={image} />}\r\n      title={isFiltering && filteringTitle ? filteringTitle : title}\r\n      description={\r\n        isFiltering && filteringTitle ? (\r\n          <Trans message=\"Try another search query or different filters\" />\r\n        ) : undefined\r\n      }\r\n    />\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__d109d853__\"","import {AddIcon} from '@ui/icons/material/Add';\r\nimport {Button} from '@ui/buttons/button';\r\nimport React, {ReactElement, ReactNode} from 'react';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {To} from 'react-router';\r\nimport {ButtonBaseProps} from '@ui/buttons/button-base';\r\n\r\nexport interface DataTableAddItemButtonProps {\r\n  children: ReactNode;\r\n  to?: To;\r\n  href?: string;\r\n  download?: boolean | string;\r\n  elementType?: ButtonBaseProps['elementType'];\r\n  onClick?: ButtonBaseProps['onClick'];\r\n  icon?: ReactElement;\r\n  disabled?: boolean;\r\n}\r\nexport const DataTableAddItemButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  DataTableAddItemButtonProps\r\n>(\r\n  (\r\n    {children, to, elementType, onClick, href, download, icon, disabled},\r\n    ref,\r\n  ) => {\r\n    const isMobile = useIsMobileMediaQuery();\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <IconButton\r\n          ref={ref}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          className=\"flex-shrink-0\"\r\n          size=\"sm\"\r\n          to={to}\r\n          href={href}\r\n          download={download}\r\n          elementType={elementType}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n        >\r\n          {icon || <AddIcon />}\r\n        </IconButton>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        ref={ref}\r\n        startIcon={icon || <AddIcon />}\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        size=\"sm\"\r\n        to={to}\r\n        href={href}\r\n        download={download}\r\n        elementType={elementType}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n      >\r\n        {children}\r\n      </Button>\r\n    );\r\n  },\r\n);\r\n","import {apiClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  downloadPath?: string;\r\n  result?: 'jobQueued';\r\n}\r\n\r\nexport type ExportCsvPayload = Record<string, string | number | undefined>;\r\n\r\nexport function useExportCsv(endpoint: string) {\r\n  return useMutation({\r\n    mutationFn: (payload?: ExportCsvPayload) => exportCsv(endpoint, payload),\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction exportCsv(\r\n  endpoint: string,\r\n  payload: ExportCsvPayload | undefined,\r\n): Promise<Response> {\r\n  return apiClient.post(endpoint, payload).then(r => r.data);\r\n}\r\n","import {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function CsvExportInfoDialog() {\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Csv export\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Trans\r\n          message=\"Your request is being processed. We'll email you when the report is ready to download. In\r\n            certain cases, it might take a little longer, depending on the number of items beings\r\n            exported and the volume of activity.\"\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"flat\" color=\"primary\" onClick={close}>\r\n          <Trans message=\"Got it\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {IconButton} from '@ui/buttons/icon-button';\r\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\r\nimport React, {Fragment, useState} from 'react';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {ExportCsvPayload, useExportCsv} from '../requests/use-export-csv';\r\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\r\nimport {CsvExportInfoDialog} from './csv-export-info-dialog';\r\n\r\ninterface DataTableExportCsvButtonProps {\r\n  endpoint: string;\r\n  payload?: ExportCsvPayload;\r\n}\r\nexport function DataTableExportCsvButton({\r\n  endpoint,\r\n  payload,\r\n}: DataTableExportCsvButtonProps) {\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n  const exportCsv = useExportCsv(endpoint);\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        variant=\"outline\"\r\n        color=\"primary\"\r\n        size=\"sm\"\r\n        className=\"flex-shrink-0\"\r\n        disabled={exportCsv.isPending}\r\n        onClick={() => {\r\n          exportCsv.mutate(payload, {\r\n            onSuccess: response => {\r\n              if (response.downloadPath) {\r\n                downloadFileFromUrl(response.downloadPath);\r\n              } else {\r\n                setDialogIsOpen(true);\r\n              }\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        <FileDownloadIcon />\r\n      </IconButton>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={dialogIsOpen}\r\n        onOpenChange={setDialogIsOpen}\r\n      >\r\n        <CsvExportInfoDialog />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport {Avatar, AvatarProps} from '@ui/avatar/avatar';\r\nimport {Skeleton} from '@ui/skeleton/skeleton';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  image?: string;\r\n  label: ReactNode;\r\n  description?: ReactNode;\r\n  labelClassName?: string;\r\n  className?: string;\r\n  avatarSize?: AvatarProps['size'];\r\n  alwaysShowAvatar?: boolean;\r\n  avatarLabel?: string;\r\n  avatarCircle?: boolean;\r\n}\r\nexport function NameWithAvatar({\r\n  image,\r\n  label,\r\n  description,\r\n  className,\r\n  labelClassName,\r\n  avatarSize = 'md',\r\n  alwaysShowAvatar,\r\n  avatarLabel,\r\n  avatarCircle,\r\n}: Props) {\r\n  return (\r\n    <div className={clsx('flex items-center gap-12', className)}>\r\n      {(image || alwaysShowAvatar) && (\r\n        <Avatar\r\n          size={avatarSize}\r\n          className=\"flex-shrink-0\"\r\n          src={image}\r\n          label={avatarLabel ?? label}\r\n          fallback=\"initials\"\r\n          circle={avatarCircle}\r\n        />\r\n      )}\r\n      <div className=\"min-w-0 overflow-hidden\">\r\n        <div\r\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\r\n        >\r\n          {label}\r\n        </div>\r\n        {description && (\r\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\r\n            {description}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function NameWithAvatarPlaceholder({\r\n  className,\r\n  labelClassName,\r\n  showDescription,\r\n  avatarCircle,\r\n}: Partial<Props> & {\r\n  showDescription?: boolean;\r\n}) {\r\n  return (\r\n    <div\r\n      className={clsx('flex w-full max-w-4/5 items-center gap-12', className)}\r\n    >\r\n      <Skeleton\r\n        size=\"w-40 h-40 md:w-32 md:h-32\"\r\n        variant=\"rect\"\r\n        radius={avatarCircle ? 'rounded-full' : undefined}\r\n      />\r\n      <div className=\"flex-auto\">\r\n        <div className={clsx(labelClassName, showDescription && 'leading-3')}>\r\n          <Skeleton />\r\n        </div>\r\n        {showDescription && (\r\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PersonOffIcon = createSvgIcon(\r\n  <path d=\"m20 17.17-3.37-3.38c.64.22 1.23.48 1.77.76.97.51 1.58 1.52 1.6 2.62zm1.19 4.02-1.41 1.41-2.61-2.6H4v-2.78c0-1.12.61-2.15 1.61-2.66 1.29-.66 2.87-1.22 4.67-1.45L1.39 4.22 2.8 2.81l18.39 18.38zM15.17 18l-3-3H12c-2.37 0-4.29.73-5.48 1.34-.32.16-.52.5-.52.88V18h9.17zM12 6c1.1 0 2 .9 2 2 0 .86-.54 1.59-1.3 1.87l1.48 1.48C15.28 10.64 16 9.4 16 8c0-2.21-1.79-4-4-4-1.4 0-2.64.72-3.35 1.82l1.48 1.48C10.41 6.54 11.14 6 12 6z\" />\r\n, 'PersonOffOutlined');\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {message} from '@ui/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  bannable: unknown;\r\n}\r\n\r\nexport interface CreateBanPayload {\r\n  ban_until?: string;\r\n  permanent?: boolean;\r\n  comment?: string;\r\n}\r\n\r\nexport function useBanUser(\r\n  form: UseFormReturn<CreateBanPayload>,\r\n  userId: number | string,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (payload: CreateBanPayload) => banUser(userId, payload),\r\n    onSuccess: async () => {\r\n      toast(message('User suspended'));\r\n      await queryClient.invalidateQueries({queryKey: ['users']});\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction banUser(\r\n  userId: number | string,\r\n  payload: CreateBanPayload,\r\n): Promise<Response> {\r\n  return apiClient.post(`users/ban/${userId}`, payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {\r\n  CreateBanPayload,\r\n  useBanUser,\r\n} from '@common/admin/users/requests/use-ban-user';\r\nimport {CompactUser} from '@ui/types/user';\r\nimport {useForm} from 'react-hook-form';\r\n\r\ninterface Props {\r\n  user: CompactUser;\r\n}\r\nexport function BanUserDialog({user}: Props) {\r\n  const {trans} = useTrans();\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<CreateBanPayload>({\r\n    defaultValues: {\r\n      permanent: true,\r\n    },\r\n  });\r\n  const isPermanent = form.watch('permanent');\r\n  const banUser = useBanUser(form, user.id);\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Suspend “:name“\" values={{name: user.name}} />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={values =>\r\n            banUser.mutate(values, {\r\n              onSuccess: () => close(true),\r\n            })\r\n          }\r\n        >\r\n          <FormDatePicker\r\n            name=\"ban_until\"\r\n            label={<Trans message=\"Suspend until\" />}\r\n            disabled={isPermanent}\r\n          />\r\n          <FormSwitch name=\"permanent\" className=\"mt-12\">\r\n            <Trans message=\"Permanent\" />\r\n          </FormSwitch>\r\n          <FormTextField\r\n            className=\"mt-24\"\r\n            name=\"comment\"\r\n            inputElementType=\"textarea\"\r\n            maxLength={250}\r\n            label={<Trans message=\"Reason\" />}\r\n            placeholder={trans(message('Optional'))}\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          disabled={banUser.isPending}\r\n        >\r\n          <Trans message=\"Suspend\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useUnbanUser(userId: number) {\r\n  return useMutation({\r\n    mutationFn: () => unbanUser(userId),\r\n    onSuccess: () => {\r\n      toast(message('User unsuspended'));\r\n      queryClient.invalidateQueries({queryKey: ['users']});\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction unbanUser(userId: number): Promise<Response> {\r\n  return apiClient.delete(`users/unban/${userId}`).then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {message} from '@ui/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {User} from '@ui/types/user';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\ninterface Payload {\r\n  userId: string | number;\r\n}\r\n\r\nexport function useImpersonateUser() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => impersonateUser(payload),\r\n    onSuccess: async response => {\r\n      toast(message(`Impersonating User \"${response.user.name}\"`));\r\n      window.location.href = '/';\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction impersonateUser(payload: Payload) {\r\n  return apiClient\r\n    .post<Response>(`admin/users/impersonate/${payload.userId}`, payload)\r\n    .then(r => r.data);\r\n}\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {User} from '@ui/types/user';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {CheckIcon} from '@ui/icons/material/Check';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\r\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\r\nimport {Link} from 'react-router';\r\nimport clsx from 'clsx';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {PersonOffIcon} from '@ui/icons/material/PersonOff';\r\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\r\nimport React from 'react';\r\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {useImpersonateUser} from '@common/admin/users/requests/use-impersonate-user';\r\nimport {LoginIcon} from '@ui/icons/material/Login';\r\n\r\nexport const userDatatableColumns: ColumnConfig<User>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    sortingKey: 'email',\r\n    width: 'flex-3 min-w-200',\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"User\" />,\r\n    body: user => (\r\n      <NameWithAvatar\r\n        image={user.image}\r\n        label={user.name}\r\n        description={user.email}\r\n        alwaysShowAvatar\r\n        avatarCircle\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'roles',\r\n    header: () => <Trans message=\"Roles\" />,\r\n    body: user => (\r\n      <ChipList radius=\"rounded\" size=\"xs\">\r\n        {user?.roles?.map(role => (\r\n          <Chip key={role.id} selectable>\r\n            <Link\r\n              className={clsx('capitalize')}\r\n              target=\"_blank\"\r\n              to={`/admin/roles/${role.id}/edit`}\r\n            >\r\n              <Trans message={role.name} />\r\n            </Link>\r\n          </Chip>\r\n        ))}\r\n      </ChipList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'subscribed',\r\n    header: () => <Trans message=\"Subscribed\" />,\r\n    width: 'w-96',\r\n    body: user =>\r\n      user.subscriptions?.filter(s => s.valid).length ? (\r\n        <CheckIcon className=\"text-positive icon-md\" />\r\n      ) : (\r\n        <CloseIcon className=\"text-danger icon-md\" />\r\n      ),\r\n  },\r\n  {\r\n    key: 'banned_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Suspended\" />,\r\n    width: 'w-96',\r\n    body: user =>\r\n      user.banned_at ? <CheckIcon className=\"text-danger icon-md\" /> : null,\r\n  },\r\n  {\r\n    key: 'last_login',\r\n    width: 'w-110',\r\n    header: () => <Trans message=\"Last active\" />,\r\n    body: user =>\r\n      user.last_login ? (\r\n        <time>\r\n          <FormattedDate date={user.last_login.created_at} />\r\n        </time>\r\n      ) : (\r\n        '-'\r\n      ),\r\n  },\r\n  {\r\n    key: 'createdAt',\r\n    allowsSorting: true,\r\n    width: 'w-110',\r\n    header: () => <Trans message=\"Created at\" />,\r\n    body: user => (\r\n      <time>\r\n        <FormattedDate date={user.created_at} />\r\n      </time>\r\n    ),\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    width: 'w-128 flex-shrink-0',\r\n    hideHeader: true,\r\n    align: 'end',\r\n    visibleInMode: 'all',\r\n    body: user => (\r\n      <div className=\"text-muted\">\r\n        <Link to={`${user.id}/details`}>\r\n          <Tooltip label={<Trans message=\"Edit user\" />}>\r\n            <IconButton size=\"md\">\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Link>\r\n        {user.banned_at ? (\r\n          <UnbanButton user={user} />\r\n        ) : (\r\n          <DialogTrigger type=\"modal\">\r\n            <Tooltip label={<Trans message=\"Suspend user\" />}>\r\n              <IconButton size=\"md\">\r\n                <PersonOffIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <BanUserDialog user={user} />\r\n          </DialogTrigger>\r\n        )}\r\n        <ImpersonateButton user={user} />\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface UnbanButtonProps {\r\n  user: User;\r\n}\r\nfunction UnbanButton({user}: UnbanButtonProps) {\r\n  const unban = useUnbanUser(user.id);\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          unban.mutate();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Remove suspension\" />}>\r\n        <IconButton size=\"md\" color=\"danger\">\r\n          <PersonOffIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"Suspend “:name“\" values={{name: user.name}} />}\r\n        body={\r\n          <Trans message=\"Are you sure you want to remove suspension from this user?\" />\r\n        }\r\n        confirm={<Trans message=\"Unsuspend\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface ImpersonateButtonProps {\r\n  user: User;\r\n}\r\nfunction ImpersonateButton({user}: ImpersonateButtonProps) {\r\n  const impersonate = useImpersonateUser();\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Tooltip label={<Trans message=\"Login as user\" />}>\r\n        <IconButton size=\"md\">\r\n          <LoginIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Login as “:name“\" values={{name: user.name}} />}\r\n        isLoading={impersonate.isPending}\r\n        body={<Trans message=\"Are you sure you want to login as this user?\" />}\r\n        confirm={<Trans message=\"Login\" />}\r\n        onConfirm={() => {\r\n          impersonate.mutate({userId: user.id});\r\n        }}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {User} from '@ui/types/user';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\nexport interface CreateUserPayload\r\n  extends Omit<Partial<User>, 'email_verified_at'> {\r\n  email_verified_at?: boolean;\r\n}\r\n\r\nexport function useCreateUser(form: UseFormReturn<CreateUserPayload>) {\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (props: CreateUserPayload) => createUser(props),\r\n    onSuccess: () => {\r\n      toast(message('User created'));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('users')});\r\n      navigate('/admin/users');\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction createUser(payload: CreateUserPayload): Promise<Response> {\r\n  if (payload.roles) {\r\n    payload.roles = payload.roles.map(r => r.id) as any;\r\n  }\r\n  return apiClient.post('users', payload).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport React from 'react';\r\nimport {CreateUserPayload, useCreateUser} from './requests/create-user';\r\nimport {FileUploadProvider} from '../../uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Button} from '@ui/buttons/button';\r\n\r\nexport function CreateUserDialog() {\r\n  const form = useForm<CreateUserPayload>();\r\n  const createUser = useCreateUser(form);\r\n  const navigate = useNavigate();\r\n  const {close, formId} = useDialogContext();\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Create user\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={values => {\r\n            createUser.mutate(values, {\r\n              onSuccess: r => {\r\n                close();\r\n                navigate(`${r.user.id}/details`, {replace: true});\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <FileUploadProvider>\r\n            <FormImageSelector\r\n              className=\"mb-24\"\r\n              name=\"image\"\r\n              diskPrefix=\"avatars\"\r\n              label={<Trans message=\"Avatar\" />}\r\n              showRemoveButton\r\n            />\r\n          </FileUploadProvider>\r\n          <FormTextField\r\n            required\r\n            className=\"mb-24\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label={<Trans message=\"Email\" />}\r\n          />\r\n          <FormTextField\r\n            className=\"mb-24\"\r\n            name=\"first_name\"\r\n            label={<Trans message=\"First name\" />}\r\n          />\r\n          <FormTextField\r\n            className=\"mb-24\"\r\n            name=\"last_name\"\r\n            label={<Trans message=\"Last name\" />}\r\n          />\r\n          <FormTextField\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            label={<Trans message=\"Password\" />}\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"outline\" onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={createUser.isPending}\r\n        >\r\n          <Trans message=\"Create\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {UserDatatableFilters} from '@common/admin/users/user-datatable-filters';\r\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport teamSvg from '../roles/team.svg';\r\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\r\nimport {DataTableExportCsvButton} from '@common/datatable/csv-export/data-table-export-csv-button';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {userDatatableColumns} from '@common/admin/users/user-datatable-columns';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {CreateUserDialog} from '@common/admin/users/create-user-dialog';\r\n\r\nexport function UserDatatable() {\r\n  const {billing} = useSettings();\r\n\r\n  const filteredColumns = !billing.enable\r\n    ? userDatatableColumns.filter(c => c.key !== 'subscribed')\r\n    : userDatatableColumns;\r\n\r\n  return (\r\n    <Fragment>\r\n      <DataTablePage\r\n        endpoint=\"users\"\r\n        title={<Trans message=\"Users\" />}\r\n        filters={UserDatatableFilters}\r\n        columns={filteredColumns}\r\n        actions={<Actions />}\r\n        queryParams={{with: 'subscriptions,bans,lastLogin'}}\r\n        selectedActions={<DeleteSelectedItemsAction />}\r\n        emptyStateMessage={\r\n          <DataTableEmptyStateMessage\r\n            image={teamSvg}\r\n            title={<Trans message=\"No users have been created yet\" />}\r\n            filteringTitle={<Trans message=\"No matching users\" />}\r\n          />\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <Fragment>\r\n      <DataTableExportCsvButton endpoint=\"users/csv/export\" />\r\n      <DialogTrigger type=\"modal\">\r\n        <DataTableAddItemButton>\r\n          <Trans message=\"Add new user\" />\r\n        </DataTableAddItemButton>\r\n        <CreateUserDialog />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import {\r\n  IAppearanceConfig,\r\n  MenuSectionConfig,\r\n} from '@common/admin/appearance/types/appearance-editor-config';\r\nimport {message} from '@ui/i18n/message';\r\n\r\nexport const DefaultAppearanceConfig: IAppearanceConfig = {\r\n  preview: {\r\n    defaultRoute: '/',\r\n    navigationRoutes: [],\r\n  },\r\n  sections: {\r\n    general: {\r\n      label: message('General'),\r\n      position: 1,\r\n    },\r\n    themes: {\r\n      label: message('Themes'),\r\n      position: 2,\r\n    },\r\n    menus: {\r\n      label: message('Menus'),\r\n      position: 3,\r\n      config: {\r\n        availableRoutes: [\r\n          '/',\r\n          '/login',\r\n          '/register',\r\n          '/contact',\r\n          '/pricing',\r\n          '/account-settings',\r\n          '/admin',\r\n          '/admin/appearance',\r\n          '/admin/settings',\r\n          '/admin/plans',\r\n          '/admin/subscriptions',\r\n          '/admin/users',\r\n          '/admin/roles',\r\n          '/admin/pages',\r\n          '/admin/tags',\r\n          '/admin/files',\r\n          '/admin/localizations',\r\n          '/admin/ads',\r\n          '/admin/logs',\r\n          '/admin/settings/authentication',\r\n          '/admin/settings/branding',\r\n          '/admin/settings/cache',\r\n          '/admin/settings/providers',\r\n          '/api-docs',\r\n        ],\r\n        positions: [\r\n          'admin-navbar',\r\n          'admin-sidebar',\r\n          'custom-page-navbar',\r\n          'auth-page-footer',\r\n          'auth-dropdown',\r\n          'account-settings-page',\r\n          'billing-page',\r\n          'checkout-page-navbar',\r\n          'checkout-page-footer',\r\n          'pricing-table-page',\r\n          'contact-us-page',\r\n          'notifications-page',\r\n          'footer',\r\n          'footer-secondary',\r\n        ],\r\n      } as MenuSectionConfig,\r\n    },\r\n    'custom-code': {\r\n      label: message('Custom Code'),\r\n      position: 4,\r\n    },\r\n    'seo-settings': {\r\n      label: message('SEO Settings'),\r\n      position: 5,\r\n    },\r\n  },\r\n};\r\n","import deepMerge from 'deepmerge';\r\nimport {DefaultAppearanceConfig} from '@common/admin/appearance/config/default-appearance-config';\r\nimport {AppAppearanceConfig} from '@app/admin/appearance/app-appearance-config';\r\nimport {IAppearanceConfig} from '@common/admin/appearance/types/appearance-editor-config';\r\n\r\nconst mergedAppearanceConfig = deepMerge.all([\r\n  DefaultAppearanceConfig,\r\n  AppAppearanceConfig,\r\n]);\r\n\r\nexport default mergedAppearanceConfig as IAppearanceConfig;\r\n","import {create} from 'zustand';\r\nimport {subscribeWithSelector} from 'zustand/middleware';\r\nimport {Settings} from '@ui/settings/settings';\r\nimport type {IAppearanceConfig} from './types/appearance-editor-config';\r\nimport {AllCommands} from './commands/commands';\r\nimport mergedAppearanceConfig from './config/merged-appearance-config';\r\nimport {BootstrapData} from '@ui/bootstrap-data/bootstrap-data';\r\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\r\nimport {ThemeId} from '@ui/themes/theme-selector-context';\r\n\r\nexport interface AppearanceEditorValues {\r\n  appearance: {\r\n    env: {app_name: string; app_url: string};\r\n    seo: {\r\n      key: string;\r\n      name: string;\r\n      value: string;\r\n      defaultValue: string;\r\n    }[];\r\n    themes: BootstrapData['themes'];\r\n    custom_code: {\r\n      css?: string;\r\n      html?: string;\r\n    };\r\n  };\r\n  settings: Settings;\r\n}\r\n\r\nexport interface AppearanceDefaults {\r\n  appearance: {\r\n    themes: {\r\n      light: Record<string, string>;\r\n      dark: Record<string, string>;\r\n    };\r\n  };\r\n  settings: Settings;\r\n}\r\n\r\ninterface AppearanceStore {\r\n  defaults: AppearanceDefaults | null;\r\n  iframeWindow: Window | null;\r\n  config: IAppearanceConfig | null;\r\n  setDefaults: (value: AppearanceDefaults) => void;\r\n  setIframeWindow: (value: Window) => void;\r\n  isDirty: boolean;\r\n  setIsDirty: (value: boolean) => void;\r\n  preview: {\r\n    setValues: (settings: AppearanceEditorValues) => void;\r\n    setThemeFont: (font: FontConfig | null) => void;\r\n    setThemeValue: (name: string, value: string) => void;\r\n    setActiveTheme: (themeId: ThemeId | null) => void;\r\n    setHighlight: (selector: string | null | undefined) => void;\r\n    setCustomCode: (mode: 'css' | 'html', value?: string) => void;\r\n  };\r\n}\r\n\r\nlet resolvePreviewAppIsLoaded = () => {};\r\nexport const previewAppIsLoaded = new Promise<void>(\r\n  resolve => (resolvePreviewAppIsLoaded = resolve),\r\n);\r\n\r\nexport const useAppearanceStore = create<AppearanceStore>()(\r\n  subscribeWithSelector((set, get) => ({\r\n    defaults: null,\r\n    iframeWindow: null,\r\n    isDirty: false,\r\n    setIsDirty: value => {\r\n      set(() => ({isDirty: value}));\r\n    },\r\n    config: mergedAppearanceConfig,\r\n    setDefaults: value => {\r\n      set({defaults: {...value}});\r\n    },\r\n    setIframeWindow: value => {\r\n      set({iframeWindow: value});\r\n      value.addEventListener('message', e => {\r\n        if (\r\n          e.data.source === 'be-appearance-preview' &&\r\n          e.data.type === 'appLoaded'\r\n        ) {\r\n          resolvePreviewAppIsLoaded();\r\n        }\r\n      });\r\n    },\r\n    preview: {\r\n      setValues: values => {\r\n        const preview = get().iframeWindow;\r\n        postMessage(preview, {type: 'setValues', values});\r\n      },\r\n      setThemeFont: font => {\r\n        const preview = get().iframeWindow;\r\n        postMessage(preview, {type: 'setThemeFont', value: font});\r\n      },\r\n      setThemeValue: (name, value) => {\r\n        const preview = get().iframeWindow;\r\n        postMessage(preview, {type: 'setThemeValue', name, value});\r\n      },\r\n      setActiveTheme: themeId => {\r\n        const preview = get().iframeWindow!;\r\n        postMessage(preview, {type: 'setActiveTheme', themeId});\r\n      },\r\n      setCustomCode: (mode, value) => {\r\n        const preview = get().iframeWindow;\r\n        postMessage(preview, {type: 'setCustomCode', mode, value});\r\n      },\r\n      setHighlight: selector => {\r\n        let node: HTMLElement | null = null;\r\n        const document = get().iframeWindow?.document;\r\n        if (document && selector) {\r\n          node = document.querySelector(selector);\r\n        }\r\n        if (node) {\r\n          requestAnimationFrame(() => {\r\n            if (!node) return;\r\n            node.scrollIntoView({\r\n              behavior: 'smooth',\r\n              block: 'center',\r\n              inline: 'center',\r\n            });\r\n          });\r\n        }\r\n      },\r\n    },\r\n  })),\r\n);\r\n\r\nfunction postMessage(window: Window | null, command: AllCommands) {\r\n  if (window) {\r\n    window.postMessage({source: 'be-appearance-editor', ...command}, '*');\r\n  }\r\n}\r\n\r\nexport function appearanceState(): AppearanceStore {\r\n  return useAppearanceStore.getState();\r\n}\r\n","import {queryOptions, useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport interface FetchAdminSettingsResponse\r\n  extends BackendResponse,\r\n    AdminSettings {}\r\n\r\nexport function useAdminSettings() {\r\n  return useQuery(adminSettingsQueryOptions);\r\n}\r\n\r\nexport const adminSettingsQueryOptions = queryOptions({\r\n  queryKey: ['fetchAdminSettings'],\r\n  queryFn: () => fetchAdminSettings(),\r\n  staleTime: Infinity,\r\n  select: prepareSettingsForHookForm,\r\n});\r\n\r\nfunction fetchAdminSettings() {\r\n  return apiClient\r\n    .get<FetchAdminSettingsResponse>('settings')\r\n    .then(r => r.data);\r\n}\r\n\r\n// need to cast all numbers to strings and null/undefined to empty string recursively, otherwise hook form isDirty functionality will not work properly when binding numbers to text fields due to string/number type mismatch\r\nexport function prepareSettingsForHookForm(obj: any) {\r\n  for (const key in obj) {\r\n    if (Array.isArray(obj[key])) {\r\n      obj[key] = obj[key].map(prepareSettingsForHookForm);\r\n    } else if (typeof obj[key] === 'object') {\r\n      obj[key] = prepareSettingsForHookForm(obj[key]);\r\n    } else if (typeof obj[key] === 'number') {\r\n      obj[key] = obj[key].toString();\r\n    } else if (obj[key] == null) {\r\n      obj[key] = '';\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {AppearanceDefaults, AppearanceEditorValues} from '../appearance-store';\r\nimport {prepareSettingsForHookForm} from '@common/admin/settings/requests/use-admin-settings';\r\n\r\nexport interface FetchAppearanceValuesResponse extends BackendResponse {\r\n  values: AppearanceEditorValues;\r\n  defaults: AppearanceDefaults;\r\n}\r\n\r\nexport function useAppearanceEditorValuesQuery() {\r\n  return useQuery({\r\n    queryKey: ['admin/appearance/values'],\r\n    queryFn: () => fetchAppearanceValues(),\r\n    staleTime: Infinity,\r\n    select: prepareSettingsForHookForm,\r\n  });\r\n}\r\n\r\nexport function useAppearanceEditorValues(): AppearanceEditorValues {\r\n  const {data} = useAppearanceEditorValuesQuery();\r\n  return data!.values;\r\n}\r\n\r\nfunction fetchAppearanceValues(): Promise<FetchAppearanceValuesResponse> {\r\n  return apiClient.get('admin/appearance/values').then(r => r.data);\r\n}\r\n","import {Navigate, Outlet, useLocation, useMatches} from 'react-router';\r\nimport {useEffect, useRef} from 'react';\r\nimport {AppearanceEditorValues, appearanceState} from './appearance-store';\r\nimport {useAppearanceEditorValuesQuery} from './requests/use-appearance-editor-values';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {useAppearanceEditorMode} from './commands/use-appearance-editor-mode';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\r\n\r\nfunction usePreviewRoute(): string {\r\n  const {pathname} = useLocation();\r\n  const matches = useMatches();\r\n  const subRoute = (matches.at(-1)?.handle as any)?.previewRoute;\r\n  const activeSection = pathname.split('/')[3];\r\n  const config = mergedAppearanceConfig.sections[activeSection];\r\n\r\n  const baseRoute =\r\n    config?.previewRoute || mergedAppearanceConfig.preview.defaultRoute || '/';\r\n\r\n  if (subRoute) {\r\n    return `${baseRoute}/${subRoute}`;\r\n  }\r\n\r\n  return baseRoute;\r\n}\r\n\r\nexport function AppearanceEditorPage() {\r\n  const {isAppearanceEditorActive} = useAppearanceEditorMode();\r\n  const {data} = useAppearanceEditorValuesQuery();\r\n  const {base_url} = useSettings();\r\n  const iframeRef = useRef<HTMLIFrameElement>(null);\r\n  const iframeRoute = usePreviewRoute();\r\n\r\n  useEffect(() => {\r\n    // only set defaults snapshot once on route init\r\n    if (data?.defaults && !appearanceState().defaults) {\r\n      appearanceState().setDefaults(data.defaults);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (iframeRef.current) {\r\n      appearanceState().setIframeWindow(iframeRef.current.contentWindow!);\r\n    }\r\n  }, []);\r\n\r\n  // make sure appearance editor iframe can't be nested\r\n  if (isAppearanceEditorActive) {\r\n    return <Navigate to=\"/admin\" />;\r\n  }\r\n\r\n  // iframeRoute might contain search params, so we need to parse\r\n  // it and construct new url with appearanceEditor appended\r\n  const url = new URL(\r\n    iframeRoute && iframeRoute !== '/'\r\n      ? `${base_url}/${iframeRoute}`\r\n      : `${base_url}`,\r\n  );\r\n  url.searchParams.append('appearanceEditor', 'true');\r\n\r\n  // set key so iframe is recreated on route change and there's no entry pushed into history stack\r\n  return (\r\n    <div className=\"h-screen items-center md:flex\">\r\n      <StaticPageTitle>\r\n        <Trans message=\"Appearance\" />\r\n      </StaticPageTitle>\r\n      <Sidebar values={data?.values} />\r\n      <div className=\"relative h-full flex-auto\">\r\n        <iframe\r\n          key={iframeRoute}\r\n          ref={iframeRef}\r\n          className=\"h-full w-full max-md:hidden\"\r\n          src={url.toString()}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SidebarProps {\r\n  values: AppearanceEditorValues | undefined;\r\n}\r\nfunction Sidebar({values}: SidebarProps) {\r\n  const spinner = (\r\n    <div className=\"flex h-full flex-auto items-center justify-center\">\r\n      <ProgressCircle isIndeterminate aria-label=\"Loading editor\" />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"relative z-10 h-full w-full border-r bg shadow-lg @container md:w-320\">\r\n      {values ? <Outlet /> : spinner}\r\n    </div>\r\n  );\r\n}\r\n","import clsx from 'clsx';\r\nimport {forwardRef, ReactNode} from 'react';\r\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\r\nimport {ButtonBase, ButtonBaseProps} from '@ui/buttons/button-base';\r\n\r\ninterface Props extends ButtonBaseProps {\r\n  startIcon?: ReactNode;\r\n  endIcon?: ReactNode;\r\n  description?: ReactNode;\r\n}\r\nexport const AppearanceButton = forwardRef<HTMLButtonElement, Props>(\r\n  ({startIcon, children, className, description, endIcon, ...other}, ref) => {\r\n    return (\r\n      <ButtonBase\r\n        ref={ref}\r\n        display=\"flex\"\r\n        className={clsx(\r\n          'relative mb-10 h-54 w-full items-center gap-10 rounded-input border bg px-14 text-sm hover:bg-hover',\r\n          className,\r\n          other.disabled && 'pointer-events-none opacity-50',\r\n        )}\r\n        variant={null}\r\n        {...other}\r\n      >\r\n        {startIcon}\r\n        <span className=\"block min-w-0\">\r\n          <span className=\"block\">{children}</span>\r\n          {description && (\r\n            <span className=\"block overflow-hidden overflow-ellipsis whitespace-nowrap text-xs text-muted\">\r\n              {description}\r\n            </span>\r\n          )}\r\n        </span>\r\n        <div className=\"ml-auto\">\r\n          {endIcon ?? (\r\n            <KeyboardArrowRightIcon\r\n              aria-hidden\r\n              className=\"text-muted icon-sm\"\r\n            />\r\n          )}\r\n        </div>\r\n      </ButtonBase>\r\n    );\r\n  },\r\n);\r\n","import {Link, useNavigate} from 'react-router';\r\nimport {AppearanceEditorValues} from '../../appearance-store';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {AppearanceButton} from '../../appearance-button';\r\nimport {nanoid} from 'nanoid';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Fragment} from 'react';\r\n\r\nexport function MenuList() {\r\n  const navigate = useNavigate();\r\n  const {trans} = useTrans();\r\n  const {fields, append} = useFieldArray<\r\n    AppearanceEditorValues,\r\n    'settings.menus',\r\n    'key'\r\n  >({\r\n    name: 'settings.menus',\r\n    keyName: 'key',\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        {fields.map((field, index) => (\r\n          <AppearanceButton to={`${index}`} key={field.key} elementType={Link}>\r\n            {field.name}\r\n          </AppearanceButton>\r\n        ))}\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <Button\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          size=\"xs\"\r\n          onClick={() => {\r\n            const id = nanoid(10);\r\n            append({\r\n              name: trans(\r\n                message('New menu :number', {\r\n                  values: {number: fields.length + 1},\r\n                }),\r\n              ),\r\n              id,\r\n              positions: [],\r\n              items: [],\r\n            });\r\n            navigate(`${fields.length}`);\r\n          }}\r\n        >\r\n          <Trans message=\"Create menu\" />\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {MenuSectionConfig} from '../../../types/appearance-editor-config';\r\nimport mergedAppearanceConfig from '../../../config/merged-appearance-config';\r\nimport {MenuItemConfig} from '@common/menus/menu-config';\r\n\r\nexport function useAvailableRoutes(): Partial<MenuItemConfig>[] {\r\n  const menuConfig = mergedAppearanceConfig.sections.menus.config;\r\n\r\n  if (!menuConfig) return [];\r\n\r\n  return (menuConfig as MenuSectionConfig).availableRoutes.map(route => {\r\n    return {\r\n      id: route,\r\n      label: route,\r\n      action: route,\r\n      type: 'route',\r\n      target: '_self',\r\n    };\r\n  });\r\n}\r\n","export function ucFirst<T extends string>(string: T): T {\r\n  if (!string) return string;\r\n  return (string.charAt(0).toUpperCase() + string.slice(1)) as T;\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useAvailableRoutes} from '@common/admin/appearance/sections/menus/hooks/available-routes';\r\nimport {List, ListItem} from '@ui/list/list';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useValueLists} from '@common/http/value-lists';\r\nimport {ReactNode} from 'react';\r\nimport {nanoid} from 'nanoid';\r\nimport {MenuItemConfig} from '@common/menus/menu-config';\r\nimport {ucFirst} from '@ui/utils/string/uc-first';\r\n\r\ninterface AddMenuItemDialogProps {\r\n  title?: ReactNode;\r\n}\r\nexport function AddMenuItemDialog({\r\n  title = <Trans message=\"Add menu item\" />,\r\n}: AddMenuItemDialogProps) {\r\n  const {data} = useValueLists(['menuItemCategories']);\r\n  const categories = data?.menuItemCategories || [];\r\n  const routeItems = useAvailableRoutes();\r\n\r\n  return (\r\n    <Dialog size=\"sm\">\r\n      <DialogHeader>{title}</DialogHeader>\r\n      <DialogBody>\r\n        <Accordion variant=\"outline\">\r\n          <AccordionItem\r\n            label={<Trans message=\"Link\" />}\r\n            bodyClassName=\"max-h-240 overflow-y-auto\"\r\n          >\r\n            <AddCustomLink />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            label={<Trans message=\"Route\" />}\r\n            bodyClassName=\"max-h-240 overflow-y-auto\"\r\n          >\r\n            <AddRoute items={routeItems} />\r\n          </AccordionItem>\r\n          {categories.map(category => (\r\n            <AccordionItem\r\n              key={category.name}\r\n              label={<Trans message={category.name} />}\r\n            >\r\n              <AddRoute items={category.items} />\r\n            </AccordionItem>\r\n          ))}\r\n        </Accordion>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction AddCustomLink() {\r\n  const form = useForm<MenuItemConfig>({\r\n    defaultValues: {\r\n      id: nanoid(6),\r\n      type: 'link',\r\n      target: '_blank',\r\n    },\r\n  });\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onSubmit={value => {\r\n        close(value);\r\n      }}\r\n    >\r\n      <FormTextField\r\n        required\r\n        name=\"label\"\r\n        label={<Trans message=\"Label\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormTextField\r\n        required\r\n        type=\"url\"\r\n        name=\"action\"\r\n        placeholder=\"https://\"\r\n        label={<Trans message=\"Url\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <div className=\"text-right\">\r\n        <Button type=\"submit\" variant=\"flat\" color=\"primary\" size=\"xs\">\r\n          <Trans message=\"Add to menu\" />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface AddRouteProps {\r\n  items: Partial<MenuItemConfig>[];\r\n}\r\nfunction AddRoute({items}: AddRouteProps) {\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <List>\r\n      {items.map(item => {\r\n        return (\r\n          <ListItem\r\n            key={item.id}\r\n            startIcon={<AddIcon size=\"sm\" />}\r\n            onSelected={() => {\r\n              if (item.label) {\r\n                const last = item.label.split('/').pop();\r\n                item.label = last ? ucFirst(last) : item.label;\r\n                item.id = nanoid(6);\r\n              }\r\n              if (!item.target) {\r\n                item.target = '_self';\r\n              }\r\n              close(item);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DragIndicatorIcon = createSvgIcon(\r\n  <path d=\"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n, 'DragIndicatorOutlined');\r\n","export default \"__VITE_ASSET__abcb02f6__\"","import {\r\n  DropPosition,\r\n  SortSession,\r\n} from '@ui/interactions/dnd/sortable/use-sortable';\r\nimport {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\r\nimport {droppables} from '@ui/interactions/dnd/drag-state';\r\n\r\nexport const sortableLineStrategy: SortableStrategy = {\r\n  onDragStart: () => {},\r\n  onDragEnter: () => {},\r\n  onDragOver: ({e, ref, item, sortSession, onDropPositionChange}) => {\r\n    const previousPosition = sortSession.dropPosition;\r\n    let newPosition: DropPosition = null;\r\n\r\n    const rect = droppables.get(item)?.rect;\r\n    if (rect) {\r\n      const midY = rect.top + rect.height / 2;\r\n      if (e.clientY <= midY) {\r\n        newPosition = 'before';\r\n      } else if (e.clientY >= midY) {\r\n        newPosition = 'after';\r\n      }\r\n    }\r\n\r\n    if (newPosition !== previousPosition) {\r\n      const overIndex = sortSession.sortables.indexOf(item);\r\n      sortSession.dropPosition = newPosition;\r\n      onDropPositionChange?.(sortSession.dropPosition);\r\n\r\n      clearLinePreview(sortSession);\r\n      if (ref.current) {\r\n        if (sortSession.dropPosition === 'after') {\r\n          addLinePreview(ref.current, 'bottom', sortSession);\r\n        } else {\r\n          // if it's the first row, add preview to the top border, as there's no previous element\r\n          if (overIndex === 0) {\r\n            addLinePreview(ref.current, 'top', sortSession);\r\n            // otherwise add preview to the bottom border of the previous row\r\n          } else {\r\n            const droppableId = sortSession.sortables[overIndex - 1];\r\n            const droppable = droppables.get(droppableId);\r\n            if (droppable?.ref.current) {\r\n              addLinePreview(droppable.ref.current, 'bottom', sortSession);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const itemIndex = sortSession.sortables.indexOf(item);\r\n\r\n      // don't move item at all if hovering over itself\r\n      if (sortSession.activeIndex === itemIndex) {\r\n        sortSession.finalIndex = sortSession.activeIndex;\r\n        return;\r\n      }\r\n\r\n      // adjust final drop index based on whether we're dropping drag target after or before it's original index\r\n      // this is needed, so we get the same index if target is dropped after current item or before next item\r\n      const dragDirection =\r\n        overIndex > sortSession.activeIndex ? 'after' : 'before';\r\n      if (dragDirection === 'after') {\r\n        sortSession.finalIndex =\r\n          sortSession.dropPosition === 'before' ? itemIndex - 1 : itemIndex;\r\n      } else {\r\n        sortSession.finalIndex =\r\n          sortSession.dropPosition === 'after' ? itemIndex + 1 : itemIndex;\r\n      }\r\n    }\r\n  },\r\n  onDragEnd: sortSession => {\r\n    clearLinePreview(sortSession);\r\n  },\r\n};\r\n\r\nfunction clearLinePreview(sortSession: SortSession) {\r\n  if (sortSession?.linePreviewEl) {\r\n    sortSession.linePreviewEl.style.borderBottomColor = '';\r\n    sortSession.linePreviewEl.style.borderTopColor = '';\r\n    sortSession.linePreviewEl = undefined;\r\n  }\r\n}\r\n\r\nfunction addLinePreview(\r\n  el: HTMLElement,\r\n  side: 'top' | 'bottom',\r\n  sortSession: SortSession,\r\n) {\r\n  const color = 'rgb(var(--be-primary))';\r\n  if (side === 'top') {\r\n    el.style.borderTopColor = color;\r\n  } else {\r\n    el.style.borderBottomColor = color;\r\n  }\r\n  if (sortSession) {\r\n    sortSession.linePreviewEl = el;\r\n  }\r\n}\r\n","import {clamp} from '@ui/utils/number/clamp';\r\n\r\nexport function moveItemInArray<T = any>(\r\n  array: T[],\r\n  fromIndex: number,\r\n  toIndex: number,\r\n): T[] {\r\n  const from = clamp(fromIndex, 0, array.length - 1);\r\n  const to = clamp(toIndex, 0, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return array;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n\r\n  return array;\r\n}\r\n","export function moveItemInNewArray<T>(\r\n  array: T[],\r\n  from: number,\r\n  to: number\r\n): T[] {\r\n  const newArray = array.slice();\r\n  newArray.splice(\r\n    to < 0 ? newArray.length + to : to,\r\n    0,\r\n    newArray.splice(from, 1)[0]\r\n  );\r\n\r\n  return newArray;\r\n}\r\n","import {moveItemInArray} from '@ui/utils/array/move-item-in-array';\r\nimport {droppables} from '@ui/interactions/dnd/drag-state';\r\nimport {moveItemInNewArray} from '@ui/utils/array/move-item-in-new-array';\r\nimport type {SortSession} from '@ui/interactions/dnd/sortable/use-sortable';\r\nimport type {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\r\n\r\nconst transition = 'transform 0.2s cubic-bezier(0.2, 0, 0, 1)';\r\n\r\nexport const sortableTransformStrategy: SortableStrategy = {\r\n  onDragStart: sortSession => {\r\n    sortSession.sortables.forEach((sortable, index) => {\r\n      const droppable = droppables.get(sortable);\r\n      if (!droppable?.ref.current) return;\r\n\r\n      droppable.ref.current.style.transition = transition;\r\n\r\n      if (sortSession?.activeIndex === index) {\r\n        droppable.ref.current.style.opacity = '0.4';\r\n      }\r\n    });\r\n  },\r\n  onDragEnter: (\r\n    sortSession: SortSession,\r\n    overIndex: number,\r\n    currentIndex: number,\r\n  ) => {\r\n    moveItemInArray(sortSession.sortables, currentIndex, overIndex);\r\n    const rects = sortSession.sortables.map(s => droppables.get(s)?.rect);\r\n\r\n    sortSession.sortables.forEach((sortable, index) => {\r\n      if (!sortSession) return;\r\n\r\n      const newRects = moveItemInNewArray(\r\n        rects,\r\n        overIndex,\r\n        sortSession.activeIndex,\r\n      );\r\n      const oldRect = rects[index];\r\n      const newRect = newRects[index];\r\n      const sortableTarget = droppables.get(sortable);\r\n\r\n      if (sortableTarget?.ref.current && newRect && oldRect) {\r\n        const x = newRect.left - oldRect.left;\r\n        const y = newRect.top - oldRect.top;\r\n        sortableTarget.ref.current.style.transform = `translate3d(${x}px, ${y}px, 0)`;\r\n      }\r\n    });\r\n\r\n    sortSession.finalIndex = overIndex;\r\n  },\r\n  onDragOver: () => {},\r\n  onDragEnd: sortSession => {\r\n    // clear any styles and transforms applied to sortables during sorting\r\n    sortSession.sortables.forEach(sortable => {\r\n      const droppable = droppables.get(sortable);\r\n      if (droppable?.ref.current) {\r\n        droppable.ref.current.style.transform = '';\r\n        droppable.ref.current.style.transition = '';\r\n        droppable.ref.current.style.opacity = '';\r\n        droppable.ref.current.style.zIndex = '';\r\n      }\r\n    });\r\n  },\r\n};\r\n","import {moveItemInArray} from '@ui/utils/array/move-item-in-array';\r\nimport {droppables} from '@ui/interactions/dnd/drag-state';\r\nimport {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\r\n\r\nexport const sortableMoveNodeStrategy: SortableStrategy = {\r\n  onDragStart: () => {},\r\n  onDragOver: () => {},\r\n  onDragEnter: (sortSession, overIndex: number, currentIndex: number) => {\r\n    const node = droppables.get(sortSession.sortables[currentIndex])?.ref\r\n      .current;\r\n    if (node) {\r\n      moveNode(node, currentIndex, overIndex);\r\n      moveItemInArray(sortSession.sortables, currentIndex, overIndex);\r\n      sortSession.finalIndex = overIndex;\r\n    }\r\n  },\r\n  onDragEnd: () => {},\r\n};\r\n\r\nfunction moveNode(el: HTMLElement, currentIndex: number, newIndex: number) {\r\n  const parentEl = el.parentElement!;\r\n  if (newIndex < 0) {\r\n    parentEl.prepend(el);\r\n  } else {\r\n    // if parent already contains this node, and we're changing\r\n    // node's index within parent, need to adjust index by one\r\n    if (currentIndex > -1 && currentIndex <= newIndex) {\r\n      newIndex++;\r\n    }\r\n    const ref = parentEl.children.item(newIndex);\r\n    if (ref) {\r\n      ref.before(el);\r\n    } else {\r\n      parentEl.append(el);\r\n    }\r\n  }\r\n}\r\n","import {DraggableId, DragPreviewRenderer, useDraggable} from '../use-draggable';\r\nimport {useDroppable} from '../use-droppable';\r\nimport {RefObject, useEffect} from 'react';\r\nimport {getScrollParent, mergeProps} from '@react-aria/utils';\r\nimport {droppables} from '../drag-state';\r\nimport {SortableStrategy} from '@ui/interactions/dnd/sortable/sortable-strategy';\r\nimport {sortableLineStrategy} from '@ui/interactions/dnd/sortable/sortable-line-strategy';\r\nimport {sortableTransformStrategy} from '@ui/interactions/dnd/sortable/sortable-transform-strategy';\r\nimport {sortableMoveNodeStrategy} from '@ui/interactions/dnd/sortable/sortable-move-node-strategy';\r\nimport {updateRects} from '@ui/interactions/dnd/update-rects';\r\n\r\nexport interface SortSession {\r\n  // items in this list will be moved when user is sorting\r\n  sortables: DraggableId[];\r\n\r\n  // sortable user started dragging to start this session\r\n  activeSortable: DraggableId;\r\n  activeIndex: number;\r\n\r\n  // final index sortable was dropped in and should be moved to\r\n  finalIndex: number;\r\n\r\n  // drop position for displaying line preview\r\n  dropPosition: DropPosition;\r\n  // element that currently has a line preview at the top or bottom\r\n  linePreviewEl?: HTMLElement;\r\n  scrollParent?: Element;\r\n  scrollListener: () => void;\r\n  ref: RefObject<HTMLElement>;\r\n}\r\n\r\nlet sortSession: null | SortSession = null;\r\n\r\nexport type DropPosition = 'before' | 'after' | null;\r\n\r\ntype StrategyName = 'line' | 'liveSort' | 'moveNode';\r\n\r\nconst strategies: Record<StrategyName, SortableStrategy> = {\r\n  line: sortableLineStrategy,\r\n  liveSort: sortableTransformStrategy,\r\n  moveNode: sortableMoveNodeStrategy,\r\n};\r\n\r\nexport interface UseSortableProps {\r\n  item: DraggableId;\r\n  items: DraggableId[];\r\n  onSortStart?: () => void;\r\n  onSortEnd?: (oldIndex: number, newIndex: number) => void;\r\n  onDragEnd?: () => void;\r\n  onDropPositionChange?: (dropPosition: DropPosition) => void;\r\n  ref: RefObject<HTMLElement>;\r\n  type: string;\r\n  preview?: RefObject<DragPreviewRenderer>;\r\n  strategy?: StrategyName;\r\n  disabled?: boolean;\r\n}\r\nexport function useSortable({\r\n  item,\r\n  items,\r\n  type,\r\n  ref,\r\n  onSortEnd,\r\n  onSortStart,\r\n  onDragEnd,\r\n  preview,\r\n  disabled,\r\n  onDropPositionChange,\r\n  strategy = 'liveSort',\r\n}: UseSortableProps) {\r\n  // todo: issue with sorting after scrolling menu editor item list\r\n\r\n  // update sortables and active index, in case we lazy load more items while sorting\r\n  useEffect(() => {\r\n    if (sortSession && sortSession.sortables.length !== items.length) {\r\n      sortSession.sortables = [...items];\r\n      sortSession.activeIndex = items.indexOf(item);\r\n    }\r\n  }, [items, item]);\r\n\r\n  const {draggableProps, dragHandleRef} = useDraggable({\r\n    id: item,\r\n    ref,\r\n    type,\r\n    preview,\r\n    disabled,\r\n    onDragStart: () => {\r\n      sortSession = {\r\n        sortables: [...items],\r\n        activeSortable: item,\r\n        activeIndex: items.indexOf(item),\r\n        finalIndex: items.indexOf(item),\r\n        dropPosition: null,\r\n        ref,\r\n        scrollParent: ref.current ? getScrollParent(ref.current) : undefined,\r\n        scrollListener: () => {\r\n          updateRects(droppables);\r\n        },\r\n      };\r\n      strategies[strategy].onDragStart(sortSession);\r\n\r\n      onSortStart?.();\r\n      sortSession.scrollParent?.addEventListener(\r\n        'scroll',\r\n        sortSession.scrollListener,\r\n      );\r\n    },\r\n    onDragEnd: () => {\r\n      if (!sortSession) return;\r\n\r\n      sortSession.dropPosition = null;\r\n      onDropPositionChange?.(sortSession.dropPosition);\r\n      if (sortSession.activeIndex !== sortSession.finalIndex) {\r\n        onSortEnd?.(sortSession.activeIndex, sortSession.finalIndex);\r\n      }\r\n      sortSession.scrollParent?.removeEventListener(\r\n        'scroll',\r\n        sortSession.scrollListener,\r\n      );\r\n      strategies[strategy].onDragEnd(sortSession);\r\n      // call \"onDragEnd\" after \"onSortEnd\", so listener has a chance to use sort session data\r\n      onDragEnd?.();\r\n      sortSession = null;\r\n    },\r\n    getData: () => {},\r\n  });\r\n\r\n  const {droppableProps} = useDroppable({\r\n    id: item,\r\n    ref,\r\n    types: [type],\r\n    disabled,\r\n    allowDragEventsFromItself: true,\r\n    onDragOver: (target, e) => {\r\n      if (!sortSession) return;\r\n      strategies[strategy].onDragOver({\r\n        e,\r\n        ref,\r\n        item,\r\n        sortSession,\r\n        onDropPositionChange,\r\n      });\r\n    },\r\n    onDragEnter: () => {\r\n      if (!sortSession) return;\r\n      const overIndex = sortSession.sortables.indexOf(item);\r\n      const oldIndex = sortSession.sortables.indexOf(\r\n        sortSession.activeSortable,\r\n      );\r\n      strategies[strategy].onDragEnter(sortSession, overIndex, oldIndex);\r\n    },\r\n    onDragLeave: () => {\r\n      if (!sortSession) return;\r\n      sortSession.dropPosition = null;\r\n      onDropPositionChange?.(sortSession.dropPosition);\r\n    },\r\n  });\r\n\r\n  return {\r\n    sortableProps: {...mergeProps(draggableProps, droppableProps)},\r\n    dragHandleRef,\r\n  };\r\n}\r\n","import {FieldArrayWithId, useFormContext, useWatch} from 'react-hook-form';\r\nimport {Fragment, useEffect, useMemo, useRef} from 'react';\r\nimport {Link, useNavigate, useParams} from 'react-router';\r\nimport {MenuSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\r\nimport {\r\n  AppearanceEditorValues,\r\n  appearanceState,\r\n  useAppearanceStore,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AddMenuItemDialog} from '@common/admin/appearance/sections/menus/add-menu-item-dialog';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {DragIndicatorIcon} from '@ui/icons/material/DragIndicator';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\nimport {DeleteIcon} from '@ui/icons/material/Delete';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {Option} from '@ui/forms/select/select';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport dropdownMenu from './dropdown-menu.svg';\r\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\r\nimport {\r\n  useSortable,\r\n  UseSortableProps,\r\n} from '@ui/interactions/dnd/sortable/use-sortable';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {createSvgIconFromTree} from '@ui/icons/create-svg-icon';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {MenuItemConfig} from '@common/menus/menu-config';\r\nimport {MenuEditorFormValue} from '@common/admin/appearance/sections/menus/menu-editor-form';\r\nimport {moveItemInNewArray} from '@ui/utils/array/move-item-in-new-array';\r\n\r\nexport function AppearanceMenuEditor() {\r\n  const {menuIndex} = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const {getValues} = useFormContext<AppearanceEditorValues>();\r\n  const menuFormPath = `settings.menus.${menuIndex!}` as 'settings.menus.0';\r\n  const menu = getValues(menuFormPath);\r\n\r\n  useEffect(() => {\r\n    // go to menu list, if menu can't be found\r\n    if (!menu) {\r\n      navigate('/admin/appearance/menus');\r\n    } else {\r\n      appearanceState().preview.setHighlight(`[data-menu-id=\"${menu.id}\"]`);\r\n    }\r\n  }, [navigate, menu]);\r\n\r\n  if (!menu) {\r\n    return null;\r\n  }\r\n\r\n  return <MenuEditorSection menuFormPath={menuFormPath} />;\r\n}\r\n\r\ninterface MenuEditorFormProps {\r\n  menuFormPath: 'settings.menus.0';\r\n}\r\nfunction MenuEditorSection({menuFormPath}: MenuEditorFormProps) {\r\n  const {\r\n    site: {has_mobile_app},\r\n  } = useSettings();\r\n  const menuSectionConfig = useAppearanceStore(\r\n    s => s.config?.sections.menus.config,\r\n  ) as MenuSectionConfig;\r\n\r\n  const menuPositions = useMemo(() => {\r\n    const positions = [...menuSectionConfig?.positions];\r\n    if (has_mobile_app) {\r\n      positions.push('mobile-app-about');\r\n    }\r\n    return positions.map(position => ({\r\n      key: position,\r\n      name: position.replaceAll('-', ' '),\r\n    }));\r\n  }, [menuSectionConfig, has_mobile_app]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-30 border-b pb-30\">\r\n        <FormTextField\r\n          name={`${menuFormPath}.name`}\r\n          label={<Trans message=\"Menu name\" />}\r\n          className=\"mb-20\"\r\n          autoFocus\r\n        />\r\n        <FormChipField\r\n          chipSize=\"sm\"\r\n          name={`${menuFormPath}.positions`}\r\n          valueKey=\"id\"\r\n          label={<Trans message=\"Menu positions\" />}\r\n          description={\r\n            <Trans message=\"Where should this menu appear on the site\" />\r\n          }\r\n        >\r\n          {menuPositions.map(item => (\r\n            <Option key={item.key} value={item.key} capitalizeFirst>\r\n              {item.name}\r\n            </Option>\r\n          ))}\r\n        </FormChipField>\r\n      </div>\r\n      <MenuItemsManager formPath={`${menuFormPath}.items`} />\r\n      <div className=\"text-right\">\r\n        <DeleteMenuTrigger />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface MenuItemsManagerProps {\r\n  formPath: string;\r\n}\r\nexport function MenuItemsManager({formPath}: MenuItemsManagerProps) {\r\n  const navigate = useNavigate();\r\n  const form = useFormContext();\r\n  const items = useWatch({\r\n    control: form.control,\r\n    name: formPath,\r\n  }) as MenuItemConfig[];\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"flex flex-shrink-0 items-center justify-between gap-16\">\r\n        <Trans message=\"Menu items\" />\r\n        <DialogTrigger\r\n          type=\"popover\"\r\n          placement=\"right\"\r\n          offset={20}\r\n          onClose={(menuItemConfig?: MenuItemConfig) => {\r\n            if (menuItemConfig) {\r\n              form.setValue(formPath, [...items, menuItemConfig], {\r\n                shouldDirty: true,\r\n              });\r\n              navigate(`${items.length}`);\r\n            }\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outline\"\r\n            color=\"primary\"\r\n            size=\"xs\"\r\n            startIcon={<AddIcon />}\r\n          >\r\n            <Trans message=\"Add\" />\r\n          </Button>\r\n          <AddMenuItemDialog />\r\n        </DialogTrigger>\r\n      </div>\r\n      <div className=\"mt-20 flex-shrink-0\">\r\n        {items.map((item, index) => (\r\n          <MenuListItem\r\n            key={item.id}\r\n            item={item}\r\n            items={items}\r\n            index={index}\r\n            onSortEnd={(oldIndex, newIndex) => {\r\n              form.setValue(\r\n                formPath,\r\n                moveItemInNewArray(items, oldIndex, newIndex),\r\n                {shouldDirty: true},\r\n              );\r\n            }}\r\n          />\r\n        ))}\r\n        {!items.length ? (\r\n          <IllustratedMessage\r\n            size=\"xs\"\r\n            className=\"my-40\"\r\n            image={<SvgImage src={dropdownMenu} />}\r\n            title={<Trans message=\"No menu items yet\" />}\r\n            description={\r\n              <Trans message=\"Click “add“ button to start adding links, pages, routes and other items to this menu. \" />\r\n            }\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction DeleteMenuTrigger() {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const menuIndex = parseInt(params.menuIndex!);\r\n\r\n  const form = useFormContext<MenuEditorFormValue>();\r\n  const name = `settings.menus` as 'settings.menus';\r\n  const menus = useWatch({\r\n    control: form.control,\r\n    name,\r\n  });\r\n  const menu = menus[menuIndex];\r\n\r\n  if (!menu) return null;\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          form.setValue(\r\n            name,\r\n            menus.filter((_, i) => i != menuIndex),\r\n            {\r\n              shouldDirty: true,\r\n            },\r\n          );\r\n          navigate('/admin/appearance/menus');\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"danger\"\r\n        size=\"xs\"\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        <Trans message=\"Delete menu\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"Delete menu\" />}\r\n        body={\r\n          <Trans\r\n            message=\"Are you sure you want to delete “:name“?\"\r\n            values={{name: menu.name}}\r\n          />\r\n        }\r\n        confirm={<Trans message=\"Delete\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface MenuListItemProps {\r\n  item: MenuItemConfig;\r\n  items: FieldArrayWithId[];\r\n  index: number;\r\n  onSortEnd: UseSortableProps['onSortEnd'];\r\n}\r\nfunction MenuListItem({item, items, index, onSortEnd}: MenuListItemProps) {\r\n  const ref = useRef<HTMLButtonElement>(null);\r\n  const {sortableProps, dragHandleRef} = useSortable({\r\n    item,\r\n    items,\r\n    type: 'menuEditorSortable',\r\n    ref,\r\n    onSortEnd,\r\n    strategy: 'liveSort',\r\n  });\r\n\r\n  const Icon = item.icon && createSvgIconFromTree(item.icon);\r\n  const iconOnlyLabel = (\r\n    <div className=\"flex items-center gap-4 text-xs text-muted\">\r\n      {Icon && <Icon size=\"sm\" />}\r\n      (<Trans message=\"No label...\" />)\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppearanceButton\r\n        elementType={Link}\r\n        to={`${index}`}\r\n        ref={ref}\r\n        {...sortableProps}\r\n      >\r\n        <div className=\"flex items-center gap-10\">\r\n          <IconButton ref={dragHandleRef} size=\"sm\">\r\n            <DragIndicatorIcon className=\"text-muted hover:cursor-move\" />\r\n          </IconButton>\r\n          <div>{item.label || iconOnlyLabel}</div>\r\n        </div>\r\n      </AppearanceButton>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useControlledState} from '@react-stately/utils';\r\nimport React, {Fragment, useState} from 'react';\r\nimport {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport clsx from 'clsx';\r\nimport {produce} from 'immer';\r\nimport {Permission, PermissionRestriction} from '../permission';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {List, ListItem} from '@ui/list/list';\r\nimport {Switch} from '@ui/forms/toggle/switch';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {DoneAllIcon} from '@ui/icons/material/DoneAll';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {ucFirst} from '@ui/utils/string/uc-first';\r\n\r\ninterface PermissionSelectorProps {\r\n  value?: Permission[];\r\n  onChange?: (value: Permission[]) => void;\r\n  valueListKey?: 'permissions' | 'workspacePermissions';\r\n}\r\nexport const PermissionSelector = React.forwardRef<\r\n  HTMLDivElement,\r\n  PermissionSelectorProps\r\n>(({valueListKey = 'permissions', ...props}, ref) => {\r\n  const {data} = useValueLists([valueListKey]);\r\n  const permissions = data?.permissions || data?.workspacePermissions;\r\n\r\n  const [value, setValue] = useControlledState(props.value, [], props.onChange);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n\r\n  if (!permissions) return null;\r\n\r\n  const groupedPermissions = buildPermissionList(\r\n    permissions,\r\n    value,\r\n    showAdvanced,\r\n  );\r\n\r\n  const onRestrictionChange = (newPermission: Permission) => {\r\n    const newValue = [...value];\r\n    const index = newValue.findIndex(p => p.id === newPermission.id);\r\n    if (index > -1) {\r\n      newValue.splice(index, 1, newPermission);\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Accordion variant=\"outline\" ref={ref}>\r\n        {groupedPermissions.map(({groupName, items, anyChecked}) => (\r\n          <AccordionItem\r\n            label={<Trans message={prettyName(groupName)} />}\r\n            key={groupName}\r\n            startIcon={anyChecked ? <DoneAllIcon size=\"sm\" /> : undefined}\r\n          >\r\n            <List>\r\n              {items.map(permission => {\r\n                const index = value.findIndex(v => v.id === permission.id);\r\n                const isChecked = index > -1;\r\n\r\n                return (\r\n                  <div key={permission.id}>\r\n                    <ListItem\r\n                      onSelected={() => {\r\n                        if (isChecked) {\r\n                          const newValue = [...value];\r\n                          newValue.splice(index, 1);\r\n                          setValue(newValue);\r\n                        } else {\r\n                          setValue([...value, permission]);\r\n                        }\r\n                      }}\r\n                      endSection={\r\n                        <Switch\r\n                          tabIndex={-1}\r\n                          checked={isChecked}\r\n                          onChange={() => {}}\r\n                        />\r\n                      }\r\n                      description={<Trans message={permission.description} />}\r\n                    >\r\n                      <Trans\r\n                        message={permission.display_name || permission.name}\r\n                      />\r\n                    </ListItem>\r\n                    {isChecked && (\r\n                      <Restrictions\r\n                        permission={permission}\r\n                        onChange={onRestrictionChange}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </List>\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n      <Switch\r\n        className=\"mt-30\"\r\n        checked={showAdvanced}\r\n        onChange={e => {\r\n          setShowAdvanced(e.target.checked);\r\n        }}\r\n      >\r\n        <Trans message=\"Show advanced permissions\" />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n});\r\n\r\ninterface RestrictionsProps {\r\n  permission: Permission;\r\n  onChange?: (newPermission: Permission) => void;\r\n}\r\nfunction Restrictions({permission, onChange}: RestrictionsProps) {\r\n  if (!permission?.restrictions?.length) return null;\r\n\r\n  const setRestrictionValue = (\r\n    name: string,\r\n    value: PermissionRestriction['value'],\r\n  ) => {\r\n    const nextState = produce(permission, draftState => {\r\n      const restriction = draftState.restrictions.find(r => r.name === name);\r\n      if (restriction) {\r\n        restriction.value = value;\r\n      }\r\n    });\r\n    onChange?.(nextState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-40 py-20\">\r\n      {permission.restrictions.map((restriction, index) => {\r\n        const isLast = index === permission.restrictions.length - 1;\r\n\r\n        const name = <Trans message={prettyName(restriction.name)} />;\r\n        const description = restriction.description ? (\r\n          <Trans message={restriction.description} />\r\n        ) : undefined;\r\n\r\n        if (restriction.type === 'bool') {\r\n          return (\r\n            <Switch\r\n              description={description}\r\n              key={restriction.name}\r\n              className={clsx(!isLast && 'mb-30')}\r\n              checked={Boolean(restriction.value)}\r\n              onChange={e => {\r\n                setRestrictionValue(restriction.name, e.target.checked);\r\n              }}\r\n            >\r\n              {name}\r\n            </Switch>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <TextField\r\n            size=\"sm\"\r\n            label={name}\r\n            description={description}\r\n            type=\"number\"\r\n            key={restriction.name}\r\n            className={clsx(!isLast && 'mb-30')}\r\n            value={(restriction.value as string) || ''}\r\n            onChange={e => {\r\n              setRestrictionValue(\r\n                restriction.name,\r\n                e.target.value === '' ? undefined : parseInt(e.target.value),\r\n              );\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport type FormChipFieldProps = PermissionSelectorProps & {\r\n  name: string;\r\n};\r\nexport function FormPermissionSelector(props: FormChipFieldProps) {\r\n  const {\r\n    field: {onChange, value = [], ref},\r\n  } = useController({\r\n    name: props.name,\r\n  });\r\n\r\n  const formProps: Partial<PermissionSelectorProps> = {\r\n    onChange,\r\n    value,\r\n  };\r\n\r\n  return <PermissionSelector ref={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n\r\nexport const prettyName = (name: string) => {\r\n  return ucFirst(name.replace('_', ' '));\r\n};\r\n\r\ninterface PermissionGroup {\r\n  groupName: string;\r\n  anyChecked: boolean;\r\n  items: Permission[];\r\n}\r\n\r\n// merge \"restrictions\" from selected value into all permissions to make\r\n// it easier to bind restriction values to form inputs\r\nexport function buildPermissionList(\r\n  allPermissions: Permission[],\r\n  selectedPermissions: Permission[],\r\n  showAdvanced: boolean,\r\n) {\r\n  const groupedPermissions: PermissionGroup[] = [];\r\n\r\n  allPermissions.forEach(permission => {\r\n    const index = selectedPermissions.findIndex(p => p.id === permission.id);\r\n    if (!showAdvanced && permission.advanced) return;\r\n\r\n    let group: PermissionGroup | undefined = groupedPermissions.find(\r\n      g => g.groupName === permission.group,\r\n    );\r\n    if (!group) {\r\n      group = {groupName: permission.group, anyChecked: false, items: []};\r\n      groupedPermissions.push(group);\r\n    }\r\n\r\n    if (index > -1) {\r\n      const mergedPermission = {\r\n        ...permission,\r\n        restrictions: mergeRestrictions(\r\n          permission.restrictions,\r\n          selectedPermissions[index].restrictions,\r\n        ),\r\n      };\r\n      group.anyChecked = true;\r\n      group.items.push(mergedPermission);\r\n    } else {\r\n      group.items.push(permission);\r\n    }\r\n  });\r\n\r\n  return groupedPermissions;\r\n}\r\n\r\nfunction mergeRestrictions(\r\n  allRestrictions: PermissionRestriction[],\r\n  selectedRestrictions: PermissionRestriction[],\r\n): PermissionRestriction[] {\r\n  return allRestrictions?.map(restriction => {\r\n    const selected = selectedRestrictions.find(\r\n      r => r.name === restriction.name,\r\n    );\r\n    if (selected) {\r\n      return {...restriction, value: selected.value};\r\n    } else {\r\n      return restriction;\r\n    }\r\n  });\r\n}\r\n","export const iconGridStyle = {\r\n  grid: 'flex flex-wrap gap-24',\r\n  button:\r\n    'flex flex-col items-center rounded hover:bg-hover h-90 aspect-square',\r\n};\r\n","import React, {Suspense} from 'react';\r\nimport {iconGridStyle} from '@common/ui/icon-picker/icon-grid-style';\r\nimport {Skeleton} from '@ui/skeleton/skeleton';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {IconTree} from '@ui/icons/create-svg-icon';\r\n\r\nconst skeletons = [...Array(60).keys()];\r\n\r\nconst IconList = React.lazy(() => import('./icon-list'));\r\n\r\ninterface IconListProps {\r\n  onIconSelected: (icon: IconTree[] | null) => void;\r\n}\r\nexport default function IconPicker({onIconSelected}: IconListProps) {\r\n  const {trans} = useTrans();\r\n  const [value, setValue] = React.useState('');\r\n\r\n  return (\r\n    <div className=\"py-4\">\r\n      <TextField\r\n        className=\"mb-20\"\r\n        value={value}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n        }}\r\n        placeholder={trans({message: 'Search icons...'})}\r\n      />\r\n      <AnimatePresence mode=\"wait\">\r\n        <Suspense\r\n          fallback={\r\n            <m.div {...opacityAnimation} className={iconGridStyle.grid}>\r\n              {skeletons.map((_, index) => (\r\n                <div className={iconGridStyle.button} key={index}>\r\n                  <Skeleton variant=\"rect\" />\r\n                </div>\r\n              ))}\r\n            </m.div>\r\n          }\r\n        >\r\n          <m.div {...opacityAnimation} className={iconGridStyle.grid}>\r\n            <IconList searchQuery={value} onIconSelected={onIconSelected} />\r\n          </m.div>\r\n        </Suspense>\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport IconPicker from './icon-picker';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\n\r\nexport function IconPickerDialog() {\r\n  return (\r\n    <Dialog size=\"w-850\" className=\"min-h-dialog\">\r\n      <DialogHeader>\r\n        <Trans message=\"Select icon\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <IconPickerWrapper />\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction IconPickerWrapper() {\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <IconPicker\r\n      onIconSelected={value => {\r\n        close(value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {Fragment, useEffect, useMemo} from 'react';\r\nimport {\r\n  buildPermissionList,\r\n  prettyName,\r\n} from '@common/auth/ui/permission-selector';\r\nimport {Section} from '@ui/forms/listbox/section';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {useAvailableRoutes} from '../appearance/sections/menus/hooks/available-routes';\r\nimport {ButtonBaseProps} from '@ui/buttons/button-base';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {IconPickerDialog} from '../../ui/icon-picker/icon-picker-dialog';\r\nimport {message} from '@ui/i18n/message';\r\nimport {usePrevious} from '@ui/utils/hooks/use-previous';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {MenuItemConfig} from '@common/menus/menu-config';\r\nimport {createSvgIconFromTree, IconTree} from '@ui/icons/create-svg-icon';\r\n\r\ninterface NameProps {\r\n  prefixName: (name: string) => string;\r\n}\r\n\r\ninterface MenuItemFormProps {\r\n  formPathPrefix?: string;\r\n  hideRoleAndPermissionFields?: boolean;\r\n}\r\nexport function MenuItemForm({\r\n  formPathPrefix,\r\n  hideRoleAndPermissionFields,\r\n}: MenuItemFormProps) {\r\n  const {trans} = useTrans();\r\n  const prefixName = (name: string): string => {\r\n    return formPathPrefix ? `${formPathPrefix}.${name}` : name;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        className=\"mb-20\"\r\n        name={prefixName('label')}\r\n        label={<Trans message=\"Label\" />}\r\n        placeholder={trans(message('No label...'))}\r\n        startAppend={<IconDialogTrigger prefixName={prefixName} />}\r\n      />\r\n      <DestinationSelector prefixName={prefixName} />\r\n      <TargetSelect prefixName={prefixName} />\r\n      {!hideRoleAndPermissionFields && (\r\n        <Fragment>\r\n          <RoleSelector prefixName={prefixName} />\r\n          <PermissionSelector prefixName={prefixName} />\r\n          <SubscriptionStatusSelector prefixName={prefixName} />\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface IconDialogTriggerProps extends ButtonBaseProps, NameProps {}\r\nfunction IconDialogTrigger({\r\n  prefixName,\r\n  ...buttonProps\r\n}: IconDialogTriggerProps) {\r\n  const {watch, setValue} = useFormContext<MenuItemConfig>();\r\n  const fieldName = prefixName('icon') as 'icon';\r\n  const watchedItemIcon = watch(fieldName);\r\n  const Icon = watchedItemIcon && createSvgIconFromTree(watchedItemIcon);\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={(iconTree?: IconTree[] | null) => {\r\n        // null will be set explicitly if icon is cleared via icon picker\r\n        if (iconTree || iconTree === null) {\r\n          setValue(fieldName, iconTree, {\r\n            shouldDirty: true,\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <IconButton\r\n        className=\"text-muted icon-sm\"\r\n        variant=\"outline\"\r\n        size=\"md\"\r\n        {...buttonProps}\r\n      >\r\n        {Icon ? <Icon /> : <EditIcon />}\r\n      </IconButton>\r\n      <IconPickerDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction DestinationSelector({prefixName}: NameProps) {\r\n  const form = useFormContext<MenuItemConfig>();\r\n  const currentType = form.watch(prefixName('type') as 'type');\r\n  const previousType = usePrevious(currentType);\r\n  const {data} = useValueLists(['menuItemCategories']);\r\n  const categories = data?.menuItemCategories || [];\r\n  const selectedCategory = categories.find(c => c.type === currentType);\r\n  const {trans} = useTrans();\r\n  const routeItems = useAvailableRoutes();\r\n\r\n  // clear \"action\" field when \"type\" field changes\r\n  useEffect(() => {\r\n    if (previousType && previousType !== currentType) {\r\n      form.setValue(prefixName('action') as 'action', '');\r\n    }\r\n  }, [currentType, previousType, form, prefixName]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormSelect\r\n        className=\"mb-20\"\r\n        name={prefixName('type')}\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Type\" />}\r\n      >\r\n        <Option value=\"link\">\r\n          <Trans message=\"Custom link\" />\r\n        </Option>\r\n        <Option value=\"route\">\r\n          <Trans message=\"Site page\" />\r\n        </Option>\r\n        {categories.map(category => (\r\n          <Option key={category.type} value={category.type}>\r\n            {category.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      {currentType === 'link' && (\r\n        <FormTextField\r\n          className=\"mb-20\"\r\n          required\r\n          type=\"url\"\r\n          name={prefixName('action')}\r\n          placeholder={trans({message: 'Enter a url...'})}\r\n          label={<Trans message=\"Url\" />}\r\n        />\r\n      )}\r\n      {currentType === 'route' && (\r\n        <FormSelect\r\n          className=\"mb-20\"\r\n          required\r\n          items={routeItems}\r\n          name={prefixName('action')}\r\n          label={<Trans message=\"Page\" />}\r\n          searchPlaceholder={trans(message('Search pages'))}\r\n          showSearchField\r\n          selectionMode=\"single\"\r\n        >\r\n          {item => (\r\n            <Item value={item.id} key={item.id}>\r\n              {item.label}\r\n            </Item>\r\n          )}\r\n        </FormSelect>\r\n      )}\r\n      {selectedCategory && (\r\n        <FormSelect\r\n          className=\"mb-20\"\r\n          required\r\n          items={selectedCategory.items}\r\n          name={prefixName('action')}\r\n          showSearchField\r\n          searchPlaceholder={trans(message('Search...'))}\r\n          selectionMode=\"single\"\r\n          label={<Trans message={selectedCategory.name} />}\r\n        >\r\n          {item => (\r\n            <Item value={item.action}>\r\n              <Trans message={item.label} />\r\n            </Item>\r\n          )}\r\n        </FormSelect>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction RoleSelector({prefixName}: NameProps) {\r\n  const {data} = useValueLists(['roles', 'permissions']);\r\n  const roles = data?.roles || [];\r\n  const {trans} = useTrans();\r\n\r\n  return (\r\n    <FormChipField\r\n      className=\"my-20\"\r\n      placeholder={trans({message: 'Add role...'})}\r\n      label={<Trans message=\"Only show if user has role\" />}\r\n      name={prefixName('roles')}\r\n      chipSize=\"sm\"\r\n      suggestions={roles}\r\n      valueKey=\"id\"\r\n      displayWith={c => roles.find(r => r.id === c.id)?.name}\r\n    >\r\n      {role => (\r\n        <Item value={role.id} key={role.id} capitalizeFirst>\r\n          <Trans message={role.name} />\r\n        </Item>\r\n      )}\r\n    </FormChipField>\r\n  );\r\n}\r\n\r\nfunction PermissionSelector({prefixName}: NameProps) {\r\n  const {data} = useValueLists(['roles', 'permissions']);\r\n  const {trans} = useTrans();\r\n\r\n  const groupedPermissions = useMemo(() => {\r\n    return buildPermissionList(data?.permissions || [], [], false);\r\n  }, [data?.permissions]);\r\n\r\n  return (\r\n    <FormChipField\r\n      label={<Trans message=\"Only show if user has permissions\" />}\r\n      placeholder={trans({message: 'Add permission...'})}\r\n      chipSize=\"sm\"\r\n      suggestions={groupedPermissions}\r\n      name={prefixName('permissions')}\r\n      valueKey=\"name\"\r\n    >\r\n      {({groupName, items}) => (\r\n        <Section label={prettyName(groupName)} key={groupName}>\r\n          {items.map(permission => (\r\n            <Item\r\n              key={permission.name}\r\n              value={permission.name}\r\n              description={<Trans message={permission.description} />}\r\n            >\r\n              <Trans message={permission.display_name || permission.name} />\r\n            </Item>\r\n          ))}\r\n        </Section>\r\n      )}\r\n    </FormChipField>\r\n  );\r\n}\r\n\r\nfunction SubscriptionStatusSelector({prefixName}: NameProps) {\r\n  const {billing} = useSettings();\r\n  if (!billing.enable) return null;\r\n  return (\r\n    <FormSelect\r\n      selectionMode=\"single\"\r\n      className=\"mt-20\"\r\n      label={<Trans message=\"Subscription status\" />}\r\n      name={prefixName('subscriptionStatus')}\r\n    >\r\n      <Item value=\"subscribed\">\r\n        <Trans message=\"Only show if user is subscribed\" />\r\n      </Item>\r\n      <Item value=\"unsubscribed\">\r\n        <Trans message=\"Only show if user is not subscribed\" />\r\n      </Item>\r\n      <Item value={null}>\r\n        <Trans message=\"Always show\" />\r\n      </Item>\r\n    </FormSelect>\r\n  );\r\n}\r\n\r\nfunction TargetSelect({prefixName}: NameProps) {\r\n  return (\r\n    <FormSelect\r\n      className=\"mt-20\"\r\n      selectionMode=\"single\"\r\n      name={prefixName('target')}\r\n      label={<Trans message=\"Open link in\" />}\r\n    >\r\n      <Option value=\"_self\">\r\n        <Trans message=\"Same window\" />\r\n      </Option>\r\n      <Option value=\"_blank\">\r\n        <Trans message=\"New window\" />\r\n      </Option>\r\n    </FormSelect>\r\n  );\r\n}\r\n","import {useFieldArray, useFormContext} from 'react-hook-form';\r\nimport {Fragment, useEffect} from 'react';\r\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {DeleteIcon} from '@ui/icons/material/Delete';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {MenuItemForm} from '@common/admin/menus/menu-item-form';\r\nimport {useParams} from 'react-router';\r\nimport {MenuItemConfig} from '@common/menus/menu-config';\r\n\r\nexport function AppearanceMenuItemEditor() {\r\n  const {menuIndex, menuItemIndex} = useParams();\r\n  return (\r\n    <MenuItemEditor\r\n      itemsPath={`settings.menus.${menuIndex}.items`}\r\n      itemIndex={menuItemIndex!}\r\n    />\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  itemsPath: string;\r\n  itemIndex: number | string;\r\n}\r\nexport function MenuItemEditor({itemsPath, itemIndex}: Props) {\r\n  const navigate = useNavigate();\r\n  const {getValues} = useFormContext();\r\n  const item = getValues(`${itemsPath}.${itemIndex}`);\r\n\r\n  // go to menu editor, if menu item can't be found\r\n  useEffect(() => {\r\n    if (!item) {\r\n      navigate(`..`, {relative: 'path', replace: true});\r\n    } else {\r\n      appearanceState().preview.setHighlight(\r\n        `[data-menu-item-id=\"${item.id}\"]`,\r\n      );\r\n    }\r\n  }, [navigate, item]);\r\n\r\n  // only render form when menu and item are available to avoid issues with hook form default values\r\n  if (!item) {\r\n    return null;\r\n  }\r\n\r\n  return <MenuItemEditorSection itemsPath={itemsPath} itemIndex={itemIndex} />;\r\n}\r\n\r\nfunction MenuItemEditorSection({itemsPath, itemIndex}: Props) {\r\n  return (\r\n    <Fragment>\r\n      <MenuItemForm formPathPrefix={`${itemsPath}.${itemIndex}`} />\r\n      <div className=\"mt-40 text-right\">\r\n        <DeleteItemTrigger itemsPath={itemsPath} itemIndex={itemIndex} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction DeleteItemTrigger({itemsPath, itemIndex}: Props) {\r\n  const navigate = useNavigate();\r\n  const {fields} = useFieldArray({\r\n    name: itemsPath,\r\n  });\r\n  const {setValue, getValues} = useFormContext();\r\n\r\n  const item = fields[+itemIndex] as MenuItemConfig;\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          if (itemIndex) {\r\n            const currentItems = getValues(itemsPath) as MenuItemConfig[];\r\n            setValue(\r\n              itemsPath,\r\n              currentItems.filter((_, i) => i !== +itemIndex),\r\n              {shouldDirty: true},\r\n            );\r\n            navigate(`..`, {relative: 'path', replace: true});\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"danger\"\r\n        size=\"xs\"\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        <Trans message=\"Delete this item\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"Delete item\" />}\r\n        body={\r\n          <Trans\r\n            message=\"Are you sure you want to delete “:name“?\"\r\n            values={{name: item.label}}\r\n          />\r\n        }\r\n        confirm={<Trans message=\"Delete\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {AppearanceEditorValues} from '@common/admin/appearance/appearance-store';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DeepPartial} from 'utility-types';\r\nimport {FetchAppearanceValuesResponse} from '@common/admin/appearance/requests/use-appearance-editor-values';\r\n\r\nexport const saveAppearanceChangesMutationKey = ['appearance-editor-save'];\r\n\r\nexport function useSaveAppearanceChanges() {\r\n  return useMutation({\r\n    mutationKey: saveAppearanceChangesMutationKey,\r\n    mutationFn: (values: DeepPartial<AppearanceEditorValues>) => {\r\n      return saveChanges(values);\r\n    },\r\n    onSuccess: async response => {\r\n      queryClient.setQueryData(['admin/appearance/values'], response);\r\n      toast(message('Changes saved'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction saveChanges(changes: DeepPartial<AppearanceEditorValues>) {\r\n  return apiClient\r\n    .post<FetchAppearanceValuesResponse>(`admin/appearance`, {changes})\r\n    .then(r => r.data);\r\n}\r\n","import {useBlocker} from 'react-router';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useEffect} from 'react';\r\n\r\ninterface Props {\r\n  isBlocked: boolean;\r\n  allowedPath?: string;\r\n}\r\nexport function BlockerDialog({isBlocked, allowedPath}: Props) {\r\n  const {state, reset, proceed} = useBlocker(({nextLocation}) => {\r\n    return (\r\n      isBlocked &&\r\n      // only block navigation if specified path is not within next location\r\n      (!allowedPath || !nextLocation.pathname.includes(allowedPath))\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\r\n      if (isBlocked) {\r\n        e.preventDefault();\r\n        e.returnValue = true;\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\r\n  }, [isBlocked]);\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      isOpen={state === 'blocked'}\r\n      onClose={isConfirmed => {\r\n        if (state !== 'blocked') return;\r\n        if (isConfirmed) {\r\n          proceed();\r\n        } else {\r\n          reset();\r\n        }\r\n      }}\r\n    >\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"You have unsaved changes\" />}\r\n        body={\r\n          <Trans message=\"Your changes will be lost if you continue. Are you sure you want to discard them?\" />\r\n        }\r\n        close={<Trans message=\"Stay here\" />}\r\n        confirm={<Trans message=\"Discard changes\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {Fragment, ReactElement, ReactNode, useEffect} from 'react';\r\nimport {Form} from '@ui/forms/form';\r\nimport {UseFormReturn, useFormState} from 'react-hook-form';\r\nimport {\r\n  appearanceState,\r\n  useAppearanceStore,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {\r\n  saveAppearanceChangesMutationKey,\r\n  useSaveAppearanceChanges,\r\n} from '@common/admin/appearance/requests/use-save-appearance-editor-changes';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Link, useLocation} from 'react-router';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useIsMutating} from '@tanstack/react-query';\r\nimport {BlockerDialog} from '@ui/overlays/dialog/blocker-dialog';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  breadcrumb: ReactElement;\r\n  form: UseFormReturn<any>;\r\n  blockerAllowedPath?: string;\r\n}\r\nexport function AppearanceEditorForm({\r\n  children,\r\n  breadcrumb,\r\n  form,\r\n  blockerAllowedPath,\r\n}: Props) {\r\n  const {isDirty} = useFormState({control: form.control});\r\n\r\n  useEffect(() => {\r\n    appearanceState().setIsDirty(isDirty);\r\n    return () => appearanceState().setIsDirty(false);\r\n  }, [isDirty]);\r\n\r\n  useEffect(() => {\r\n    const subscription = form.watch(values => {\r\n      appearanceState().preview.setValues(values);\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, [form]);\r\n\r\n  const saveChanges = useSaveAppearanceChanges();\r\n  return (\r\n    <Fragment>\r\n      <AppearanceEditorLayout breadcrumb={breadcrumb}>\r\n        <FileUploadProvider>\r\n          <Form\r\n            className=\"h-full flex-auto\"\r\n            id=\"appearance-editor\"\r\n            form={form}\r\n            onSubmit={values => {\r\n              saveChanges.mutate(values, {\r\n                onSuccess: () => form.reset(values),\r\n              });\r\n            }}\r\n          >\r\n            {children}\r\n          </Form>\r\n        </FileUploadProvider>\r\n      </AppearanceEditorLayout>\r\n      <BlockerDialog isBlocked={isDirty} allowedPath={blockerAllowedPath} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface AppearanceEditorLayoutProps {\r\n  breadcrumb?: ReactNode;\r\n  children: ReactNode;\r\n}\r\nexport function AppearanceEditorLayout({\r\n  breadcrumb,\r\n  children,\r\n}: AppearanceEditorLayoutProps) {\r\n  return (\r\n    <div className=\"flex h-full flex-col\">\r\n      <AppearanceEditorHeader />\r\n      {breadcrumb}\r\n      <div className=\"flex-auto overflow-y-auto\">\r\n        <div className=\"flex h-full flex-col px-14 py-20\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AppearanceEditorHeader() {\r\n  const {state} = useLocation();\r\n  const isSaving =\r\n    useIsMutating({\r\n      mutationKey: saveAppearanceChangesMutationKey,\r\n    }) > 0;\r\n  const isDirty = useAppearanceStore(s => s.isDirty);\r\n  return (\r\n    <div className=\"flex h-50 flex-shrink-0 items-center border-b pr-10\">\r\n      <IconButton\r\n        border=\"border-r\"\r\n        className=\"text-muted\"\r\n        elementType={Link}\r\n        to={state?.prevPath || '/admin'}\r\n        replace\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <div className=\"pl-10\">\r\n        <Trans message=\"Appearance editor\" />\r\n      </div>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        className=\"ml-auto block\"\r\n        disabled={!isDirty || isSaving}\r\n        type=\"submit\"\r\n        form=\"appearance-editor\"\r\n      >\r\n        {isDirty ? <Trans message=\"Save\" /> : <Trans message=\"Saved\" />}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import {useLocation, useMatches} from 'react-router';\r\n\r\nexport function usePreviousPath() {\r\n  const location = useLocation();\r\n  return new URL('.', window.origin + location.pathname).pathname.replace(\r\n    /\\/$/,\r\n    '',\r\n  );\r\n}\r\n","import {Link} from 'react-router';\r\nimport clsx from 'clsx';\r\nimport React, {Children, Fragment, ReactElement, ReactNode} from 'react';\r\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\r\nimport {usePreviousPath} from '@common/ui/navigation/use-previous-path';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  backLink?: string;\r\n}\r\nexport function AppearanceEditorBreadcrumb({children, backLink}: Props) {\r\n  const childrenArray = Children.toArray(children) as ReactElement[];\r\n  const previousPath = usePreviousPath();\r\n\r\n  const categories = [<Trans key=\"mainLabel\" message=\"Customizing\" />];\r\n  if (childrenArray.length > 1) {\r\n    categories.push(childrenArray[0]);\r\n  }\r\n  const sections =\r\n    childrenArray.length > 1 ? childrenArray.slice(1) : childrenArray;\r\n\r\n  return (\r\n    <div className=\"flex h-60 flex-shrink-0 items-center border-b\">\r\n      <IconButton\r\n        iconSize=\"md\"\r\n        radius=\"rounded-none\"\r\n        className=\"h-full w-50 flex-shrink-0 text-muted\"\r\n        elementType={Link}\r\n        to={backLink ?? previousPath}\r\n      >\r\n        <KeyboardArrowLeftIcon />\r\n      </IconButton>\r\n      <div className=\"min-w-0 border-l p-10\">\r\n        <LabelList items={categories} className=\"text-xs text-muted\" />\r\n        <LabelList items={sections} isEmphasized className=\"mt-2 text-sm\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface LabelListProps {\r\n  items: ReactElement[];\r\n  className: string;\r\n  isEmphasized?: boolean;\r\n}\r\nfunction LabelList({items, className, isEmphasized}: LabelListProps) {\r\n  return (\r\n    <div className={clsx('flex items-center gap-4', className)}>\r\n      {items.map((item, index) => {\r\n        const isLast = items.length - 1 === index;\r\n        return (\r\n          <Fragment key={index}>\r\n            <div\r\n              className={clsx(\r\n                'min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap',\r\n                isLast && isEmphasized && 'text-primary',\r\n              )}\r\n            >\r\n              {item}\r\n            </div>\r\n            {!isLast &&\r\n              (isEmphasized ? (\r\n                <KeyboardArrowRightIcon\r\n                  className=\"flex-shrink-0 text-muted\"\r\n                  size=\"font-inherit\"\r\n                />\r\n              ) : (\r\n                <div>&bull;</div>\r\n              ))}\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import {appearanceState, useAppearanceStore} from '../appearance-store';\r\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {ReactNode} from 'react';\r\nimport {Settings} from '@ui/settings/settings';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\r\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\r\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\r\n\r\ninterface Payload {\r\n  settings: {\r\n    branding: {\r\n      favicon: string;\r\n      logo_light: string;\r\n      logo_dark: string;\r\n      logo_light_mobile: string;\r\n      logo_dark_mobile: string;\r\n      site_description: string;\r\n    };\r\n  };\r\n  appearance: {\r\n    env: {\r\n      app_name: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport function GeneralSection() {\r\n  const values = useAppearanceEditorValues();\r\n  const form = useForm<Payload>({\r\n    defaultValues: {\r\n      settings: {\r\n        branding: {\r\n          favicon: values.settings.branding.favicon,\r\n          logo_light: values.settings.branding.logo_light,\r\n          logo_dark: values.settings.branding.logo_dark,\r\n          logo_light_mobile: values.settings.branding.logo_light_mobile,\r\n          logo_dark_mobile: values.settings.branding.logo_dark_mobile,\r\n          site_description: values.settings.branding.site_description,\r\n        },\r\n      },\r\n      appearance: {\r\n        env: {\r\n          app_name: values.appearance.env.app_name,\r\n        },\r\n      },\r\n    },\r\n  });\r\n  return (\r\n    <AppearanceEditorForm\r\n      form={form}\r\n      breadcrumb={\r\n        <AppearanceEditorBreadcrumb>\r\n          <Trans message=\"General\" />\r\n        </AppearanceEditorBreadcrumb>\r\n      }\r\n    >\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Favicon\" />}\r\n        description={\r\n          <Trans message=\"This will generate different size favicons. Image should be at least 512x512 in size.\" />\r\n        }\r\n        type=\"favicon\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Light logo\" />}\r\n        description={<Trans message=\"Will be used on dark backgrounds.\" />}\r\n        type=\"logo_light\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Dark logo\" />}\r\n        description={\r\n          <Trans message=\"Will be used on light backgrounds. Will default to light logo if left empty.\" />\r\n        }\r\n        type=\"logo_dark\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Mobile light logo\" />}\r\n        description={\r\n          <Trans message=\"Will be used on light backgrounds on mobile. Will default to desktop logo if left empty.\" />\r\n        }\r\n        type=\"logo_light_mobile\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Mobile dark logo\" />}\r\n        description={\r\n          <Trans message=\"Will be used on dark backgrounds on mobile. Will default to desktop if left empty.\" />\r\n        }\r\n        type=\"logo_dark_mobile\"\r\n      />\r\n      <SiteNameTextField />\r\n      <SiteDescriptionTextArea />\r\n    </AppearanceEditorForm>\r\n  );\r\n}\r\n\r\ninterface ImageSelectorProps {\r\n  label: ReactNode;\r\n  description: ReactNode;\r\n  type: keyof Settings['branding'];\r\n}\r\nfunction BrandingImageSelector({label, description, type}: ImageSelectorProps) {\r\n  const defaultValue = useAppearanceStore(\r\n    s => s.defaults?.settings.branding[type],\r\n  );\r\n  return (\r\n    <FormImageSelector\r\n      name={`settings.branding.${type}`}\r\n      className=\"mb-30 border-b pb-30\"\r\n      label={label}\r\n      description={description}\r\n      diskPrefix=\"branding_media\"\r\n      defaultValue={defaultValue}\r\n      onChange={() => {\r\n        appearanceState().preview.setHighlight('[data-logo=\"navbar\"]');\r\n      }}\r\n    />\r\n  );\r\n}\r\nfunction SiteNameTextField() {\r\n  return (\r\n    <FormTextField\r\n      name=\"appearance.env.app_name\"\r\n      required\r\n      className=\"mt-20\"\r\n      label={<Trans message=\"Site name\" />}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SiteDescriptionTextArea() {\r\n  return (\r\n    <FormTextField\r\n      name=\"settings.branding.site_description\"\r\n      className=\"mt-20\"\r\n      inputElementType=\"textarea\"\r\n      rows={4}\r\n      label={<Trans message=\"Site description\" />}\r\n    />\r\n  );\r\n}\r\n","export function randomNumber(min: number = 1, max: number = 10000) {\r\n  const randomBuffer = new Uint32Array(1);\r\n\r\n  window.crypto.getRandomValues(randomBuffer);\r\n\r\n  const number = randomBuffer[0] / (0xffffffff + 1);\r\n\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(number * (max - min + 1)) + min;\r\n}\r\n","import {NavLink, useNavigate} from 'react-router';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {randomNumber} from '@ui/utils/string/random-number';\r\nimport {ThemeEditorFormValue} from '@common/admin/appearance/sections/themes/theme-editor-form';\r\n\r\ninterface Props {\r\n  type: string;\r\n  children?: ReactNode;\r\n  disabled?: boolean;\r\n}\r\nexport function ThemeList({type, children, disabled}: Props) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const {watch, getValues, setValue} = useFormContext<ThemeEditorFormValue>();\r\n\r\n  return (\r\n    <Fragment>\r\n      {children}\r\n      <div className=\"mb-20\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            const lightThemeColors =\r\n              appearanceState().defaults?.appearance.themes.light!;\r\n\r\n            const currentThemes = getValues('appearance.themes');\r\n\r\n            setValue(\r\n              'appearance.themes',\r\n              [\r\n                ...currentThemes,\r\n                {\r\n                  id: randomNumber(),\r\n                  name: trans(message('New theme')),\r\n                  values: lightThemeColors,\r\n                  type,\r\n                },\r\n              ],\r\n              {shouldDirty: true},\r\n            );\r\n\r\n            navigate(`${currentThemes.length}`);\r\n          }}\r\n        >\r\n          <Trans message=\"New theme\" />\r\n        </Button>\r\n      </div>\r\n      {watch('appearance.themes').map((field, index) => (\r\n        <AppearanceButton\r\n          key={field.id}\r\n          to={`${index}`}\r\n          elementType={NavLink}\r\n          disabled={disabled}\r\n        >\r\n          {field.name}\r\n        </AppearanceButton>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, {MutableRefObject, ReactNode, Suspense, useState} from 'react';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport type ReactAce from 'react-ace';\r\n\r\nconst AceEditor = React.lazy(() => import('./ace-editor'));\r\n\r\ninterface TextEditorSourcecodeDialogProps {\r\n  defaultValue: string;\r\n  mode?: 'css' | 'html' | 'php_laravel_blade';\r\n  title: ReactNode;\r\n  onSave?: (value?: string) => void;\r\n  isSaving?: boolean;\r\n  footerStartAction?: ReactNode;\r\n  beautify?: boolean;\r\n  editorRef?: MutableRefObject<ReactAce | null>;\r\n}\r\nexport function AceDialog({\r\n  defaultValue,\r\n  mode = 'html',\r\n  title,\r\n  onSave,\r\n  isSaving,\r\n  footerStartAction,\r\n  beautify,\r\n  editorRef,\r\n}: TextEditorSourcecodeDialogProps) {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const [isValid, setIsValid] = useState<boolean>(true);\r\n\r\n  return (\r\n    <Dialog size=\"fullscreen\" className=\"h-full w-full\">\r\n      <DialogHeader>{title}</DialogHeader>\r\n      <DialogBody className=\"relative flex-auto\" padding=\"p-0\">\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"flex h-400 w-full items-center justify-center\">\r\n              <ProgressCircle\r\n                aria-label=\"Loading editor...\"\r\n                isIndeterminate\r\n                size=\"md\"\r\n              />\r\n            </div>\r\n          }\r\n        >\r\n          <AceEditor\r\n            beautify={beautify}\r\n            mode={mode}\r\n            onChange={newValue => setValue(newValue)}\r\n            defaultValue={value || ''}\r\n            onIsValidChange={setIsValid}\r\n            editorRef={editorRef}\r\n          />\r\n        </Suspense>\r\n      </DialogBody>\r\n      <Footer\r\n        disabled={!isValid || isSaving}\r\n        value={value}\r\n        onSave={onSave}\r\n        startAction={footerStartAction}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  disabled: boolean | undefined;\r\n  value?: string;\r\n  onSave?: (value?: string) => void;\r\n  startAction?: ReactNode;\r\n}\r\nfunction Footer({disabled, value, onSave, startAction}: FooterProps) {\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <DialogFooter dividerTop startAction={startAction}>\r\n      <Button onClick={() => close()}>\r\n        <Trans message=\"Cancel\" />\r\n      </Button>\r\n      <Button\r\n        disabled={disabled}\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          if (onSave) {\r\n            onSave(value);\r\n          } else {\r\n            close(value);\r\n          }\r\n        }}\r\n      >\r\n        <Trans message=\"Save\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport function useSeoTags(name: string | string[]) {\r\n  return useQuery({\r\n    queryKey: ['admin', 'seo-tags', name],\r\n    queryFn: () => fetchTags(name),\r\n  });\r\n}\r\n\r\nfunction fetchTags(name: string | string[]) {\r\n  return apiClient\r\n    .get<\r\n      Record<\r\n        string,\r\n        {\r\n          custom: string | null;\r\n          original: string;\r\n        }\r\n      >\r\n    >(`admin/appearance/seo-tags/${name}`)\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useUpdateSeoTags(name: string) {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: (payload: {tags: string}) => updateTags(name, payload.tags),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: ['admin', 'seo-tags', name],\r\n      });\r\n      toast(message('Updated SEO tags'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction updateTags(name: string, tags: string): Promise<Response> {\r\n  return apiClient\r\n    .put(`admin/appearance/seo-tags/${name}`, {tags})\r\n    .then(r => r.data);\r\n}\r\n","import {Fragment, useRef} from 'react';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\r\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\r\nimport {SeoSettingsSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {useSeoTags} from '@common/admin/appearance/sections/seo/use-seo-tags';\r\nimport {useUpdateSeoTags} from '@common/admin/appearance/sections/seo/use-update-seo-tags';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\r\nimport {Button} from '@ui/buttons/button';\r\nimport type ReactAce from 'react-ace';\r\nimport {AppearanceEditorLayout} from '@common/admin/appearance/appearance-editor-form';\r\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\r\n\r\nconst pages =\r\n  (\r\n    mergedAppearanceConfig.sections['seo-settings']\r\n      .config as SeoSettingsSectionConfig\r\n  )?.pages || [];\r\n\r\nconst names = pages.map(page => page.key);\r\n\r\nexport function SeoSection() {\r\n  const {isLoading} = useSeoTags(names);\r\n\r\n  return (\r\n    <AppearanceEditorLayout\r\n      breadcrumb={\r\n        <AppearanceEditorBreadcrumb>\r\n          <Trans message=\"SEO\" />\r\n        </AppearanceEditorBreadcrumb>\r\n      }\r\n    >\r\n      {isLoading ? (\r\n        <FullPageLoader />\r\n      ) : (\r\n        <Fragment>\r\n          {pages.map(page => (\r\n            <TagEditorTrigger\r\n              key={page.key}\r\n              label={page.label}\r\n              name={page.key}\r\n            />\r\n          ))}\r\n        </Fragment>\r\n      )}\r\n    </AppearanceEditorLayout>\r\n  );\r\n}\r\n\r\ninterface TagEditorTriggerProps {\r\n  label: MessageDescriptor;\r\n  name: string;\r\n}\r\nfunction TagEditorTrigger({label, name}: TagEditorTriggerProps) {\r\n  const {data, isLoading} = useSeoTags(names);\r\n\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <AppearanceButton disabled={isLoading}>\r\n        <Trans {...label} />\r\n      </AppearanceButton>\r\n      {data ? <TagsEditorDialog name={name} value={data[name]} /> : null}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface TagsEditorDialogProps {\r\n  name: string;\r\n  value: {custom: string | null; original: string};\r\n}\r\nfunction TagsEditorDialog({name, value}: TagsEditorDialogProps) {\r\n  const {close} = useDialogContext();\r\n  const updateTags = useUpdateSeoTags(name);\r\n  const editorRef = useRef<ReactAce | null>(null);\r\n\r\n  const resetButton = (\r\n    <Button\r\n      variant=\"outline\"\r\n      color=\"primary\"\r\n      onClick={() => {\r\n        if (editorRef.current) {\r\n          editorRef.current.editor.setValue(value.original);\r\n        }\r\n      }}\r\n    >\r\n      <Trans message=\"Reset to original\" />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <AceDialog\r\n      mode=\"php_laravel_blade\"\r\n      title={<Trans message=\"Edit SEO meta tags\" />}\r\n      footerStartAction={resetButton}\r\n      editorRef={editorRef}\r\n      defaultValue={value.custom || value.original}\r\n      isSaving={updateTags.isPending}\r\n      beautify={false}\r\n      onSave={newValue => {\r\n        if (newValue != null) {\r\n          updateTags.mutate(\r\n            {tags: newValue},\r\n            {\r\n              onSuccess: () => close(),\r\n            },\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useForm, useFormContext} from 'react-hook-form';\r\nimport {\r\n  AppearanceEditorValues,\r\n  appearanceState,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\r\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\r\nimport {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\r\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\r\n\r\ninterface FormValue {\r\n  appearance: {\r\n    custom_code: {\r\n      css: string;\r\n      html: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport function CustomCodeSection() {\r\n  const values = useAppearanceEditorValues();\r\n  const form = useForm<FormValue>({\r\n    defaultValues: {\r\n      appearance: {\r\n        custom_code: {\r\n          css: values.appearance.custom_code.css,\r\n          html: values.appearance.custom_code.html,\r\n        },\r\n      },\r\n    },\r\n  });\r\n  return (\r\n    <AppearanceEditorForm\r\n      form={form}\r\n      breadcrumb={\r\n        <AppearanceEditorBreadcrumb>\r\n          <Trans message=\"Custom code\" />\r\n        </AppearanceEditorBreadcrumb>\r\n      }\r\n    >\r\n      <CustomCodeDialogTrigger mode=\"css\" />\r\n      <CustomCodeDialogTrigger mode=\"html\" />\r\n    </AppearanceEditorForm>\r\n  );\r\n}\r\n\r\ninterface CustomCodeDialogTriggerProps {\r\n  mode: 'html' | 'css';\r\n}\r\nfunction CustomCodeDialogTrigger({mode}: CustomCodeDialogTriggerProps) {\r\n  const {getValues} = useFormContext<AppearanceEditorValues>();\r\n  const {setValue} = useFormContext<AppearanceEditorValues>();\r\n\r\n  const title =\r\n    mode === 'html' ? (\r\n      <Trans message=\"Custom HTML & JavaScript\" />\r\n    ) : (\r\n      <Trans message=\"Custom CSS\" />\r\n    );\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={newValue => {\r\n        if (newValue != null) {\r\n          setValue(`appearance.custom_code.${mode}`, newValue, {\r\n            shouldDirty: true,\r\n          });\r\n          appearanceState().preview.setCustomCode(mode, newValue);\r\n        }\r\n      }}\r\n    >\r\n      <AppearanceButton>{title}</AppearanceButton>\r\n      <AceDialog\r\n        title={title}\r\n        defaultValue={getValues(`appearance.custom_code.${mode}`) || ''}\r\n        mode={mode}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__8acde003__\"","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '@ui/i18n/message';\r\nimport {USER_MODEL} from '@ui/types/user';\r\nimport {SiteConfigContextValue} from '@common/core/settings/site-config-context';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const CustomPageDatatableFilters = (\r\n  config: SiteConfigContextValue,\r\n): BackendFilter[] => {\r\n  const dynamicFilters: BackendFilter[] =\r\n    config.customPages.types.length > 1\r\n      ? [\r\n          {\r\n            control: {\r\n              type: FilterControlType.Select,\r\n              defaultValue: 'default',\r\n              options: config.customPages.types.map(type => ({\r\n                value: type.type,\r\n                label: type.label,\r\n                key: type.type,\r\n              })),\r\n            },\r\n\r\n            key: 'type',\r\n            label: message('Type'),\r\n            description: message('Type of the page'),\r\n            defaultOperator: FilterOperator.eq,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return [\r\n    {\r\n      key: 'user_id',\r\n      label: message('User'),\r\n      description: message('User page was created by'),\r\n      defaultOperator: FilterOperator.eq,\r\n      control: {\r\n        type: FilterControlType.SelectModel,\r\n        model: USER_MODEL,\r\n      },\r\n    },\r\n    ...dynamicFilters,\r\n    createdAtFilter({\r\n      description: message('Date page was created'),\r\n    }),\r\n    updatedAtFilter({\r\n      description: message('Date page was last updated'),\r\n    }),\r\n  ];\r\n};\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Link} from 'react-router';\r\nimport {LinkStyle} from '@ui/buttons/external-link';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport React from 'react';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\n\r\nexport const CustomPageDatatableColumns: ColumnConfig<CustomPage>[] = [\r\n  {\r\n    key: 'slug',\r\n    allowsSorting: true,\r\n    width: 'flex-2 min-w-200',\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Slug\" />,\r\n    body: page => (\r\n      <Link target=\"_blank\" to={`/pages/${page.slug}`} className={LinkStyle}>\r\n        {page.slug}\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    key: 'user_id',\r\n    allowsSorting: true,\r\n    width: 'flex-2 min-w-140',\r\n    header: () => <Trans message=\"Owner\" />,\r\n    body: page =>\r\n      page.user && (\r\n        <NameWithAvatar\r\n          image={page.user.image}\r\n          label={page.user.name}\r\n          description={page.user.email}\r\n        />\r\n      ),\r\n  },\r\n  {\r\n    key: 'type',\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: page => <Trans message={page.type} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: page => <FormattedDate date={page.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-84 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: page => (\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"text-muted\"\r\n        elementType={Link}\r\n        to={`${page.id}/edit`}\r\n      >\r\n        <EditIcon />\r\n      </IconButton>\r\n    ),\r\n  },\r\n];\r\n","import React, {useContext, useMemo} from 'react';\r\nimport {Link} from 'react-router';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport articlesSvg from './articles.svg';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport {CustomPageDatatableFilters} from './custom-page-datatable-filters';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {CustomPageDatatableColumns} from '@common/admin/custom-pages/custom-page-datatable-columns';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\n\r\nexport function CustomPageDatablePage() {\r\n  const config = useContext(SiteConfigContext);\r\n  const filters = useMemo(() => {\r\n    return CustomPageDatatableFilters(config);\r\n  }, [config]);\r\n\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"custom-pages\"\r\n      title={<Trans message=\"Custom pages\" />}\r\n      filters={filters}\r\n      columns={CustomPageDatatableColumns}\r\n      queryParams={{with: 'user'}}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={articlesSvg}\r\n          title={<Trans message=\"No pages have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching pages\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <DataTableAddItemButton elementType={Link} to=\"new\">\r\n      <Trans message=\"New page\" />\r\n    </DataTableAddItemButton>\r\n  );\r\n}\r\n","import {message} from '@ui/i18n/message';\r\nimport {SettingsNavItem} from '@common/admin/settings/settings-nav-config';\r\n\r\nexport const AppSettingsNavConfig: SettingsNavItem[] = [\r\n  {label: message('Drive'), to: 'drive'},\r\n];\r\n","import {AppSettingsNavConfig} from '@app/admin/settings/app-settings-nav-config';\r\nimport {message} from '@ui/i18n/message';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\r\n\r\nexport interface SettingsNavItem {\r\n  label: MessageDescriptor;\r\n  to: string;\r\n  position?: number;\r\n}\r\n\r\nconst filteredSettingsNavConfig: (SettingsNavItem | false)[] = [\r\n  {label: message('General'), to: 'general', position: 1},\r\n  ...AppSettingsNavConfig,\r\n  getBootstrapData().settings.billing.integrated && {\r\n    label: message('Subscriptions'),\r\n    to: 'subscriptions',\r\n    position: 2,\r\n  },\r\n  {label: message('Localization'), to: 'localization', position: 3},\r\n  {\r\n    label: message('Authentication'),\r\n    to: 'authentication',\r\n    position: 4,\r\n  },\r\n  {label: message('Uploading'), to: 'uploading', position: 5},\r\n  {label: message('Outgoing email'), to: 'outgoing-email', position: 6},\r\n  {label: message('Cache'), to: 'cache', position: 7},\r\n  {label: message('Analytics'), to: 'analytics', position: 8},\r\n  {label: message('Logging'), to: 'logging', position: 9},\r\n  {label: message('Queue'), to: 'queue', position: 10},\r\n  {label: message('Recaptcha'), to: 'recaptcha', position: 11},\r\n  {label: message('GDPR'), to: 'gdpr', position: 12},\r\n  {\r\n    label: message('Menus'),\r\n    to: '/admin/appearance/menus',\r\n    position: 13,\r\n  },\r\n  {\r\n    label: message('Seo'),\r\n    to: '/admin/appearance/seo-settings',\r\n    position: 14,\r\n  },\r\n  {\r\n    label: message('Themes'),\r\n    to: '/admin/appearance/themes',\r\n    position: 15,\r\n  },\r\n].filter(Boolean);\r\n\r\nexport const SettingsNavConfig = filteredSettingsNavConfig as SettingsNavItem[];\r\n","import clsx from 'clsx';\r\nimport {NavLink, Outlet, useLocation, useNavigate} from 'react-router';\r\nimport {SettingsNavConfig, SettingsNavItem} from './settings-nav-config';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {Option, Select} from '@ui/forms/select/select';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {useMemo} from 'react';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  navConfig?: SettingsNavItem[];\r\n}\r\nexport function AdminSettingsPage({\r\n  className,\r\n  navConfig: propsNavConfig,\r\n}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  const navConfig = useMemo(() => {\r\n    const config = propsNavConfig ?? SettingsNavConfig;\r\n    return config.sort((a, b) => (a.position ?? 0) - (b.position ?? 0));\r\n  }, [propsNavConfig]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'container mx-auto min-h-full items-start gap-30 p-24 md:flex',\r\n      )}\r\n    >\r\n      <StaticPageTitle>\r\n        <Trans message=\"Settings\" />\r\n      </StaticPageTitle>\r\n      {isMobile ? (\r\n        <MobileNav navConfig={navConfig} />\r\n      ) : (\r\n        <DesktopNav navConfig={navConfig} />\r\n      )}\r\n      <div className=\"relative max-w-500 flex-auto md:px-30\">\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NavProps {\r\n  navConfig: SettingsNavItem[];\r\n}\r\nfunction MobileNav({navConfig}: NavProps) {\r\n  const {pathname} = useLocation();\r\n  const navigate = useNavigate();\r\n  const value = pathname.split('/').pop();\r\n\r\n  return (\r\n    <Select\r\n      minWidth=\"min-w-none\"\r\n      className=\"mb-24 w-full bg\"\r\n      selectionMode=\"single\"\r\n      selectedValue={value}\r\n      onSelectionChange={newPage => {\r\n        navigate(newPage as string, {state: {prevPath: pathname}});\r\n      }}\r\n    >\r\n      {navConfig.map(item => (\r\n        <Option key={item.to as string} value={item.to}>\r\n          <Trans {...item.label} />\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nfunction DesktopNav({navConfig}: NavProps) {\r\n  const {pathname} = useLocation();\r\n  return (\r\n    <div className=\"sticky top-24 w-240 flex-shrink-0\">\r\n      {navConfig.map(item => (\r\n        <NavLink\r\n          key={item.to as string}\r\n          to={item.to}\r\n          state={{prevPath: pathname}}\r\n          className={({isActive}) =>\r\n            clsx(\r\n              'mb-8 block whitespace-nowrap rounded-button p-14 text-sm transition-bg-color',\r\n              isActive\r\n                ? 'bg-primary/6 font-semibold text-primary'\r\n                : 'hover:bg-hover',\r\n            )\r\n          }\r\n        >\r\n          <Trans {...item.label} />\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useGenerateSitemap() {\r\n  return useMutation({\r\n    mutationFn: () => generate(),\r\n    onSuccess: () => {\r\n      toast(message('Sitemap generated'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction generate(): Promise<Response> {\r\n  return apiClient.post('sitemap/generate').then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {FetchAdminSettingsResponse} from '@common/admin/settings/requests/use-admin-settings';\r\nimport {message} from '@ui/i18n/message';\r\n\r\nexport interface AdminSettingsWithFiles {\r\n  files?: Record<string, File>;\r\n  client?: Partial<AdminSettings['client']>;\r\n  server?: Partial<AdminSettings['server']>;\r\n}\r\n\r\nexport function useUpdateAdminSettings(\r\n  form: UseFormReturn<AdminSettingsWithFiles>,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (props: AdminSettingsWithFiles) => updateAdminSettings(props),\r\n    onSuccess: response => {\r\n      toast(message('Settings updated'), {\r\n        position: 'bottom-right',\r\n      });\r\n      return queryClient.setQueryData(['fetchAdminSettings'], response);\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction updateAdminSettings({client, server, files}: AdminSettingsWithFiles) {\r\n  const formData = new FormData();\r\n  if (client) {\r\n    formData.set('client', JSON.stringify(client));\r\n  }\r\n  if (server) {\r\n    formData.set('server', JSON.stringify(server));\r\n  }\r\n  Object.entries(files || {}).forEach(([key, file]) => {\r\n    formData.set(key, file);\r\n  });\r\n  return apiClient\r\n    .post<FetchAdminSettingsResponse>('settings', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","export function SettingsSeparator() {\r\n  return <div className=\"bg-divider-lighter my-30 h-1\" />;\r\n}\r\n","import React from 'react';\r\nimport {Skeleton} from '@ui/skeleton/skeleton';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\nimport {m} from 'framer-motion';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\n\r\nexport function SettingsFormLoadingIndicator() {\r\n  return (\r\n    <m.div className=\"text-sm\" {...opacityAnimation}>\r\n      <div>\r\n        <Skeleton className=\"mb-4 max-w-140\" />\r\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\r\n        <div className=\"mt-10 flex items-center gap-8\">\r\n          <Skeleton variant=\"rect\" size=\"h-20 w-20\" />\r\n          <Skeleton className=\"max-w-64 text-xs\" />\r\n        </div>\r\n      </div>\r\n      <SettingsSeparator />\r\n      <div>\r\n        <Skeleton className=\"mb-4 max-w-140\" />\r\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\r\n        <Skeleton className=\"mt-10 max-w-4/5 text-xs\" />\r\n      </div>\r\n      <SettingsSeparator />\r\n      <div>\r\n        <Skeleton className=\"mb-4 max-w-140\" />\r\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\r\n        <Skeleton className=\"mt-10 max-w-[90%] text-xs\" />\r\n      </div>\r\n      <div>\r\n        <div className=\"mt-20 flex items-center gap-12\">\r\n          <Skeleton variant=\"rect\" size=\"h-20 w-40\" radius=\"rounded-full\" />\r\n          <Skeleton className=\"max-w-140\" />\r\n        </div>\r\n        <Skeleton className=\"mt-10 max-w-240 text-xs\" />\r\n      </div>\r\n      <SettingsSeparator />\r\n      <div>\r\n        <Skeleton variant=\"rect\" size=\"h-30 w-132\" radius=\"rounded-button\" />\r\n        <div className=\"mt-14\">\r\n          <Skeleton className=\"max-w-240\" />\r\n          <Skeleton className=\"max-w-384\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-40\">\r\n        <Skeleton variant=\"rect\" size=\"h-36 w-132\" radius=\"rounded-button\" />\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n","import {FieldErrors, UseFormReturn, useFormState} from 'react-hook-form';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {Form} from '@ui/forms/form';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useUpdateAdminSettings} from '@common/admin/settings/requests/use-update-admin-settings';\r\nimport {BlockerDialog} from '@ui/overlays/dialog/blocker-dialog';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\r\nimport {SettingsFormLoadingIndicator} from '@common/admin/settings/form/settings-form-loading-indicator';\r\n\r\ninterface Props {\r\n  form: UseFormReturn<any>;\r\n  children: ReactNode;\r\n}\r\nexport function AdminSettingsForm({children, form}: Props) {\r\n  const updateSettings = useUpdateAdminSettings(form);\r\n  const {isDirty} = useFormState({control: form.control});\r\n\r\n  return (\r\n    <m.section key=\"settings-form\" {...opacityAnimation}>\r\n      <Form\r\n        form={form}\r\n        onBeforeSubmit={() => {\r\n          // clear group errors, because hook form won't automatically\r\n          // clear errors that are not bound to a specific form field\r\n          const errors = form.formState.errors as FieldErrors<object>;\r\n          const keys = Object.keys(errors).filter(key => {\r\n            return key.endsWith('_group');\r\n          });\r\n          form.clearErrors(keys as any);\r\n        }}\r\n        onSubmit={values => {\r\n          updateSettings.mutate(values, {onSuccess: () => form.reset(values)});\r\n        }}\r\n      >\r\n        {children}\r\n        <div className=\"mt-40\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            startIcon={\r\n              updateSettings.isPending ? (\r\n                <ProgressCircle size=\"xs\" isIndeterminate />\r\n              ) : null\r\n            }\r\n            disabled={updateSettings.isPending || !isDirty}\r\n          >\r\n            <Trans message=\"Save changes\" />\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      <BlockerDialog isBlocked={isDirty} />\r\n    </m.section>\r\n  );\r\n}\r\n\r\ninterface AdminSettingsPageHeaderProps {\r\n  children: (data: AdminSettings) => ReactNode;\r\n  title: ReactNode;\r\n  description: ReactNode;\r\n  headerMargin?: string;\r\n  // this will be used if settings page needs to load some additional data before showing\r\n  isLoading?: boolean;\r\n}\r\nexport function AdminSettingsLayout({\r\n  title,\r\n  description,\r\n  headerMargin = 'mb-40',\r\n  children,\r\n  isLoading,\r\n}: AdminSettingsPageHeaderProps) {\r\n  const {data} = useAdminSettings();\r\n  return (\r\n    <Fragment>\r\n      <div className={headerMargin}>\r\n        <h2 className=\"mb-4 text-xl\">{title}</h2>\r\n        <div className=\"text-sm text-muted\">{description}</div>\r\n      </div>\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        {data && !isLoading ? (\r\n          children(data)\r\n        ) : (\r\n          <SettingsFormLoadingIndicator key=\"settings-skeleton\" />\r\n        )}\r\n      </AnimatePresence>\r\n    </Fragment>\r\n  );\r\n}\r\n","import clsx from 'clsx';\r\nimport {LinkIcon} from '@ui/icons/material/Link';\r\nimport {ExternalLink} from '@ui/buttons/external-link';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\n\r\ninterface LearnMoreLinkProps {\r\n  link: string;\r\n  className?: string;\r\n}\r\nexport function LearnMoreLink({link, className}: LearnMoreLinkProps) {\r\n  const {site} = useSettings();\r\n  if (site.hide_docs_button) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={clsx('flex items-center gap-8', className)}>\r\n      <LinkIcon size=\"sm\" />\r\n      <ExternalLink href={link}>\r\n        <Trans message=\"Learn more\" />\r\n      </ExternalLink>\r\n    </div>\r\n  );\r\n}\r\n","import {useAdminSettings} from '../requests/use-admin-settings';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {ExternalLink} from '@ui/buttons/external-link';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React, {Fragment, useContext} from 'react';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {useValueLists} from '@common/http/value-lists';\r\nimport {useForm, useFormContext} from 'react-hook-form';\r\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/use-update-admin-settings';\r\nimport {useGenerateSitemap} from '@common/admin/settings/requests/use-generate-sitemap';\r\nimport {useBootstrapDataStore} from '@ui/bootstrap-data/bootstrap-data-store';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\r\n\r\nexport function GeneralSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"General\" />}\r\n      description={\r\n        <Trans message=\"Configure site url, homepage, theme and other general settings.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        homepage: {\r\n          type: data.client.homepage?.type ?? 'landingPage',\r\n          value: data.client.homepage?.value ?? '',\r\n        },\r\n        themes: {\r\n          default_id: data.client.themes?.default_id\r\n            ? parseInt(data.client.themes.default_id as string)\r\n            : 0,\r\n          user_change: data.client.themes?.user_change ?? false,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <SiteUrlSection />\r\n      <SettingsSeparator />\r\n      <HomepageSection />\r\n      <SettingsSeparator />\r\n      <ThemeSection />\r\n      <SettingsSeparator />\r\n      <SitemapSection />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction SiteUrlSection() {\r\n  const {data} = useAdminSettings();\r\n\r\n  if (!data) return null;\r\n\r\n  let append = null;\r\n  const server = data!.server;\r\n  const isInvalid = server.newAppUrl && server.newAppUrl !== server.app_url;\r\n  if (isInvalid) {\r\n    append = (\r\n      <div className=\"mt-20 text-sm text-danger\">\r\n        <Trans\r\n          values={{\r\n            baseUrl: server.app_url,\r\n            currentUrl: server.newAppUrl,\r\n            b: chunks => <b>{chunks}</b>,\r\n          }}\r\n          message=\"Base site url is set as <b>:baseUrl</b> in configuration, but current url is <b>:currentUrl</b>. It is recommended to set the primary url you want to use in configuration file and then redirect all other url versions to this primary version via cpanel or .htaccess file.\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <TextField\r\n        readOnly\r\n        invalid={!!isInvalid}\r\n        value={server.app_url}\r\n        label={<Trans message=\"Primary site url\" />}\r\n        description={\r\n          <LearnMoreLink link=\"https://support.vebto.com/hc/articles/35/primary-site-url\" />\r\n        }\r\n      />\r\n      {append}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction HomepageSection() {\r\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\r\n  const {homepage} = useContext(SiteConfigContext);\r\n  const {data} = useValueLists(['menuItemCategories']);\r\n  const selectedType = watch('client.homepage.type');\r\n\r\n  return (\r\n    <div>\r\n      <FormSelect\r\n        name=\"client.homepage.type\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Site home page\" />}\r\n        description={\r\n          <Trans message=\"Which page should be used as site homepage.\" />\r\n        }\r\n      >\r\n        {homepage.options.map(option => (\r\n          <Option key={option.value} value={option.value}>\r\n            <Trans {...option.label} />\r\n          </Option>\r\n        ))}\r\n        {data?.menuItemCategories?.map(category => (\r\n          <Option key={category.type} value={category.type}>\r\n            {category.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      {data?.menuItemCategories?.map(category => {\r\n        return selectedType === category.type ? (\r\n          <FormSelect\r\n            className=\"mt-24\"\r\n            name=\"client.homepage.value\"\r\n            key={category.name}\r\n            selectionMode=\"single\"\r\n            label={\r\n              <Trans message=\"Homepage :name\" values={{name: category.name}} />\r\n            }\r\n          >\r\n            {category.items.map(item => (\r\n              <Option key={item.label} value={`${item.model_id}`}>\r\n                {item.label}\r\n              </Option>\r\n            ))}\r\n          </FormSelect>\r\n        ) : null;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ThemeSection() {\r\n  const themes = useBootstrapDataStore(s => s.data.themes);\r\n  return (\r\n    <Fragment>\r\n      <FormSelect\r\n        className=\"mb-20\"\r\n        name=\"client.themes.default_id\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Default site theme\" />}\r\n        description={\r\n          <Trans message=\"Which theme to use for users that have not chosen a theme manually.\" />\r\n        }\r\n      >\r\n        <Option value={0}>\r\n          <Trans message=\"System\" />\r\n        </Option>\r\n        {themes.map(theme => (\r\n          <Option key={theme.id} value={theme.id}>\r\n            {theme.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      <FormSwitch\r\n        name=\"client.themes.user_change\"\r\n        description={\r\n          <Trans message=\"Allow users to manually change site theme.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Allow theme change\" />\r\n      </FormSwitch>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction SitemapSection() {\r\n  const generateSitemap = useGenerateSitemap();\r\n  const {base_url} = useSettings();\r\n\r\n  const url = `${base_url}/storage/sitemaps/sitemap-index.xml`;\r\n  const link = <ExternalLink href={url}>{url}</ExternalLink>;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n        color=\"primary\"\r\n        disabled={generateSitemap.isPending}\r\n        onClick={() => {\r\n          generateSitemap.mutate();\r\n        }}\r\n      >\r\n        <Trans message=\"Generate sitemap\" />\r\n      </Button>\r\n      <div className=\"mt-14 text-sm text-muted\">\r\n        <Trans\r\n          message=\"Once generated, sitemap url will be: :url\"\r\n          values={{\r\n            url: link,\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\r\n\r\nexport const ColorIcon = createSvgIcon(\r\n  <path\r\n    stroke=\"#E0E0E0\"\r\n    d=\"M24,44c-7.168,0-13-5.816-13-12.971C11,24,24,4,24,4s13,20,13,27.029C37,38.184,31.168,44,24,44z\"\r\n  />,\r\n);\r\n","import {parseColor} from '@react-stately/color';\r\n\r\nexport function colorToThemeValue(color: string): string {\r\n  return parseColor(color)\r\n    .toString('rgb')\r\n    .replace('rgb(', '')\r\n    .replace(')', '')\r\n    .replace(/, ?/g, ' ');\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const TuneIcon = createSvgIcon(\r\n  <path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\" />\r\n, 'TuneOutlined');\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport {useEffect} from 'react';\r\nimport {TuneIcon} from '@ui/icons/material/Tune';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {CssTheme} from '@ui/themes/css-theme';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {AppearanceEditorValues} from '../../appearance-store';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Form} from '@ui/forms/form';\r\nimport {useParams} from 'react-router';\r\n\r\nexport function ThemeSettingsDialogTrigger() {\r\n  const {getValues, setValue} = useFormContext<AppearanceEditorValues>();\r\n  const {themeIndex} = useParams();\r\n  const theme = getValues(`appearance.themes.${+themeIndex!}`);\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={(value?: CssTheme) => {\r\n        if (!value) return;\r\n\r\n        getValues('appearance.themes').forEach((currentTheme, index) => {\r\n          // update changed theme\r\n          if (currentTheme.id === value.id) {\r\n            setValue(`appearance.themes.${index}`, value, {\r\n              shouldDirty: true,\r\n            });\r\n            return;\r\n          }\r\n\r\n          // unset \"default_light\" and \"default_dark\" on other themes\r\n          if (value.default_light) {\r\n            setValue(\r\n              `appearance.themes.${index}`,\r\n              {...currentTheme, default_light: false},\r\n              {shouldDirty: true},\r\n            );\r\n            return;\r\n          }\r\n          if (value.default_dark) {\r\n            setValue(\r\n              `appearance.themes.${index}`,\r\n              {...currentTheme, default_dark: false},\r\n              {shouldDirty: true},\r\n            );\r\n            return;\r\n          }\r\n        });\r\n      }}\r\n    >\r\n      <Button\r\n        size=\"xs\"\r\n        variant=\"outline\"\r\n        color=\"primary\"\r\n        startIcon={<TuneIcon />}\r\n      >\r\n        <Trans message=\"Settings\" />\r\n      </Button>\r\n      <SettingsDialog theme={theme} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface SettingsDialogProps {\r\n  theme: CssTheme;\r\n}\r\nfunction SettingsDialog({theme}: SettingsDialogProps) {\r\n  const form = useForm<CssTheme>({defaultValues: theme});\r\n  const {close, formId} = useDialogContext();\r\n\r\n  useEffect(() => {\r\n    const subscription = form.watch((value, {name}) => {\r\n      // theme can only be set as either light or dark default\r\n      if (name === 'default_light' && value.default_light) {\r\n        form.setValue('default_dark', false);\r\n      }\r\n      if (name === 'default_dark' && value.default_dark) {\r\n        form.setValue('default_light', false);\r\n      }\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, [form]);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Update settings\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            close(values);\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            label={<Trans message=\"Name\" />}\r\n            className=\"mb-30\"\r\n            autoFocus\r\n          />\r\n          <FormSwitch\r\n            name=\"is_dark\"\r\n            className=\"mb-20 border-b pb-20\"\r\n            description={\r\n              <Trans message=\"Whether this theme has light text on dark background.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Dark theme\" />\r\n          </FormSwitch>\r\n          <FormSwitch\r\n            name=\"default_light\"\r\n            className=\"mb-30\"\r\n            description={\r\n              <Trans message=\"When light mode is selected, this theme will be used.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Default for light mode\" />\r\n          </FormSwitch>\r\n          <FormSwitch\r\n            name=\"default_dark\"\r\n            description={\r\n              <Trans message=\"When dark mode is selected, this theme will be used.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Default for dark mode\" />\r\n          </FormSwitch>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={!form.formState.isDirty}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const RestartAltIcon = createSvgIcon(\r\n  <path d=\"M6 13c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91zm14 0c0-4.42-3.58-8-8-8-.06 0-.12.01-.18.01l1.09-1.09L11.5 2.5 8 6l3.5 3.5 1.41-1.41-1.08-1.08c.06 0 .12-.01.17-.01 3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93z\" />\r\n, 'RestartAltOutlined');\r\n","import {Fragment, useState} from 'react';\r\nimport {DeleteIcon} from '@ui/icons/material/Delete';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport {RestartAltIcon} from '@ui/icons/material/RestartAlt';\r\nimport {AppearanceEditorValues, appearanceState} from '../../appearance-store';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {useParams} from 'react-router';\r\n\r\nexport function ThemeMoreOptionsButton() {\r\n  const navigate = useNavigate();\r\n  const {themeIndex} = useParams();\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const {setValue, getValues} = useFormContext<AppearanceEditorValues>();\r\n\r\n  const deleteTheme = () => {\r\n    if (getValues('appearance.themes').length <= 1) {\r\n      toast.danger(message('At least one theme is required'));\r\n      return;\r\n    }\r\n    if (themeIndex) {\r\n      navigate('..', {relative: 'path', replace: true});\r\n      setValue(\r\n        'appearance.themes',\r\n        getValues('appearance.themes').filter((_, i) => i !== +themeIndex),\r\n        {shouldDirty: true},\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MenuTrigger\r\n        onItemSelected={key => {\r\n          if (key === 'delete') {\r\n            setConfirmDialogOpen(true);\r\n          } else if (key === 'reset') {\r\n            const path =\r\n              `appearance.themes.${+themeIndex!}` as 'appearance.themes.0';\r\n            const defaultColors = getValues(`${path}.is_dark`)\r\n              ? appearanceState().defaults!.appearance.themes.dark\r\n              : appearanceState().defaults!.appearance.themes.light;\r\n\r\n            Object.entries(defaultColors).forEach(([colorName, themeValue]) => {\r\n              appearanceState().preview.setThemeValue(colorName, themeValue);\r\n            });\r\n            appearanceState().preview.setThemeFont(null);\r\n\r\n            setValue(`${path}.values`, defaultColors, {\r\n              shouldDirty: true,\r\n            });\r\n            setValue(`${path}.font`, undefined, {\r\n              shouldDirty: true,\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <IconButton size=\"md\" className=\"text-muted\">\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <Menu>\r\n          <MenuItem value=\"reset\" startIcon={<RestartAltIcon />}>\r\n            <Trans message=\"Reset colors\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"delete\" startIcon={<DeleteIcon />}>\r\n            <Trans message=\"Delete\" />\r\n          </MenuItem>\r\n        </Menu>\r\n      </MenuTrigger>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={confirmDialogOpen}\r\n        onClose={isConfirmed => {\r\n          if (isConfirmed) {\r\n            deleteTheme();\r\n          }\r\n          setConfirmDialogOpen(false);\r\n        }}\r\n      >\r\n        <ConfirmationDialog\r\n          isDanger\r\n          title={<Trans message=\"Delete theme\" />}\r\n          body={<Trans message=\"Are you sure you want to delete this theme?\" />}\r\n          confirm={<Trans message=\"Delete\" />}\r\n        />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import e,{useRef as r,useMemo as t,useEffect as n,useState as o,useCallback as a,useLayoutEffect as l}from\"react\";function u(){return(u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function c(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r.indexOf(t=a[n])>=0||(o[t]=e[t]);return o}function i(e){var t=r(e),n=r(function(e){t.current&&t.current(e)});return t.current=e,n.current}var s=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=1),e>t?t:e<r?r:e},f=function(e){return\"touches\"in e},v=function(e){return e&&e.ownerDocument.defaultView||self},d=function(e,r,t){var n=e.getBoundingClientRect(),o=f(r)?function(e,r){for(var t=0;t<e.length;t++)if(e[t].identifier===r)return e[t];return e[0]}(r.touches,t):r;return{left:s((o.pageX-(n.left+v(e).pageXOffset))/n.width),top:s((o.pageY-(n.top+v(e).pageYOffset))/n.height)}},h=function(e){!f(e)&&e.preventDefault()},m=e.memo(function(o){var a=o.onMove,l=o.onKey,s=c(o,[\"onMove\",\"onKey\"]),m=r(null),g=i(a),p=i(l),b=r(null),_=r(!1),x=t(function(){var e=function(e){h(e),(f(e)?e.touches.length>0:e.buttons>0)&&m.current?g(d(m.current,e,b.current)):t(!1)},r=function(){return t(!1)};function t(t){var n=_.current,o=v(m.current),a=t?o.addEventListener:o.removeEventListener;a(n?\"touchmove\":\"mousemove\",e),a(n?\"touchend\":\"mouseup\",r)}return[function(e){var r=e.nativeEvent,n=m.current;if(n&&(h(r),!function(e,r){return r&&!f(e)}(r,_.current)&&n)){if(f(r)){_.current=!0;var o=r.changedTouches||[];o.length&&(b.current=o[0].identifier)}n.focus(),g(d(n,r,b.current)),t(!0)}},function(e){var r=e.which||e.keyCode;r<37||r>40||(e.preventDefault(),p({left:39===r?.05:37===r?-.05:0,top:40===r?.05:38===r?-.05:0}))},t]},[p,g]),C=x[0],E=x[1],H=x[2];return n(function(){return H},[H]),e.createElement(\"div\",u({},s,{onTouchStart:C,onMouseDown:C,className:\"react-colorful__interactive\",ref:m,onKeyDown:E,tabIndex:0,role:\"slider\"}))}),g=function(e){return e.filter(Boolean).join(\" \")},p=function(r){var t=r.color,n=r.left,o=r.top,a=void 0===o?.5:o,l=g([\"react-colorful__pointer\",r.className]);return e.createElement(\"div\",{className:l,style:{top:100*a+\"%\",left:100*n+\"%\"}},e.createElement(\"div\",{className:\"react-colorful__pointer-fill\",style:{backgroundColor:t}}))},b=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=Math.pow(10,r)),Math.round(t*e)/t},_={grad:.9,turn:360,rad:360/(2*Math.PI)},x=function(e){return L(C(e))},C=function(e){return\"#\"===e[0]&&(e=e.substring(1)),e.length<6?{r:parseInt(e[0]+e[0],16),g:parseInt(e[1]+e[1],16),b:parseInt(e[2]+e[2],16),a:4===e.length?b(parseInt(e[3]+e[3],16)/255,2):1}:{r:parseInt(e.substring(0,2),16),g:parseInt(e.substring(2,4),16),b:parseInt(e.substring(4,6),16),a:8===e.length?b(parseInt(e.substring(6,8),16)/255,2):1}},E=function(e,r){return void 0===r&&(r=\"deg\"),Number(e)*(_[r]||1)},H=function(e){var r=/hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?N({h:E(r[1],r[2]),s:Number(r[3]),l:Number(r[4]),a:void 0===r[5]?1:Number(r[5])/(r[6]?100:1)}):{h:0,s:0,v:0,a:1}},M=H,N=function(e){var r=e.s,t=e.l;return{h:e.h,s:(r*=(t<50?t:100-t)/100)>0?2*r/(t+r)*100:0,v:t+r,a:e.a}},w=function(e){return K(I(e))},y=function(e){var r=e.s,t=e.v,n=e.a,o=(200-r)*t/100;return{h:b(e.h),s:b(o>0&&o<200?r*t/100/(o<=100?o:200-o)*100:0),l:b(o/2),a:b(n,2)}},q=function(e){var r=y(e);return\"hsl(\"+r.h+\", \"+r.s+\"%, \"+r.l+\"%)\"},k=function(e){var r=y(e);return\"hsla(\"+r.h+\", \"+r.s+\"%, \"+r.l+\"%, \"+r.a+\")\"},I=function(e){var r=e.h,t=e.s,n=e.v,o=e.a;r=r/360*6,t/=100,n/=100;var a=Math.floor(r),l=n*(1-t),u=n*(1-(r-a)*t),c=n*(1-(1-r+a)*t),i=a%6;return{r:b(255*[n,u,l,l,c,n][i]),g:b(255*[c,n,n,u,l,l][i]),b:b(255*[l,l,c,n,n,u][i]),a:b(o,2)}},O=function(e){var r=/hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?A({h:E(r[1],r[2]),s:Number(r[3]),v:Number(r[4]),a:void 0===r[5]?1:Number(r[5])/(r[6]?100:1)}):{h:0,s:0,v:0,a:1}},j=O,z=function(e){var r=/rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?L({r:Number(r[1])/(r[2]?100/255:1),g:Number(r[3])/(r[4]?100/255:1),b:Number(r[5])/(r[6]?100/255:1),a:void 0===r[7]?1:Number(r[7])/(r[8]?100:1)}):{h:0,s:0,v:0,a:1}},B=z,D=function(e){var r=e.toString(16);return r.length<2?\"0\"+r:r},K=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=o<1?D(b(255*o)):\"\";return\"#\"+D(r)+D(t)+D(n)+a},L=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=Math.max(r,t,n),l=a-Math.min(r,t,n),u=l?a===r?(t-n)/l:a===t?2+(n-r)/l:4+(r-t)/l:0;return{h:b(60*(u<0?u+6:u)),s:b(a?l/a*100:0),v:b(a/255*100),a:o}},A=function(e){return{h:b(e.h),s:b(e.s),v:b(e.v),a:b(e.a,2)}},S=e.memo(function(r){var t=r.hue,n=r.onChange,o=g([\"react-colorful__hue\",r.className]);return e.createElement(\"div\",{className:o},e.createElement(m,{onMove:function(e){n({h:360*e.left})},onKey:function(e){n({h:s(t+360*e.left,0,360)})},\"aria-label\":\"Hue\",\"aria-valuenow\":b(t),\"aria-valuemax\":\"360\",\"aria-valuemin\":\"0\"},e.createElement(p,{className:\"react-colorful__hue-pointer\",left:t/360,color:q({h:t,s:100,v:100,a:1})})))}),T=e.memo(function(r){var t=r.hsva,n=r.onChange,o={backgroundColor:q({h:t.h,s:100,v:100,a:1})};return e.createElement(\"div\",{className:\"react-colorful__saturation\",style:o},e.createElement(m,{onMove:function(e){n({s:100*e.left,v:100-100*e.top})},onKey:function(e){n({s:s(t.s+100*e.left,0,100),v:s(t.v-100*e.top,0,100)})},\"aria-label\":\"Color\",\"aria-valuetext\":\"Saturation \"+b(t.s)+\"%, Brightness \"+b(t.v)+\"%\"},e.createElement(p,{className:\"react-colorful__saturation-pointer\",top:1-t.v/100,left:t.s/100,color:q(t)})))}),F=function(e,r){if(e===r)return!0;for(var t in e)if(e[t]!==r[t])return!1;return!0},P=function(e,r){return e.replace(/\\s/g,\"\")===r.replace(/\\s/g,\"\")},X=function(e,r){return e.toLowerCase()===r.toLowerCase()||F(C(e),C(r))};function Y(e,t,l){var u=i(l),c=o(function(){return e.toHsva(t)}),s=c[0],f=c[1],v=r({color:t,hsva:s});n(function(){if(!e.equal(t,v.current.color)){var r=e.toHsva(t);v.current={hsva:r,color:t},f(r)}},[t,e]),n(function(){var r;F(s,v.current.hsva)||e.equal(r=e.fromHsva(s),v.current.color)||(v.current={hsva:s,color:r},u(r))},[s,e,u]);var d=a(function(e){f(function(r){return Object.assign({},r,e)})},[]);return[s,d]}var R,V=\"undefined\"!=typeof window?l:n,$=function(){return R||(\"undefined\"!=typeof __webpack_nonce__?__webpack_nonce__:void 0)},G=function(e){R=e},J=new Map,Q=function(e){V(function(){var r=e.current?e.current.ownerDocument:document;if(void 0!==r&&!J.has(r)){var t=r.createElement(\"style\");t.innerHTML='.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:\"\";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url(\\'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill-opacity=\".05\"><path d=\"M8 0h8v8H8zM0 8h8v8H0z\"/></svg>\\')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}',J.set(r,t);var n=$();n&&t.setAttribute(\"nonce\",n),r.head.appendChild(t)}},[])},U=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,[\"className\",\"colorModel\",\"color\",\"onChange\"]),f=r(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g([\"react-colorful\",n]);return e.createElement(\"div\",u({},s,{ref:f,className:m}),e.createElement(T,{hsva:d,onChange:h}),e.createElement(S,{hue:d.h,onChange:h,className:\"react-colorful__last-control\"}))},W={defaultColor:\"000\",toHsva:x,fromHsva:function(e){return w({h:e.h,s:e.s,v:e.v,a:1})},equal:X},Z=function(r){return e.createElement(U,u({},r,{colorModel:W}))},ee=function(r){var t=r.className,n=r.hsva,o=r.onChange,a={backgroundImage:\"linear-gradient(90deg, \"+k(Object.assign({},n,{a:0}))+\", \"+k(Object.assign({},n,{a:1}))+\")\"},l=g([\"react-colorful__alpha\",t]),u=b(100*n.a);return e.createElement(\"div\",{className:l},e.createElement(\"div\",{className:\"react-colorful__alpha-gradient\",style:a}),e.createElement(m,{onMove:function(e){o({a:e.left})},onKey:function(e){o({a:s(n.a+e.left)})},\"aria-label\":\"Alpha\",\"aria-valuetext\":u+\"%\",\"aria-valuenow\":u,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\"},e.createElement(p,{className:\"react-colorful__alpha-pointer\",left:n.a,color:k(n)})))},re=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,[\"className\",\"colorModel\",\"color\",\"onChange\"]),f=r(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g([\"react-colorful\",n]);return e.createElement(\"div\",u({},s,{ref:f,className:m}),e.createElement(T,{hsva:d,onChange:h}),e.createElement(S,{hue:d.h,onChange:h}),e.createElement(ee,{hsva:d,onChange:h,className:\"react-colorful__last-control\"}))},te={defaultColor:\"0001\",toHsva:x,fromHsva:w,equal:X},ne=function(r){return e.createElement(re,u({},r,{colorModel:te}))},oe={defaultColor:{h:0,s:0,l:0,a:1},toHsva:N,fromHsva:y,equal:F},ae=function(r){return e.createElement(re,u({},r,{colorModel:oe}))},le={defaultColor:\"hsla(0, 0%, 0%, 1)\",toHsva:H,fromHsva:k,equal:P},ue=function(r){return e.createElement(re,u({},r,{colorModel:le}))},ce={defaultColor:{h:0,s:0,l:0},toHsva:function(e){return N({h:e.h,s:e.s,l:e.l,a:1})},fromHsva:function(e){return{h:(r=y(e)).h,s:r.s,l:r.l};var r},equal:F},ie=function(r){return e.createElement(U,u({},r,{colorModel:ce}))},se={defaultColor:\"hsl(0, 0%, 0%)\",toHsva:M,fromHsva:q,equal:P},fe=function(r){return e.createElement(U,u({},r,{colorModel:se}))},ve={defaultColor:{h:0,s:0,v:0,a:1},toHsva:function(e){return e},fromHsva:A,equal:F},de=function(r){return e.createElement(re,u({},r,{colorModel:ve}))},he={defaultColor:\"hsva(0, 0%, 0%, 1)\",toHsva:O,fromHsva:function(e){var r=A(e);return\"hsva(\"+r.h+\", \"+r.s+\"%, \"+r.v+\"%, \"+r.a+\")\"},equal:P},me=function(r){return e.createElement(re,u({},r,{colorModel:he}))},ge={defaultColor:{h:0,s:0,v:0},toHsva:function(e){return{h:e.h,s:e.s,v:e.v,a:1}},fromHsva:function(e){var r=A(e);return{h:r.h,s:r.s,v:r.v}},equal:F},pe=function(r){return e.createElement(U,u({},r,{colorModel:ge}))},be={defaultColor:\"hsv(0, 0%, 0%)\",toHsva:j,fromHsva:function(e){var r=A(e);return\"hsv(\"+r.h+\", \"+r.s+\"%, \"+r.v+\"%)\"},equal:P},_e=function(r){return e.createElement(U,u({},r,{colorModel:be}))},xe={defaultColor:{r:0,g:0,b:0,a:1},toHsva:L,fromHsva:I,equal:F},Ce=function(r){return e.createElement(re,u({},r,{colorModel:xe}))},Ee={defaultColor:\"rgba(0, 0, 0, 1)\",toHsva:z,fromHsva:function(e){var r=I(e);return\"rgba(\"+r.r+\", \"+r.g+\", \"+r.b+\", \"+r.a+\")\"},equal:P},He=function(r){return e.createElement(re,u({},r,{colorModel:Ee}))},Me={defaultColor:{r:0,g:0,b:0},toHsva:function(e){return L({r:e.r,g:e.g,b:e.b,a:1})},fromHsva:function(e){return{r:(r=I(e)).r,g:r.g,b:r.b};var r},equal:F},Ne=function(r){return e.createElement(U,u({},r,{colorModel:Me}))},we={defaultColor:\"rgb(0, 0, 0)\",toHsva:B,fromHsva:function(e){var r=I(e);return\"rgb(\"+r.r+\", \"+r.g+\", \"+r.b+\")\"},equal:P},ye=function(r){return e.createElement(U,u({},r,{colorModel:we}))},qe=/^#?([0-9A-F]{3,8})$/i,ke=function(r){var t=r.color,l=void 0===t?\"\":t,s=r.onChange,f=r.onBlur,v=r.escape,d=r.validate,h=r.format,m=r.process,g=c(r,[\"color\",\"onChange\",\"onBlur\",\"escape\",\"validate\",\"format\",\"process\"]),p=o(function(){return v(l)}),b=p[0],_=p[1],x=i(s),C=i(f),E=a(function(e){var r=v(e.target.value);_(r),d(r)&&x(m?m(r):r)},[v,m,d,x]),H=a(function(e){d(e.target.value)||_(v(l)),C(e)},[l,v,d,C]);return n(function(){_(v(l))},[l,v]),e.createElement(\"input\",u({},g,{value:h?h(b):b,spellCheck:\"false\",onChange:E,onBlur:H}))},Ie=function(e){return\"#\"+e},Oe=function(r){var t=r.prefixed,n=r.alpha,o=c(r,[\"prefixed\",\"alpha\"]),l=a(function(e){return e.replace(/([^0-9A-F]+)/gi,\"\").substring(0,n?8:6)},[n]),i=a(function(e){return function(e,r){var t=qe.exec(e),n=t?t[1].length:0;return 3===n||6===n||!!r&&4===n||!!r&&8===n}(e,n)},[n]);return e.createElement(ke,u({},o,{escape:l,format:t?Ie:void 0,process:Ie,validate:i}))};export{ne as HexAlphaColorPicker,Oe as HexColorInput,Z as HexColorPicker,ie as HslColorPicker,fe as HslStringColorPicker,ae as HslaColorPicker,ue as HslaStringColorPicker,pe as HsvColorPicker,_e as HsvStringColorPicker,de as HsvaColorPicker,me as HsvaStringColorPicker,Ne as RgbColorPicker,ye as RgbStringColorPicker,Ce as RgbaColorPicker,He as RgbaStringColorPicker,G as setNonce};\n//# sourceMappingURL=index.module.js.map\n","import {message} from '@ui/i18n/message';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\n\r\nexport const ColorPresets: {\r\n  color: string;\r\n  name: MessageDescriptor;\r\n  foreground?: string;\r\n}[] = [\r\n  {\r\n    color: 'rgb(255, 255, 255)',\r\n    name: message('White'),\r\n  },\r\n  {\r\n    color: 'rgb(239,245,245)',\r\n    name: message('Solitude'),\r\n  },\r\n  {\r\n    color: 'rgb(245,213,174)',\r\n    name: message('Wheat'),\r\n  },\r\n  {\r\n    color: 'rgb(253,227,167)',\r\n    name: message('Cape Honey'),\r\n  },\r\n  {\r\n    color: 'rgb(242,222,186)',\r\n    name: message('Milk punch'),\r\n  },\r\n  {\r\n    color: 'rgb(97,118,75)',\r\n    name: message('Dingy'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(4, 147, 114)',\r\n    name: message('Aquamarine'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(222,245,229)',\r\n    name: message('Cosmic Latte'),\r\n  },\r\n  {\r\n    color: 'rgb(233,119,119)',\r\n    name: message('Geraldine'),\r\n    foreground: 'rgb(90,14,14)',\r\n  },\r\n  {\r\n    color: 'rgb(247,164,164)',\r\n    name: message('Sundown'),\r\n  },\r\n  {\r\n    color: 'rgb(30,139,195)',\r\n    name: message('Pelorous'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(142,68,173)',\r\n    name: message('Deep Lilac'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(108,74,182)',\r\n    name: message('Blue marguerite'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(139,126,116)',\r\n    name: message('Americano'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(0,0,0)',\r\n    name: message('Black'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(64,66,88)',\r\n    name: message('Blue zodiac'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(101,100,124)',\r\n    name: message('Comet'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {ButtonBase} from '@ui/buttons/button-base';\r\n\r\ntype Props = {\r\n  onChange?: (e: string) => void;\r\n  value?: string;\r\n  colors: string[];\r\n};\r\nexport function ColorSwatch({onChange, value, colors}: Props) {\r\n  const presetButtons = colors.map(color => {\r\n    const isSelected = value === color;\r\n    return (\r\n      <ButtonBase\r\n        key={color}\r\n        onClick={() => {\r\n          onChange?.(color);\r\n        }}\r\n        className={clsx(\r\n          'relative block flex-shrink-0 w-26 h-26 border rounded',\r\n          isSelected && 'shadow-md'\r\n        )}\r\n        style={{backgroundColor: color}}\r\n      >\r\n        {isSelected && (\r\n          <span className=\"absolute inset-0 m-auto rounded-full w-8 h-8 bg-white\" />\r\n        )}\r\n      </ButtonBase>\r\n    );\r\n  });\r\n\r\n  return <div className=\"flex flex-wrap gap-6\">{presetButtons}</div>;\r\n}\r\n","import {HexColorInput, HexColorPicker} from 'react-colorful';\r\nimport React, {useState} from 'react';\r\nimport {parseColor} from '@react-stately/color';\r\nimport {ColorPresets} from '@ui/color-picker/color-presets';\r\nimport {getInputFieldClassNames} from '@ui/forms/input-field/get-input-field-class-names';\r\nimport {ColorSwatch} from '@ui/color-picker/color-swatch';\r\n\r\nconst DefaultPresets = ColorPresets.map(({color}) => color).slice(0, 14);\r\n\r\ntype Props = {\r\n  defaultValue?: string;\r\n  onChange?: (e: string) => void;\r\n  colorPresets?: string[];\r\n  showInput?: boolean;\r\n};\r\nexport function ColorPicker({\r\n  defaultValue,\r\n  onChange,\r\n  colorPresets,\r\n  showInput,\r\n}: Props) {\r\n  const [color, setColor] = useState<string | undefined>(defaultValue);\r\n\r\n  const presets: string[] = colorPresets || DefaultPresets;\r\n\r\n  const style = getInputFieldClassNames({size: 'sm'});\r\n\r\n  return (\r\n    <div>\r\n      <HexColorPicker\r\n        className=\"!w-auto\"\r\n        color={color}\r\n        onChange={newColor => {\r\n          onChange?.(newColor);\r\n          setColor(newColor);\r\n        }}\r\n      />\r\n      <div className=\"px-12 py-20\">\r\n        {presets && (\r\n          <ColorSwatch\r\n            colors={presets}\r\n            onChange={newColor => {\r\n              if (newColor) {\r\n                const hex = parseColor(newColor).toString('hex');\r\n                onChange?.(hex);\r\n                setColor(hex);\r\n              }\r\n            }}\r\n            value={color}\r\n          />\r\n        )}\r\n        {showInput && (\r\n          <div className=\"pt-20\">\r\n            <HexColorInput\r\n              autoComplete=\"off\"\r\n              role=\"textbox\"\r\n              autoCorrect=\"off\"\r\n              spellCheck=\"false\"\r\n              required\r\n              aria-label=\"Hex color\"\r\n              prefixed\r\n              className={style.input}\r\n              color={color}\r\n              onChange={newColor => {\r\n                onChange?.(newColor);\r\n                setColor(newColor);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {ColorPicker} from './color-picker';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\ninterface ColorPickerDialogProps {\r\n  hideFooter?: boolean;\r\n  showInput?: boolean;\r\n}\r\nexport function ColorPickerDialog({\r\n  hideFooter = false,\r\n  showInput = true,\r\n}: ColorPickerDialogProps) {\r\n  const {close, value, setValue, initialValue} = useDialogContext<\r\n    string | null\r\n  >();\r\n  // todo: remove this once pixie and bedrive are refactored to use dialogTrigger currentValue (use \"currentValue\" for defaultValue as well)\r\n  //const initialValue = useRef(defaultValue);\r\n\r\n  return (\r\n    <Dialog size=\"2xs\">\r\n      <ColorPicker\r\n        showInput={showInput}\r\n        defaultValue={initialValue ? initialValue : ''}\r\n        onChange={newValue => setValue(newValue)}\r\n      />\r\n      {!hideFooter && (\r\n        <DialogFooter dividerTop>\r\n          <Button variant=\"text\" size=\"xs\" onClick={() => close()}>\r\n            <Trans message=\"Cancel\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            size=\"xs\"\r\n            onClick={() => close(value)}\r\n          >\r\n            <Trans message=\"Apply\" />\r\n          </Button>\r\n        </DialogFooter>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","import {message} from '@ui/i18n/message';\r\nimport {useParams} from 'react-router';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {AppearanceEditorValues} from '@common/admin/appearance/appearance-store';\r\nimport {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\r\nimport clsx from 'clsx';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Item} from '@ui/forms/listbox/item';\r\n\r\nconst navbarColorMap = [\r\n  {\r\n    label: message('Accent'),\r\n    value: 'primary',\r\n    bgColor: 'bg-primary',\r\n    previewBgColor: 'text-primary',\r\n  },\r\n  {\r\n    label: message('Background'),\r\n    value: 'bg',\r\n    bgColor: 'bg-background',\r\n    previewBgColor: 'text-background',\r\n  },\r\n  {\r\n    label: message('Background alt'),\r\n    value: 'bg-alt',\r\n    bgColor: 'bg-alt',\r\n    previewBgColor: 'text-background-alt',\r\n  },\r\n  {\r\n    label: message('Transparent'),\r\n    value: 'transparent',\r\n    bgColor: 'bg-transparent',\r\n    previewBgColor: 'text-transparent',\r\n  },\r\n];\r\n\r\nexport function NavbarColorPicker() {\r\n  const {themeIndex} = useParams();\r\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\r\n  const key =\r\n    `appearance.themes.${themeIndex!}.values.--be-navbar-color` as 'appearance.themes.1.values.--be-navbar-color';\r\n  const selectedValue = watch(key);\r\n  const previewColor = navbarColorMap.find(({value}) => value === selectedValue)\r\n    ?.previewBgColor;\r\n  return (\r\n    <MenuTrigger\r\n      placement=\"right\"\r\n      selectionMode=\"single\"\r\n      selectedValue={selectedValue}\r\n      onSelectionChange={value => {\r\n        setValue(key, value as string, {shouldDirty: true});\r\n      }}\r\n    >\r\n      <AppearanceButton\r\n        startIcon={\r\n          <ColorIcon\r\n            viewBox=\"0 0 48 48\"\r\n            className={clsx('icon-lg', previewColor)}\r\n          />\r\n        }\r\n      >\r\n        <Trans message=\"Navbar\" />\r\n      </AppearanceButton>\r\n      <Menu>\r\n        {navbarColorMap.map(({label, value, bgColor}) => (\r\n          <Item\r\n            key={value}\r\n            value={value}\r\n            startIcon={\r\n              <div className={clsx('h-20 w-20 rounded border', bgColor)} />\r\n            }\r\n          >\r\n            <Trans {...label} />\r\n          </Item>\r\n        ))}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  marginTop?: string;\r\n}\r\nexport function AppearanceSectionTitle({children, marginTop = 'mt-22'}: Props) {\r\n  return (\r\n    <div className={clsx('mb-6 text-sm font-semibold', marginTop)}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import {Link, useNavigate, useParams} from 'react-router';\r\nimport {Fragment, ReactNode, useEffect, useState} from 'react';\r\nimport {\r\n  AppearanceEditorValues,\r\n  appearanceState,\r\n  previewAppIsLoaded,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\r\nimport {CssTheme} from '@ui/themes/css-theme';\r\nimport {colorToThemeValue} from '@ui/themes/utils/color-to-theme-value';\r\nimport {ThemeSettingsDialogTrigger} from '@common/admin/appearance/sections/themes/theme-settings-dialog-trigger';\r\nimport {ThemeMoreOptionsButton} from '@common/admin/appearance/sections/themes/theme-more-options-button';\r\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {NavbarColorPicker} from '@common/admin/appearance/sections/themes/navbar-color-picker';\r\nimport {message} from '@ui/i18n/message';\r\nimport {themeValueToHex} from '@ui/themes/utils/theme-value-to-hex';\r\nimport {AppearanceSectionTitle} from '@common/admin/appearance/appearance-section-title';\r\n\r\nconst colorList = [\r\n  {\r\n    label: message('Background'),\r\n    key: '--be-background',\r\n  },\r\n  {\r\n    label: message('Background alt'),\r\n    key: '--be-background-alt',\r\n  },\r\n  {\r\n    label: message('Foreground'),\r\n    key: '--be-foreground-base',\r\n  },\r\n  {\r\n    label: message('Accent light'),\r\n    key: '--be-primary-light',\r\n  },\r\n  {\r\n    label: message('Accent'),\r\n    key: '--be-primary',\r\n  },\r\n  {\r\n    label: message('Accent dark'),\r\n    key: '--be-primary-dark',\r\n  },\r\n  {\r\n    label: message('Text on accent'),\r\n    key: '--be-on-primary',\r\n  },\r\n  {\r\n    label: message('Chip'),\r\n    key: '--be-background-chip',\r\n  },\r\n];\r\n\r\nexport function ThemeEditor() {\r\n  const navigate = useNavigate();\r\n  const {themeIndex} = useParams();\r\n  const {getValues, watch} = useFormContext<AppearanceEditorValues>();\r\n\r\n  const theme = getValues(`appearance.themes.${+themeIndex!}`);\r\n  const selectedFont = watch(`appearance.themes.${+themeIndex!}.font.family`);\r\n\r\n  // go to theme list, if theme can't be found\r\n  useEffect(() => {\r\n    if (!theme) {\r\n      navigate('..', {relative: 'path', replace: true});\r\n    }\r\n  }, [navigate, theme]);\r\n\r\n  // set this theme as active in preview iframe\r\n  useEffect(() => {\r\n    let isAborted = false;\r\n    if (theme?.id) {\r\n      previewAppIsLoaded.then(() => {\r\n        if (isAborted) return;\r\n        appearanceState().preview.setActiveTheme(theme.id);\r\n      });\r\n    }\r\n    return () => {\r\n      isAborted = true;\r\n      appearanceState().preview.setActiveTheme(null);\r\n    };\r\n  }, [theme?.id]);\r\n\r\n  if (!theme) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-20 flex items-center justify-between gap-10\">\r\n        <ThemeSettingsDialogTrigger />\r\n        <ThemeMoreOptionsButton />\r\n      </div>\r\n      <div>\r\n        <AppearanceButton\r\n          elementType={Link}\r\n          to=\"font\"\r\n          description={selectedFont ? selectedFont : <Trans message=\"System\" />}\r\n        >\r\n          <Trans message=\"Font\" />\r\n        </AppearanceButton>\r\n        <AppearanceButton elementType={Link} to=\"radius\">\r\n          <Trans message=\"Rounding\" />\r\n        </AppearanceButton>\r\n        <AppearanceSectionTitle>\r\n          <Trans message=\"Colors\" />\r\n        </AppearanceSectionTitle>\r\n        <NavbarColorPicker />\r\n        {colorList.map(color => (\r\n          <ColorPickerTrigger\r\n            key={color.key}\r\n            colorName={color.key}\r\n            label={<Trans {...color.label} />}\r\n            initialThemeValue={theme.values[color.key]}\r\n            theme={theme}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ColorPickerTriggerProps {\r\n  label: ReactNode;\r\n  theme: CssTheme;\r\n  colorName: string;\r\n  initialThemeValue: string;\r\n}\r\nfunction ColorPickerTrigger({\r\n  label,\r\n  theme,\r\n  colorName,\r\n  initialThemeValue,\r\n}: ColorPickerTriggerProps) {\r\n  const {setValue} = useFormContext<AppearanceEditorValues>();\r\n  const {themeIndex} = useParams();\r\n  const [selectedThemeValue, setSelectedThemeValue] =\r\n    useState<string>(initialThemeValue);\r\n\r\n  // set color as css variable in preview and on button preview, but not in appearance values\r\n  // this way color change can be canceled when color picker is closed and applied explicitly via apply button\r\n  const selectThemeValue = (themeValue: string) => {\r\n    setSelectedThemeValue(themeValue);\r\n    appearanceState().preview.setThemeValue(colorName, themeValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // need to update the color here so changes via \"reset colors\" button are reflected\r\n    setSelectedThemeValue(initialThemeValue);\r\n  }, [initialThemeValue]);\r\n\r\n  return (\r\n    <DialogTrigger\r\n      value={themeValueToHex(selectedThemeValue)}\r\n      type=\"popover\"\r\n      placement=\"right\"\r\n      offset={10}\r\n      onValueChange={newColor => {\r\n        selectThemeValue(colorToThemeValue(newColor));\r\n      }}\r\n      onClose={(newColor, {valueChanged, initialValue}) => {\r\n        if (newColor && valueChanged) {\r\n          setValue(\r\n            `appearance.themes.${+themeIndex!}.values.${colorName}`,\r\n            colorToThemeValue(newColor),\r\n            {shouldDirty: true},\r\n          );\r\n        } else {\r\n          // reset to initial value, if apply button was not clicked\r\n          selectThemeValue(initialValue);\r\n        }\r\n      }}\r\n    >\r\n      <AppearanceButton\r\n        className=\"capitalize\"\r\n        startIcon={\r\n          <ColorIcon\r\n            viewBox=\"0 0 48 48\"\r\n            className=\"icon-lg\"\r\n            style={{fill: `rgb(${selectedThemeValue})`}}\r\n          />\r\n        }\r\n      >\r\n        {label}\r\n      </AppearanceButton>\r\n      <ColorPickerDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import React, {RefObject} from 'react';\r\n\r\nexport interface TabsContext {\r\n  selectedTab: number;\r\n  setSelectedTab: (newTab: number) => void;\r\n  tabsRef: RefObject<HTMLElement[]>;\r\n  size: 'sm' | 'md';\r\n  isLazy?: boolean;\r\n  id: string;\r\n}\r\n\r\nexport const TabContext = React.createContext<TabsContext>(null!);\r\n","import React, {ReactElement, useId, useMemo, useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {TabListProps} from '@ui/tabs/tab-list';\r\nimport {TabPanelsProps} from '@ui/tabs/tab-panels';\r\nimport {TabContext, TabsContext} from '@ui/tabs/tabs-context';\r\n\r\nexport interface TabsProps {\r\n  children:\r\n    | [ReactElement<TabListProps>, ReactElement<TabPanelsProps>]\r\n    | ReactElement<TabListProps>;\r\n  size?: 'sm' | 'md';\r\n  className?: string;\r\n  selectedTab?: number;\r\n  defaultSelectedTab?: number;\r\n  onTabChange?: (newTab: number) => void;\r\n  isLazy?: boolean;\r\n  overflow?: string;\r\n}\r\n\r\nexport function Tabs(props: TabsProps) {\r\n  const {\r\n    size = 'md',\r\n    children,\r\n    className,\r\n    isLazy,\r\n    overflow = 'overflow-hidden',\r\n  } = props;\r\n\r\n  const tabsRef = useRef<HTMLButtonElement[]>([]);\r\n  const id = useId();\r\n\r\n  const [selectedTab, setSelectedTab] = useControlledState(\r\n    props.selectedTab,\r\n    props.defaultSelectedTab || 0,\r\n    props.onTabChange,\r\n  );\r\n\r\n  const ContextValue: TabsContext = useMemo(() => {\r\n    return {\r\n      selectedTab,\r\n      setSelectedTab,\r\n      tabsRef,\r\n      size,\r\n      isLazy,\r\n      id,\r\n    };\r\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\r\n\r\n  return (\r\n    <TabContext.Provider value={ContextValue}>\r\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\r\n    </TabContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext, useState} from 'react';\r\nimport {useLayoutEffect} from '@react-aria/utils';\r\nimport clsx from 'clsx';\r\nimport {TabContext} from '@ui/tabs/tabs-context';\r\n\r\ninterface TabLineStyle {\r\n  width?: string;\r\n  transform?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function TabLine() {\r\n  const {tabsRef, selectedTab} = useContext(TabContext);\r\n  const [style, setStyle] = useState<TabLineStyle>({\r\n    width: undefined,\r\n    transform: undefined,\r\n    className: undefined,\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    if (selectedTab != null && tabsRef.current) {\r\n      const el = tabsRef.current[selectedTab];\r\n      if (!el) return;\r\n\r\n      setStyle(prevState => {\r\n        return {\r\n          width: `${el.offsetWidth}px`,\r\n          transform: `translateX(${el.offsetLeft}px)`,\r\n          // disable initial transition for tabline\r\n          className: prevState.width === undefined ? '' : 'transition-all',\r\n        };\r\n      });\r\n    }\r\n  }, [setStyle, selectedTab, tabsRef]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'absolute bottom-0 left-0 h-2 bg-primary',\r\n        style.className\r\n      )}\r\n      role=\"presentation\"\r\n      style={{width: style.width, transform: style.transform}}\r\n    />\r\n  );\r\n}\r\n","import React, {Children, cloneElement, isValidElement, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FocusScope} from '@react-aria/focus';\r\nimport {TabProps} from '@ui/tabs/tab';\r\nimport {TabLine} from '@ui/tabs/tab-line';\r\n\r\nexport interface TabListProps {\r\n  children: ReactNode;\r\n  // center tabs within tablist\r\n  center?: boolean;\r\n  // expand tabs to fill in tablist space fully. By default, tabs are only as wide as their content.\r\n  expand?: boolean;\r\n  className?: string;\r\n  border?: string;\r\n}\r\nexport function TabList({\r\n  children,\r\n  center,\r\n  expand,\r\n  className,\r\n  border = 'border-b',\r\n}: TabListProps) {\r\n  const childrenArray = Children.toArray(children);\r\n\r\n  return (\r\n    <FocusScope>\r\n      <div\r\n        className={clsx(\r\n          // hide scrollbar completely on mobile, show compact one on desktop\r\n          'max-sm:hidden-scrollbar md:compact-scrollbar relative flex max-w-full overflow-auto',\r\n          border,\r\n          className,\r\n        )}\r\n        role=\"tablist\"\r\n        aria-orientation=\"horizontal\"\r\n      >\r\n        {childrenArray.map((child, index) => {\r\n          if (isValidElement<TabProps>(child)) {\r\n            return cloneElement<TabProps>(child, {\r\n              index,\r\n              className: clsx(\r\n                child.props.className,\r\n                expand && 'flex-auto',\r\n                center && index === 0 && 'ml-auto',\r\n                center && index === childrenArray.length - 1 && 'mr-auto',\r\n              ),\r\n            });\r\n          }\r\n          return null;\r\n        })}\r\n        <TabLine />\r\n      </div>\r\n    </FocusScope>\r\n  );\r\n}\r\n","import React, {JSXElementConstructor, ReactNode, useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useFocusManager} from '@react-aria/focus';\r\nimport {LinkProps} from 'react-router';\r\nimport {TabContext} from '@ui/tabs/tabs-context';\r\n\r\nexport interface TabProps {\r\n  className?: string;\r\n  index?: number;\r\n  children: ReactNode;\r\n  isDisabled?: boolean;\r\n  padding?: string;\r\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\r\n  to?: LinkProps['to'];\r\n  relative?: LinkProps['relative'];\r\n  replace?: LinkProps['replace'];\r\n  width?: string;\r\n  height?: string;\r\n}\r\nexport function Tab({\r\n  index,\r\n  className,\r\n  isDisabled,\r\n  children,\r\n  padding: paddingProp,\r\n  elementType = 'button',\r\n  to,\r\n  relative,\r\n  width = 'min-w-min',\r\n  height,\r\n}: TabProps) {\r\n  const {\r\n    selectedTab,\r\n    setSelectedTab,\r\n    tabsRef,\r\n    size = 'md',\r\n    id,\r\n  } = useContext(TabContext);\r\n  const isSelected = index === selectedTab;\r\n  const focusManager = useFocusManager();\r\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\r\n\r\n  const mergedClassname = clsx(\r\n    'tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors',\r\n    'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer',\r\n    width,\r\n    textColor({isDisabled, isSelected}),\r\n    className,\r\n    size === 'md' && `${padding} ${height || 'h-48'}`,\r\n    size === 'sm' && `${padding} ${height || 'h-32'}`,\r\n    isDisabled && 'pointer-events-none',\r\n  );\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        focusManager?.focusPrevious();\r\n        break;\r\n      case 'ArrowRight':\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'Home':\r\n        focusManager?.focusFirst();\r\n        break;\r\n      case 'End':\r\n        focusManager?.focusLast();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const tabIndex = isSelected ? 0 : -1;\r\n  const Element = elementType;\r\n\r\n  return (\r\n    <Element\r\n      disabled={isDisabled}\r\n      id={`${id}-${index}-tab`}\r\n      aria-controls={`${id}-${index}-tabpanel`}\r\n      type=\"button\"\r\n      role=\"tab\"\r\n      aria-selected={isSelected}\r\n      tabIndex={isDisabled ? undefined : tabIndex}\r\n      onKeyDown={onKeyDown}\r\n      onClick={() => {\r\n        setSelectedTab(index!);\r\n      }}\r\n      to={to}\r\n      relative={relative}\r\n      className={mergedClassname}\r\n      ref={(el: HTMLElement) => {\r\n        if (tabsRef.current && el) {\r\n          tabsRef.current[index!] = el;\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </Element>\r\n  );\r\n}\r\n\r\ninterface TextColorProps {\r\n  isDisabled?: boolean;\r\n  isSelected: boolean;\r\n}\r\nfunction textColor({isDisabled, isSelected}: TextColorProps): string {\r\n  if (isDisabled) {\r\n    return 'text-disabled cursor-default';\r\n  }\r\n  if (isSelected) {\r\n    return 'text-primary';\r\n  }\r\n  return 'text-muted hover:text-main';\r\n}\r\n","import React, {\r\n  Children,\r\n  cloneElement,\r\n  ComponentPropsWithoutRef,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useContext,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useLayoutEffect} from '@react-aria/utils';\r\nimport {getFocusableTreeWalker} from '@react-aria/focus';\r\nimport {TabContext} from '@ui/tabs/tabs-context';\r\n\r\nexport interface TabPanelsProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\nexport function TabPanels({children, className}: TabPanelsProps) {\r\n  const {selectedTab, isLazy} = useContext(TabContext);\r\n\r\n  // filter out falsy values, in case of conditional rendering\r\n  const panelArray = Children.toArray(children).filter(p => !!p);\r\n\r\n  let rendered: ReactNode;\r\n  if (isLazy) {\r\n    const el = panelArray[selectedTab] as ReactElement;\r\n    rendered = isValidElement(el)\r\n      ? cloneElement<TabPanelProps>(panelArray[selectedTab] as ReactElement, {\r\n          index: selectedTab,\r\n        })\r\n      : null;\r\n  } else {\r\n    rendered = panelArray.map((panel, index) => {\r\n      if (isValidElement<TabPanelsProps>(panel)) {\r\n        const isSelected = index === selectedTab;\r\n        return cloneElement<TabPanelProps>(panel, {\r\n          index,\r\n          'aria-hidden': !isSelected,\r\n          className: !isSelected\r\n            ? clsx(panel.props.className, 'hidden')\r\n            : panel.props.className,\r\n        });\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  return <div className={className}>{rendered}</div>;\r\n}\r\n\r\ninterface TabPanelProps extends ComponentPropsWithoutRef<'div'> {\r\n  className?: string;\r\n  children: ReactNode;\r\n  index?: number;\r\n}\r\nexport function TabPanel({\r\n  className,\r\n  children,\r\n  index,\r\n  ...domProps\r\n}: TabPanelProps) {\r\n  const {id} = useContext(TabContext);\r\n\r\n  const [tabIndex, setTabIndex] = useState<number | undefined>(0);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\r\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\r\n  // within the tabpanel.\r\n  useLayoutEffect(() => {\r\n    if (ref?.current) {\r\n      const update = () => {\r\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\r\n        const walker = getFocusableTreeWalker(ref.current!, {tabbable: true});\r\n        setTabIndex(walker.nextNode() ? undefined : 0);\r\n      };\r\n\r\n      update();\r\n\r\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\r\n      const observer = new MutationObserver(update);\r\n      observer.observe(ref.current, {\r\n        subtree: true,\r\n        childList: true,\r\n        attributes: true,\r\n        attributeFilter: ['tabIndex', 'disabled'],\r\n      });\r\n\r\n      return () => {\r\n        observer.disconnect();\r\n      };\r\n    }\r\n  }, [ref]);\r\n\r\n  return (\r\n    <div\r\n      tabIndex={tabIndex}\r\n      ref={ref}\r\n      id={`${id}-${index}-tabpanel`}\r\n      aria-labelledby={`${id}-${index}-tab`}\r\n      className={clsx(className, 'focus-visible:outline-primary-light')}\r\n      role=\"tabpanel\"\r\n      {...domProps}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import {ReactNode, useEffect, useRef} from 'react';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  children: (isInvalid: boolean) => ReactNode;\r\n  name: string;\r\n  separatorBottom?: boolean;\r\n  separatorTop?: boolean;\r\n}\r\nexport function SettingsErrorGroup({\r\n  children,\r\n  name,\r\n  separatorBottom = true,\r\n  separatorTop = true,\r\n}: Props) {\r\n  const {\r\n    formState: {errors},\r\n  } = useFormContext<Record<string, string>>();\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const error = errors[name];\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      ref.current?.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        separatorBottom && 'border-b mb-20 pb-20',\r\n        separatorTop && 'border-t mt-20 pt-20',\r\n        error && 'border-y-error'\r\n      )}\r\n      ref={ref}\r\n    >\r\n      {children(!!error)}\r\n      {error && (\r\n        <div\r\n          className=\"text-danger text-sm mt-20\"\r\n          dangerouslySetInnerHTML={{__html: error.message!}}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {useController} from 'react-hook-form';\r\nimport React, {useMemo} from 'react';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {\r\n  ChipField,\r\n  ChipValue,\r\n} from '@ui/forms/input-field/chip-field/chip-field';\r\nimport {FormChipFieldProps} from '@ui/forms/input-field/chip-field/form-chip-field';\r\n\r\nexport function JsonChipField({children, ...props}: FormChipFieldProps<any>) {\r\n  const {\r\n    field: {onChange, onBlur, value = [], ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name: props.name,\r\n  });\r\n\r\n  const arrayValue = useMemo(() => {\r\n    const mixedValue = value as string | string[];\r\n    return typeof mixedValue === 'string' ? JSON.parse(mixedValue) : mixedValue;\r\n  }, [value]);\r\n\r\n  const formProps: Partial<FormChipFieldProps<ChipValue>> = {\r\n    onChange,\r\n    onBlur,\r\n    value: arrayValue,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n  };\r\n\r\n  return (\r\n    <ChipField valueKey=\"name\" ref={ref} {...mergeProps(formProps, props)} />\r\n  );\r\n}\r\n","import {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Tabs} from '@ui/tabs/tabs';\r\nimport {TabList} from '@ui/tabs/tab-list';\r\nimport {Tab} from '@ui/tabs/tab';\r\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useForm, useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport React, {Fragment} from 'react';\r\nimport {JsonChipField} from '@common/admin/settings/form/json-chip-field';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\n\r\nexport function SubscriptionSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Subscriptions\" />}\r\n      description={\r\n        <Trans message=\"Configure gateway integration, accepted cards, invoices and other related settings.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const {trans} = useTrans();\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        billing: {\r\n          enable: data.client.billing?.enable ?? false,\r\n          accepted_cards: data.client.billing?.accepted_cards ?? [],\r\n          paypal_test_mode: data.client.billing?.paypal_test_mode ?? false,\r\n          paypal: {\r\n            enable: data.client.billing?.paypal?.enable ?? false,\r\n          },\r\n          stripe: {\r\n            enable: data.client.billing?.stripe?.enable ?? false,\r\n          },\r\n          invoice: {\r\n            address: data.client.billing?.invoice?.address ?? '',\r\n            notes: data.client.billing?.invoice?.notes ?? '',\r\n          },\r\n        },\r\n      },\r\n      server: {\r\n        paypal_client_id: data.server?.paypal_client_id ?? '',\r\n        paypal_secret: data.server?.paypal_secret ?? '',\r\n        paypal_webhook_id: data.server?.paypal_webhook_id ?? '',\r\n        stripe_key: data.server?.stripe_key ?? '',\r\n        stripe_secret: data.server?.stripe_secret ?? '',\r\n        stripe_webhook_secret: data.server?.stripe_webhook_secret ?? '',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>\r\n            <Trans message=\"General\" />\r\n          </Tab>\r\n          <Tab>\r\n            <Trans message=\"Invoices\" />\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanels className=\"pt-30\">\r\n          <TabPanel>\r\n            <FormSwitch\r\n              name=\"client.billing.enable\"\r\n              description={\r\n                <Trans message=\"Enable or disable all subscription related functionality across the site.\" />\r\n              }\r\n            >\r\n              <Trans message=\"Enable subscriptions\" />\r\n            </FormSwitch>\r\n            <SettingsSeparator />\r\n            <PaypalSection />\r\n            <StripeSection />\r\n            <SettingsSeparator />\r\n            <JsonChipField\r\n              label={<Trans message=\"Accepted cards\" />}\r\n              name=\"client.billing.accepted_cards\"\r\n              placeholder={trans({message: 'Add new card...'})}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <FormTextField\r\n              inputElementType=\"textarea\"\r\n              rows={5}\r\n              label={<Trans message=\"Invoice address\" />}\r\n              name=\"client.billing.invoice.address\"\r\n              className=\"mb-30\"\r\n            />\r\n            <FormTextField\r\n              inputElementType=\"textarea\"\r\n              rows={5}\r\n              label={<Trans message=\"Invoice notes\" />}\r\n              description={\r\n                <Trans message=\"Default notes to show under `notes` section of user invoice. Optional.\" />\r\n              }\r\n              name=\"client.billing.invoice.notes\"\r\n            />\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction PaypalSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const paypalIsEnabled = watch('client.billing.paypal.enable');\r\n  return (\r\n    <div className=\"mb-30\">\r\n      <FormSwitch\r\n        name=\"client.billing.paypal.enable\"\r\n        description={\r\n          <div>\r\n            <Trans message=\"Enable PayPal payment gateway integration.\" />\r\n            <LearnMoreLink\r\n              className=\"mt-6\"\r\n              link=\"https://support.vebto.com/hc/articles/147/configuring-paypal\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <Trans message=\"PayPal gateway\" />\r\n      </FormSwitch>\r\n      {paypalIsEnabled ? (\r\n        <SettingsErrorGroup name=\"paypal_group\">\r\n          {isInvalid => (\r\n            <Fragment>\r\n              <FormTextField\r\n                name=\"server.paypal_client_id\"\r\n                label={<Trans message=\"PayPal Client ID\" />}\r\n                required\r\n                invalid={isInvalid}\r\n                className=\"mb-20\"\r\n              />\r\n              <FormTextField\r\n                name=\"server.paypal_secret\"\r\n                label={<Trans message=\"PayPal Secret\" />}\r\n                required\r\n                invalid={isInvalid}\r\n                className=\"mb-20\"\r\n              />\r\n              <FormTextField\r\n                name=\"server.paypal_webhook_id\"\r\n                label={<Trans message=\"PayPal Webhook ID\" />}\r\n                required\r\n                invalid={isInvalid}\r\n                className=\"mb-20\"\r\n              />\r\n              <FormSwitch\r\n                name=\"client.billing.paypal_test_mode\"\r\n                invalid={isInvalid}\r\n                description={\r\n                  <div>\r\n                    <Trans message=\"Allows testing PayPal payments with sandbox accounts.\" />\r\n                  </div>\r\n                }\r\n              >\r\n                <Trans message=\"PayPal test mode\" />\r\n              </FormSwitch>\r\n            </Fragment>\r\n          )}\r\n        </SettingsErrorGroup>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StripeSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const stripeEnabled = watch('client.billing.stripe.enable');\r\n  return (\r\n    <Fragment>\r\n      <FormSwitch\r\n        name=\"client.billing.stripe.enable\"\r\n        description={\r\n          <div>\r\n            <Trans message=\"Enable Stripe payment gateway integration.\" />\r\n            <LearnMoreLink\r\n              className=\"mt-6\"\r\n              link=\"https://support.vebto.com/hc/articles/148/configuring-stripe\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <Trans message=\"Stripe gateway\" />\r\n      </FormSwitch>\r\n      {stripeEnabled ? (\r\n        <SettingsErrorGroup name=\"stripe_group\" separatorBottom={false}>\r\n          {isInvalid => (\r\n            <Fragment>\r\n              <FormTextField\r\n                name=\"server.stripe_key\"\r\n                label={<Trans message=\"Stripe publishable key\" />}\r\n                required\r\n                className=\"mb-20\"\r\n                invalid={isInvalid}\r\n              />\r\n              <FormTextField\r\n                name=\"server.stripe_secret\"\r\n                label={<Trans message=\"Stripe secret key\" />}\r\n                required\r\n                className=\"mb-20\"\r\n                invalid={isInvalid}\r\n              />\r\n              <FormTextField\r\n                name=\"server.stripe_webhook_secret\"\r\n                label={<Trans message=\"Stripe webhook signing secret\" />}\r\n                className=\"mb-20\"\r\n                invalid={isInvalid}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </SettingsErrorGroup>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {FetchValueListsResponse, useValueLists} from '@common/http/value-lists';\r\nimport {Section} from '@ui/forms/listbox/section';\r\nimport {FormRadio} from '@ui/forms/radio-group/radio';\r\nimport {FormRadioGroup} from '@ui/forms/radio-group/radio-group';\r\nimport {DateFormatPresets, FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport React from 'react';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nexport function LocalizationSettings() {\r\n  const optionQuery = useValueLists(['timezones', 'localizations']);\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Localization\" />}\r\n      description={\r\n        <Trans message=\"Configure global date, time and language settings.\" />\r\n      }\r\n      isLoading={optionQuery.isLoading}\r\n    >\r\n      {data => (\r\n        <Form\r\n          data={data}\r\n          timezones={optionQuery.data!.timezones}\r\n          localizations={optionQuery.data!.localizations}\r\n        />\r\n      )}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n  timezones: FetchValueListsResponse['timezones'];\r\n  localizations: FetchValueListsResponse['localizations'];\r\n}\r\nfunction Form({data, timezones, localizations}: FormProps) {\r\n  const today = useCurrentDateTime();\r\n  const {trans} = useTrans();\r\n\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        dates: {\r\n          default_timezone: data.client.dates.default_timezone ?? 'auto',\r\n          format: data.client.dates.format ?? 'auto',\r\n        },\r\n        locale: {\r\n          default: data.client.locale?.default ?? 'auto',\r\n        },\r\n        i18n: {\r\n          enable: data.client.i18n.enable ?? true,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <FormSelect\r\n        className=\"mb-30\"\r\n        required\r\n        name=\"client.dates.default_timezone\"\r\n        showSearchField\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Default timezone\" />}\r\n        searchPlaceholder={trans(message('Search timezones'))}\r\n        description={\r\n          <Trans message=\"Which timezone should be selected by default for new users and guests.\" />\r\n        }\r\n      >\r\n        <Option key=\"auto\" value=\"auto\">\r\n          <Trans message=\"Auto\" />\r\n        </Option>\r\n        {Object.entries(timezones!).map(([groupName, timezones]) => (\r\n          <Section key={groupName} label={groupName}>\r\n            {timezones.map(timezone => (\r\n              <Option key={timezone.value} value={timezone.value}>\r\n                {timezone.text}\r\n              </Option>\r\n            ))}\r\n          </Section>\r\n        ))}\r\n      </FormSelect>\r\n      <FormSelect\r\n        name=\"client.locale.default\"\r\n        className=\"mb-30\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Default language\" />}\r\n        description={\r\n          <Trans message=\"Which localization should be selected by default for new users and guests.\" />\r\n        }\r\n      >\r\n        <Option key=\"auto\" value=\"auto\">\r\n          <Trans message=\"Auto\" />\r\n        </Option>\r\n        {localizations!.map(locale => (\r\n          <Option key={locale.language} value={locale.language} capitalizeFirst>\r\n            {locale.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      <FormRadioGroup\r\n        required\r\n        className=\"mb-30\"\r\n        size=\"sm\"\r\n        name=\"client.dates.format\"\r\n        orientation=\"vertical\"\r\n        label={<Trans message=\"Date verbosity\" />}\r\n        description={\r\n          <Trans message=\"Default verbosity for all dates displayed across the site. Month/day order and separators will be adjusted automatically, based on user's locale.\" />\r\n        }\r\n      >\r\n        <FormRadio key=\"auto\" value=\"auto\">\r\n          <Trans message=\"Auto\" />\r\n        </FormRadio>\r\n        {Object.entries(DateFormatPresets).map(([format, options]) => (\r\n          <FormRadio key={format} value={format}>\r\n            <FormattedDate date={today} options={options} />\r\n          </FormRadio>\r\n        ))}\r\n      </FormRadioGroup>\r\n      <FormSwitch\r\n        name=\"client.i18n.enable\"\r\n        description={\r\n          <Trans message=\"If disabled, site will always be shown in default language and user will not be able to change their locale.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Enable translations\" />\r\n      </FormSwitch>\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React, {Fragment} from 'react';\r\nimport {Link} from 'react-router';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\n\r\nexport function AuthenticationSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Authentication\" />}\r\n      description={\r\n        <Trans message=\"Configure registration, social login and related 3rd party integrations.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        require_email_confirmation:\r\n          data.client?.require_email_confirmation ?? false,\r\n        registration: {\r\n          disable: data.client.registration?.disable ?? false,\r\n        },\r\n        social: {\r\n          requireAccount: data.client.social?.requireAccount ?? false,\r\n          compact_buttons: data.client.social?.compact_buttons ?? false,\r\n          envato: {\r\n            enable: data.client.social?.envato?.enable ?? false,\r\n          },\r\n          google: {\r\n            enable: data.client.social?.google?.enable ?? false,\r\n          },\r\n          facebook: {\r\n            enable: data.client.social?.facebook?.enable ?? false,\r\n          },\r\n          twitter: {\r\n            enable: data.client.social?.twitter?.enable ?? false,\r\n          },\r\n        },\r\n        single_device_login: data.client.single_device_login ?? false,\r\n        auth: {\r\n          domain_blacklist: data.client.auth?.domain_blacklist ?? '',\r\n        },\r\n      },\r\n      server: {\r\n        envato_id: data.server?.envato_id ?? '',\r\n        envato_secret: data.server?.envato_secret ?? '',\r\n        envato_personal_token: data.server?.envato_personal_token ?? '',\r\n        google_id: data.server?.google_id ?? '',\r\n        google_secret: data.server?.google_secret ?? '',\r\n        facebook_id: data.server?.facebook_id ?? '',\r\n        facebook_secret: data.server?.facebook_secret ?? '',\r\n        twitter_id: data.server?.twitter_id ?? '',\r\n        twitter_secret: data.server?.twitter_secret ?? '',\r\n        mail_setup: data.server?.mail_setup ?? false,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <EmailConfirmationSection />\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.registration.disable\"\r\n        description={\r\n          <Trans message=\"All registration related functionality will be disabled and hidden from users.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Disable registration\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.social.requireAccount\"\r\n        description={\r\n          <Trans message=\"If enabled, user will only be able to login via particular social site, if they have connected it from their account settings page.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Social login requires existing account\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.single_device_login\"\r\n        description={\r\n          <Trans message=\"Only allow one device to be logged into user account at the same time.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Single device login\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"client.social.compact_buttons\"\r\n        description={\r\n          <Trans message=\"Use compact design for social login buttons.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Compact buttons\" />\r\n      </FormSwitch>\r\n      <EnvatoSection />\r\n      <GoogleSection />\r\n      <FacebookSection />\r\n      <TwitterSection />\r\n      <SettingsSeparator />\r\n      <FormTextField\r\n        inputElementType=\"textarea\"\r\n        rows={3}\r\n        className=\"mt-24\"\r\n        name=\"client.auth.domain_blacklist\"\r\n        label={<Trans message=\"Domain blacklist\" />}\r\n        description={\r\n          <Trans message=\"Comma separated list of domains. Users will not be able to register or login using any email adress from specified domains.\" />\r\n        }\r\n      />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nexport function MailNotSetupWarning() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const mailSetup = watch('server.mail_setup');\r\n  if (mailSetup) return null;\r\n\r\n  return (\r\n    <p className=\"mt-10 rounded-panel border p-10 text-sm text-danger\">\r\n      <Trans\r\n        message=\"Outgoing mail method needs to be setup before enabling this setting. <a>Fix now</a>\"\r\n        values={{\r\n          a: text => (\r\n            <Button\r\n              elementType={Link}\r\n              variant=\"outline\"\r\n              size=\"xs\"\r\n              display=\"flex\"\r\n              className=\"mt-10 max-w-max\"\r\n              to=\"/admin/settings/outgoing-email\"\r\n            >\r\n              {text}\r\n            </Button>\r\n          ),\r\n        }}\r\n      />\r\n    </p>\r\n  );\r\n}\r\n\r\nfunction EmailConfirmationSection() {\r\n  return (\r\n    <FormSwitch\r\n      className=\"mb-30\"\r\n      name=\"client.require_email_confirmation\"\r\n      description={\r\n        <Fragment>\r\n          <Trans message=\"Require newly registered users to validate their email address before being able to login.\" />\r\n          <MailNotSetupWarning />\r\n        </Fragment>\r\n      }\r\n    >\r\n      <Trans message=\"Require email confirmation\" />\r\n    </FormSwitch>\r\n  );\r\n}\r\n\r\nfunction EnvatoSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const settings = useSettings();\r\n  const envatoLoginEnabled = watch('client.social.envato.enable');\r\n\r\n  if (!(settings as any).envato?.enable) return null;\r\n\r\n  return (\r\n    <SettingsErrorGroup separatorBottom={false} name=\"envato_group\">\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.envato.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via envato.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Envato login\" />\r\n          </FormSwitch>\r\n          {!!envatoLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_id\"\r\n                label={<Trans message=\"Envato ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_secret\"\r\n                label={<Trans message=\"Envato secret\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_personal_token\"\r\n                label={<Trans message=\"Envato personal token\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction GoogleSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const googleLoginEnabled = watch('client.social.google.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup name=\"google_group\">\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.google.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via google.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Google login\" />\r\n          </FormSwitch>\r\n          {!!googleLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.google_id\"\r\n                label={<Trans message=\"Google client ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                className=\"mt-30\"\r\n                name=\"server.google_secret\"\r\n                label={<Trans message=\"Google client secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction FacebookSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const facebookLoginEnabled = watch('client.social.facebook.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup name=\"facebook_group\" separatorTop={false}>\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.facebook.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via facebook.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Facebook login\" />\r\n          </FormSwitch>\r\n          {!!facebookLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.facebook_id\"\r\n                label={<Trans message=\"Facebook app ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.facebook_secret\"\r\n                label={<Trans message=\"Facebook app secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction TwitterSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const twitterLoginEnabled = watch('client.social.twitter.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup\r\n      name=\"twitter_group\"\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n    >\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.twitter.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via twitter.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Twitter login\" />\r\n          </FormSwitch>\r\n          {!!twitterLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.twitter_id\"\r\n                label={<Trans message=\"Twitter ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.twitter_secret\"\r\n                label={<Trans message=\"Twitter secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","export const spaceUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\r\n","export type SpaceUnit = 'KB' | 'MB' | 'GB' | 'TB' | 'PB';\r\n\r\nexport function convertToBytes(value: number, unit: SpaceUnit): number {\r\n  if (value == null) return 0;\r\n  switch (unit) {\r\n    case 'KB':\r\n      return value * 1024;\r\n    case 'MB':\r\n      return value * 1024 ** 2;\r\n    case 'GB':\r\n      return value * 1024 ** 3;\r\n    case 'TB':\r\n      return value * 1024 ** 4;\r\n    case 'PB':\r\n      return value * 1024 ** 5;\r\n    default:\r\n      return value;\r\n  }\r\n}\r\n","import {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport React, {useEffect, useState} from 'react';\r\nimport memoize from 'nano-memoize';\r\nimport {\r\n  FormTextFieldProps,\r\n  TextField,\r\n  TextFieldProps,\r\n} from '@ui/forms/input-field/text-field/text-field';\r\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\r\nimport {Option, Select} from '@ui/forms/select/select';\r\nimport {spaceUnits} from '@ui/utils/files/space-units';\r\nimport {convertToBytes, SpaceUnit} from '@ui/utils/files/convert-to-bytes';\r\n\r\n// 99TB\r\nconst MaxValue = 108851651149824;\r\n\r\nexport const FormFileSizeField = React.forwardRef<\r\n  HTMLDivElement,\r\n  FormTextFieldProps\r\n>(({name, ...props}, ref) => {\r\n  const {\r\n    field: {\r\n      onChange: setByteValue,\r\n      onBlur,\r\n      value: byteValue = '',\r\n      ref: inputRef,\r\n    },\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  const [liveValue, setLiveValue] = useState<number | string>('');\r\n  const [unit, setUnit] = useState<SpaceUnit | string>('MB');\r\n\r\n  useEffect(() => {\r\n    if (byteValue == null || byteValue === '') {\r\n      setLiveValue('');\r\n      return;\r\n    }\r\n    const {amount, unit: newUnit} = fromBytes({\r\n      bytes: Math.min(byteValue, MaxValue),\r\n    });\r\n    setUnit(newUnit || 'MB');\r\n    setLiveValue(Number.isNaN(amount) ? '' : amount);\r\n  }, [byteValue, unit]);\r\n\r\n  const formProps: TextFieldProps = {\r\n    onChange: e => {\r\n      const value = parseInt(e.target.value);\r\n      if (Number.isNaN(value)) {\r\n        setByteValue(value);\r\n      } else {\r\n        const newBytes = convertToBytes(\r\n          parseInt(e.target.value),\r\n          unit as SpaceUnit,\r\n        );\r\n        setByteValue(newBytes);\r\n      }\r\n    },\r\n    onBlur,\r\n    value: liveValue,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n    inputRef,\r\n  };\r\n\r\n  const unitSelect = (\r\n    <Select\r\n      minWidth=\"min-w-80\"\r\n      selectionMode=\"single\"\r\n      selectedValue={unit}\r\n      disabled={!byteValue}\r\n      inputRadius=\"rounded-l-none rounded-r-input\"\r\n      onSelectionChange={newUnit => {\r\n        const newBytes = convertToBytes(\r\n          (liveValue || 0) as number,\r\n          newUnit as SpaceUnit,\r\n        );\r\n        setByteValue(newBytes);\r\n      }}\r\n    >\r\n      {spaceUnits.slice(0, 5).map(u => (\r\n        <Option value={u} key={u}>\r\n          {u === 'B' ? 'Bytes' : u}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <TextField\r\n      {...mergeProps(formProps, props)}\r\n      type=\"number\"\r\n      ref={ref}\r\n      endAppend={unitSelect}\r\n    />\r\n  );\r\n});\r\n\r\nconst fromBytes = memoize(\r\n  ({bytes}: {bytes: number}): {amount: number | string; unit: SpaceUnit} => {\r\n    const pretty = prettyBytes(bytes);\r\n    if (!pretty) return {amount: '', unit: 'MB'};\r\n    let amount = parseInt(pretty.split(' ')[0]);\r\n    // get rid of any punctuation\r\n    amount = Math.round(amount);\r\n    return {amount, unit: pretty.split(' ')[1] as SpaceUnit};\r\n  },\r\n);\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport interface FetchMaxServerUploadSizeResponse extends BackendResponse {\r\n  maxSize: string;\r\n}\r\n\r\nfunction fetchMaxServerUploadSize(): Promise<FetchMaxServerUploadSizeResponse> {\r\n  return apiClient\r\n    .get('uploads/server-max-file-size')\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useMaxServerUploadSize() {\r\n  return useQuery({\r\n    queryKey: ['MaxServerUploadSize'],\r\n    queryFn: () => fetchMaxServerUploadSize(),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  refreshToken: string;\r\n}\r\n\r\ninterface Payload {\r\n  app_key: string;\r\n  app_secret: string;\r\n  access_code: string;\r\n}\r\n\r\nexport function useGenerateDropboxRefreshToken() {\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => generateToken(props),\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction generateToken(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('settings/uploading/dropbox-refresh-token', payload)\r\n    .then(r => r.data);\r\n}\r\n","import {Fragment} from 'react';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {CredentialFormProps} from '../uploading-settings';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {useForm, useFormContext} from 'react-hook-form';\r\nimport {Form} from '@ui/forms/form';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {AdminSettings} from '../../../admin-settings';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {useGenerateDropboxRefreshToken} from './use-generate-dropbox-refresh-token';\r\n\r\nexport function DropboxForm({isInvalid}: CredentialFormProps) {\r\n  const {watch, setValue} = useFormContext<AdminSettings>();\r\n  const appKey = watch('server.storage_dropbox_app_key');\r\n  const appSecret = watch('server.storage_dropbox_app_secret');\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-20\"\r\n        name=\"server.storage_dropbox_app_key\"\r\n        label={<Trans message=\"Dropbox application key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-20\"\r\n        name=\"server.storage_dropbox_app_secret\"\r\n        label={<Trans message=\"Dropbox application secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-20\"\r\n        name=\"server.storage_dropbox_refresh_token\"\r\n        label={<Trans message=\"Dropbox refresh token\" />}\r\n        required\r\n      />\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        onClose={refreshToken => {\r\n          if (refreshToken) {\r\n            setValue('server.storage_dropbox_refresh_token', refreshToken);\r\n          }\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          size=\"xs\"\r\n          disabled={!appKey || !appSecret}\r\n        >\r\n          <Trans message=\"Get dropbox refresh token\" />\r\n        </Button>\r\n        <DropboxRefreshTokenDialog appKey={appKey!} appSecret={appSecret!} />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface DropboxRefreshTokenDialogProps {\r\n  appKey: string;\r\n  appSecret: string;\r\n}\r\nfunction DropboxRefreshTokenDialog({\r\n  appKey,\r\n  appSecret,\r\n}: DropboxRefreshTokenDialogProps) {\r\n  const form = useForm<{accessCode: string}>();\r\n  const {formId, close} = useDialogContext();\r\n  const generateRefreshToken = useGenerateDropboxRefreshToken();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Connected dropbox account\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={data => {\r\n            generateRefreshToken.mutate(\r\n              {\r\n                app_key: appKey,\r\n                app_secret: appSecret,\r\n                access_code: data.accessCode,\r\n              },\r\n              {\r\n                onSuccess: response => {\r\n                  close(response.refreshToken);\r\n                },\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          <div className=\"mb-20 border-b pb-20\">\r\n            <div className=\"mb-10 text-sm text-muted\">\r\n              <Trans message=\"Click the 'get access code' button to get dropbox access code, then paste it into the field below.\" />\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              color=\"primary\"\r\n              size=\"xs\"\r\n              elementType=\"a\"\r\n              target=\"_blank\"\r\n              href={`https://www.dropbox.com/oauth2/authorize?client_id=${appKey}&token_access_type=offline&response_type=code`}\r\n            >\r\n              <Trans message=\"Get access code\" />\r\n            </Button>\r\n          </div>\r\n          <FormTextField\r\n            name=\"accessCode\"\r\n            label={<Trans message=\"Dropbox access code\" />}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          form={formId}\r\n          type=\"submit\"\r\n          disabled={!appKey || !appSecret || generateRefreshToken.isPending}\r\n        >\r\n          <Trans message=\"Connect\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {toast} from '@ui/toast/toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useUploadS3Cors() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: () => uploadCors(),\r\n    onSuccess: () => {\r\n      toast(trans(message('CORS file updated')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction uploadCors(): Promise<Response> {\r\n  return apiClient.post('s3/cors/upload').then(r => r.data);\r\n}\r\n","import {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {FormRadioGroup} from '@ui/forms/radio-group/radio-group';\r\nimport {FormRadio} from '@ui/forms/radio-group/radio';\r\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\nimport {JsonChipField} from '@common/admin/settings/form/json-chip-field';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useMaxServerUploadSize} from '@common/admin/settings/pages/uploading-settings/max-server-upload-size';\r\nimport {SectionHelper} from '@common/ui/other/section-helper';\r\nimport {useForm, useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {FormSelect} from '@ui/forms/select/select';\r\nimport {DropboxForm} from '@common/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form';\r\nimport React, {Fragment} from 'react';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useUploadS3Cors} from '@common/admin/settings/pages/uploading-settings/use-upload-s3-cors';\r\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Item} from '@ui/forms/listbox/item';\r\n\r\nexport function UploadingSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Uploading\" />}\r\n      description={\r\n        <Trans message=\"Configure size and type of files that users are able to upload. This will affect all uploads across the site.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const {trans} = useTrans();\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        uploads: {\r\n          max_size: data.client.uploads.max_size ?? 0,\r\n          chunk_size: data.client.uploads.chunk_size ?? 0,\r\n          available_space: data.client.uploads.available_space ?? 0,\r\n          allowed_extensions: data.client.uploads.allowed_extensions ?? [],\r\n          blocked_extensions: data.client.uploads.blocked_extensions ?? [],\r\n          s3_direct_upload: data.client.uploads.s3_direct_upload ?? false,\r\n        },\r\n      },\r\n      server: {\r\n        static_file_delivery: data.server.static_file_delivery ?? '',\r\n        uploads_disk_driver: data.server.uploads_disk_driver ?? 'local',\r\n        public_disk_driver: data.server.public_disk_driver ?? 'local',\r\n\r\n        // s3\r\n        storage_s3_key: data.server.storage_s3_key ?? '',\r\n        storage_s3_secret: data.server.storage_s3_secret ?? '',\r\n        storage_s3_region: data.server.storage_s3_region ?? '',\r\n        storage_s3_bucket: data.server.storage_s3_bucket ?? '',\r\n        storage_s3_endpoint: data.server.storage_s3_endpoint ?? '',\r\n\r\n        // digitalocean spaces\r\n        storage_digitalocean_key: data.server.storage_digitalocean_key ?? '',\r\n        storage_digitalocean_secret:\r\n          data.server.storage_digitalocean_secret ?? '',\r\n        storage_digitalocean_region:\r\n          data.server.storage_digitalocean_region ?? '',\r\n        storage_digitalocean_bucket:\r\n          data.server.storage_digitalocean_bucket ?? '',\r\n\r\n        // backblaze\r\n        storage_backblaze_key: data.server.storage_backblaze_key ?? '',\r\n        storage_backblaze_secret: data.server.storage_backblaze_secret ?? '',\r\n        storage_backblaze_region: data.server.storage_backblaze_region ?? '',\r\n        storage_backblaze_bucket: data.server.storage_backblaze_bucket ?? '',\r\n\r\n        // ftp\r\n        storage_ftp_host: data.server.storage_ftp_host ?? '',\r\n        storage_ftp_username: data.server.storage_ftp_username ?? '',\r\n        storage_ftp_password: data.server.storage_ftp_password ?? '',\r\n        storage_ftp_root: data.server.storage_ftp_root ?? '',\r\n        storage_ftp_port: data.server.storage_ftp_port ?? '21',\r\n        storage_ftp_passive: data.server.storage_ftp_passive ?? false,\r\n        storage_ftp_ssl: data.server.storage_ftp_ssl ?? false,\r\n\r\n        // dropbox\r\n        storage_dropbox_app_key: data.server.storage_dropbox_app_key ?? '',\r\n        storage_dropbox_app_secret:\r\n          data.server.storage_dropbox_app_secret ?? '',\r\n        storage_dropbox_refresh_token:\r\n          data.server.storage_dropbox_refresh_token ?? '',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <PrivateUploadSection />\r\n      <PublicUploadSection />\r\n      <CredentialsSection />\r\n      <SettingsErrorGroup name=\"static_delivery_group\">\r\n        {isInvalid => (\r\n          <FormRadioGroup\r\n            invalid={isInvalid}\r\n            size=\"sm\"\r\n            name=\"server.static_file_delivery\"\r\n            orientation=\"vertical\"\r\n            label={<Trans message=\"File delivery optimization\" />}\r\n            description={\r\n              <Trans message=\"Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled, it will reduce server memory and CPU usage when previewing or downloading files, especially for large files.\" />\r\n            }\r\n          >\r\n            <FormRadio value=\"\">\r\n              <Trans message=\"None\" />\r\n            </FormRadio>\r\n            <FormRadio value=\"xsendfile\">\r\n              <Trans message=\"X-Sendfile (Apache)\" />\r\n            </FormRadio>\r\n            <FormRadio value=\"xaccel\">\r\n              <Trans message=\"X-Accel (Nginx)\" />\r\n            </FormRadio>\r\n          </FormRadioGroup>\r\n        )}\r\n      </SettingsErrorGroup>\r\n      <FormFileSizeField\r\n        className=\"mb-30\"\r\n        name=\"client.uploads.chunk_size\"\r\n        min={1}\r\n        label={<Trans message=\"Chunk size\" />}\r\n        placeholder=\"Infinity\"\r\n        description={\r\n          <Trans message=\"Size (in bytes) for each file chunk. It should only be changed if there is a maximum upload size on your server or proxy (for example cloudflare). If chunk size is larger then limit on the server, uploads will fail.\" />\r\n        }\r\n      />\r\n      <MaxUploadSizeSection />\r\n      <SettingsSeparator />\r\n      <FormFileSizeField\r\n        min={1}\r\n        name=\"client.uploads.max_size\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Maximum file size\" />}\r\n        description={\r\n          <Trans message=\"Maximum size (in bytes) for a single file user can upload.\" />\r\n        }\r\n      />\r\n      <FormFileSizeField\r\n        min={1}\r\n        name=\"client.uploads.available_space\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Available space\" />}\r\n        description={\r\n          <Trans message=\"Disk space (in bytes) each user uploads are allowed to take up. This can be overridden per user.\" />\r\n        }\r\n      />\r\n      <JsonChipField\r\n        name=\"client.uploads.allowed_extensions\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Allowed extensions\" />}\r\n        placeholder={trans(message('Add extension...'))}\r\n        description={\r\n          <Trans message=\"List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.\" />\r\n        }\r\n      />\r\n      <JsonChipField\r\n        name=\"client.uploads.blocked_extensions\"\r\n        label={<Trans message=\"Blocked extensions\" />}\r\n        placeholder={trans(message('Add extension...'))}\r\n        description={\r\n          <Trans message=\"Prevent uploading of these file types, even if they are allowed above.\" />\r\n        }\r\n      />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction MaxUploadSizeSection() {\r\n  const {data} = useMaxServerUploadSize();\r\n  return (\r\n    <SectionHelper\r\n      color=\"warning\"\r\n      description={\r\n        <Trans\r\n          message=\"Maximum upload size on your server currently is set to <b>:size</b>\"\r\n          values={{size: data?.maxSize, b: chunks => <b>{chunks}</b>}}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction PrivateUploadSection() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const isEnabled = watch('server.uploads_disk_driver');\r\n\r\n  if (!isEnabled) return null;\r\n\r\n  return (\r\n    <FormSelect\r\n      className=\"mb-30\"\r\n      selectionMode=\"single\"\r\n      name=\"server.uploads_disk_driver\"\r\n      label={<Trans message=\"User Uploads Storage Method\" />}\r\n      description={\r\n        <Trans message=\"Where should user private file uploads be stored.\" />\r\n      }\r\n      onSelectionChange={() => {\r\n        clearErrors();\r\n      }}\r\n    >\r\n      <Item value=\"local\">\r\n        <Trans message=\"Local Disk (Default)\" />\r\n      </Item>\r\n      <Item value=\"ftp\">FTP</Item>\r\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\r\n      <Item value=\"backblaze_s3\">Backblaze</Item>\r\n      <Item value=\"s3\">Amazon S3 (Or compatible service)</Item>\r\n      <Item value=\"dropbox\">Dropbox</Item>\r\n      <Item value=\"rackspace\">Rackspace</Item>\r\n    </FormSelect>\r\n  );\r\n}\r\n\r\nfunction PublicUploadSection() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const isEnabled = watch('server.public_disk_driver');\r\n\r\n  if (!isEnabled) return null;\r\n\r\n  return (\r\n    <FormSelect\r\n      label={<Trans message=\"Public Uploads Storage Method\" />}\r\n      selectionMode=\"single\"\r\n      name=\"server.public_disk_driver\"\r\n      description={\r\n        <Trans message=\"Where should user public uploads (like avatars) be stored.\" />\r\n      }\r\n      onSelectionChange={() => {\r\n        clearErrors();\r\n      }}\r\n    >\r\n      <Item value=\"local\">\r\n        <Trans message=\"Local Disk (Default)\" />\r\n      </Item>\r\n      <Item value=\"s3\">Amazon S3</Item>\r\n      <Item value=\"ftp\">FTP</Item>\r\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\r\n      <Item value=\"backblaze_s3\">Backblaze</Item>\r\n    </FormSelect>\r\n  );\r\n}\r\n\r\nfunction CredentialsSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const drives = [\r\n    watch('server.uploads_disk_driver'),\r\n    watch('server.public_disk_driver'),\r\n  ];\r\n\r\n  if (drives[0] === 'local' && drives[1] === 'local') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <SettingsErrorGroup separatorBottom={false} name=\"storage_group\">\r\n      {isInvalid => {\r\n        if (drives.includes('s3')) {\r\n          return <S3Form isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('ftp')) {\r\n          return <FtpForm isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('dropbox')) {\r\n          return <DropboxForm isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('digitalocean_s3')) {\r\n          return <DigitalOceanForm isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('backblaze_s3')) {\r\n          return <BackblazeForm isInvalid={isInvalid} />;\r\n        }\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nexport interface CredentialFormProps {\r\n  isInvalid: boolean;\r\n}\r\nfunction S3Form({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_key\"\r\n        label={<Trans message=\"Amazon S3 key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_secret\"\r\n        label={<Trans message=\"Amazon S3 secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_region\"\r\n        label={<Trans message=\"Amazon S3 region\" />}\r\n        placeholder=\"us-east-1\"\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_bucket\"\r\n        label={<Trans message=\"Amazon S3 bucket\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        name=\"server.storage_s3_endpoint\"\r\n        label={<Trans message=\"Amazon S3 endpoint\" />}\r\n        description={\r\n          <Trans message=\"Only change endpoint if you are using another S3 compatible storage service.\" />\r\n        }\r\n      />\r\n      <S3DirectUploadField invalid={isInvalid} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction DigitalOceanForm({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_key\"\r\n        label={<Trans message=\"DigitalOcean key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_secret\"\r\n        label={<Trans message=\"DigitalOcean secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_region\"\r\n        label={<Trans message=\"DigitalOcean region\" />}\r\n        pattern=\"[a-z0-9\\-]+\"\r\n        placeholder=\"us-east-1\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_bucket\"\r\n        label={<Trans message=\"DigitalOcean bucket\" />}\r\n        required\r\n      />\r\n      <S3DirectUploadField invalid={isInvalid} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction BackblazeForm({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_key\"\r\n        label={<Trans message=\"Backblaze KeyID\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_secret\"\r\n        label={<Trans message=\"Backblaze applicationKey\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_region\"\r\n        label={<Trans message=\"Backblaze Region\" />}\r\n        pattern=\"[a-z0-9\\-]+\"\r\n        placeholder=\"us-west-002\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_bucket\"\r\n        label={<Trans message=\"Backblaze bucket name\" />}\r\n        required\r\n      />\r\n      <S3DirectUploadField invalid={isInvalid} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface S3DirectUploadFieldProps {\r\n  invalid: boolean;\r\n}\r\nfunction S3DirectUploadField({invalid}: S3DirectUploadFieldProps) {\r\n  const uploadCors = useUploadS3Cors();\r\n  const {data: defaultSettings} = useAdminSettings();\r\n\r\n  const s3DriverEnabled =\r\n    defaultSettings?.server.uploads_disk_driver?.endsWith('s3') ||\r\n    defaultSettings?.server.public_disk_driver?.endsWith('s3');\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormSwitch\r\n        className=\"mt-30\"\r\n        invalid={invalid}\r\n        name=\"client.uploads.s3_direct_upload\"\r\n        description={\r\n          <div>\r\n            <p>\r\n              <Trans message=\"Upload files directly from the browser to s3 without going through the server. It will save on server bandwidth and should result in faster upload times. This should be enabled, unless storage provider does not support multipart uploads.\" />\r\n            </p>\r\n            <p className=\"mt-10\">\r\n              <Trans message=\"If s3 provider is not configured to allow uploads from browser, this can be done automatically via CORS button below, when valid credentials are saved.\" />\r\n            </p>\r\n          </div>\r\n        }\r\n      >\r\n        <Trans message=\"Direct upload\" />\r\n      </FormSwitch>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        size=\"xs\"\r\n        className=\"mt-20\"\r\n        onClick={() => {\r\n          uploadCors.mutate();\r\n        }}\r\n        disabled={!s3DriverEnabled || uploadCors.isPending}\r\n      >\r\n        <Trans message=\"Configure CORS\" />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction FtpForm({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_host\"\r\n        label={<Trans message=\"FTP hostname\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_username\"\r\n        label={<Trans message=\"FTP username\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_password\"\r\n        label={<Trans message=\"FTP password\" />}\r\n        type=\"password\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_root\"\r\n        label={<Trans message=\"FTP directory\" />}\r\n        placeholder=\"/\"\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_port\"\r\n        label={<Trans message=\"FTP port\" />}\r\n        type=\"number\"\r\n        min={0}\r\n        placeholder=\"21\"\r\n      />\r\n      <FormSwitch\r\n        invalid={isInvalid}\r\n        name=\"server.storage_ftp_passive\"\r\n        className=\"mb-30\"\r\n      >\r\n        <Trans message=\"Passive\" />\r\n      </FormSwitch>\r\n      <FormSwitch invalid={isInvalid} name=\"server.storage_ftp_ssl\">\r\n        <Trans message=\"SSL\" />\r\n      </FormSwitch>\r\n    </>\r\n  );\r\n}\r\n","import {Fragment} from 'react';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport interface MailgunCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function MailgunCredentials({isInvalid}: MailgunCredentialsProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mailgun_domain\"\r\n        label={<Trans message=\"Mailgun domain\" />}\r\n        description={\r\n          <Trans message=\"Usually the domain of your site (site.com)\" />\r\n        }\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mailgun_secret\"\r\n        label={<Trans message=\"Mailgun API key\" />}\r\n        description={<Trans message=\"Should start with `key-`\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        name=\"server.mailgun_endpoint\"\r\n        label={<Trans message=\"Mailgun endpoint\" />}\r\n        description={\r\n          <Trans message=\"Can be left empty, if your mailgun account is in the US region.\" />\r\n        }\r\n        placeholder=\"api.eu.mailgun.net\"\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormSelect} from '@ui/forms/select/select';\r\nimport {Item} from '@ui/forms/listbox/item';\r\n\r\nexport interface SmtpCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function SmtpCredentials({isInvalid}: SmtpCredentialsProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mail_host\"\r\n        label={<Trans message=\"SMTP host\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mail_username\"\r\n        label={<Trans message=\"SMTP username\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        type=\"password\"\r\n        name=\"server.mail_password\"\r\n        label={<Trans message=\"SMTP password\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        type=\"number\"\r\n        name=\"server.mail_port\"\r\n        label={<Trans message=\"SMTP port\" />}\r\n      />\r\n      <FormSelect\r\n        selectionMode=\"single\"\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mail_encryption\"\r\n        label={<Trans message=\"SMTP encryption\" />}\r\n      >\r\n        <Item value=\"\">\r\n          <Trans message=\"None\" />\r\n        </Item>\r\n        <Item value=\"tls\">\r\n          <Trans message=\"TLS\" />\r\n        </Item>\r\n        <Item value=\"ssl\">\r\n          <Trans message=\"SSL\" />\r\n        </Item>\r\n      </FormSelect>\r\n    </>\r\n  );\r\n}\r\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Fragment} from 'react';\r\n\r\nexport interface SesCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function SesCredentials({isInvalid}: SesCredentialsProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.ses_key\"\r\n        label={<Trans message=\"SES key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.ses_secret\"\r\n        label={<Trans message=\"SES secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        name=\"server.ses_region\"\r\n        label={<Trans message=\"SES region\" />}\r\n        placeholder=\"us-east-1\"\r\n        required\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport interface PostmarkCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function PostmarkCredentials({isInvalid}: PostmarkCredentialsProps) {\r\n  return (\r\n    <FormTextField\r\n      invalid={isInvalid}\r\n      name=\"server.postmark_token\"\r\n      label={<Trans message=\"Postmark token\" />}\r\n      required\r\n    />\r\n  );\r\n}\r\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\r\n\r\nexport const GmailIcon = createSvgIcon(\r\n  [\r\n    <path\r\n      key=\"0\"\r\n      fill=\"#4caf50\"\r\n      d=\"M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z\"\r\n    />,\r\n    <path\r\n      key=\"1\"\r\n      fill=\"#1e88e5\"\r\n      d=\"M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z\"\r\n    />,\r\n    <polygon\r\n      key=\"2\"\r\n      fill=\"#e53935\"\r\n      points=\"35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17\"\r\n    />,\r\n    <path\r\n      key=\"3\"\r\n      fill=\"#c62828\"\r\n      d=\"M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z\"\r\n    />,\r\n    <path\r\n      key=\"4\"\r\n      fill=\"#fbc02d\"\r\n      d=\"M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z\"\r\n    />,\r\n  ],\r\n  'Gmail',\r\n  '0 0 48 48',\r\n);\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '../../admin-settings';\r\nimport {useSocialLogin} from '@common/auth/requests/use-social-login';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {GmailIcon} from './gmail-icon';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Fragment} from 'react';\r\n\r\nexport function ConnectGmailPanel() {\r\n  const {watch, setValue} = useFormContext<AdminSettings>();\r\n  const {connectSocial} = useSocialLogin();\r\n  const connectedEmail = watch('server.connectedGmailAccount');\r\n\r\n  const handleGmailConnect = async () => {\r\n    const e = await connectSocial('secure/settings/mail/gmail/connect');\r\n    if (e?.status === 'SUCCESS') {\r\n      const email = (e.callbackData as any).profile.email;\r\n      setValue('server.connectedGmailAccount', email);\r\n      toast(message('Connected gmail account: :email', {values: {email}}));\r\n    }\r\n  };\r\n\r\n  const connectButton = (\r\n    <Button\r\n      variant=\"outline\"\r\n      color=\"primary\"\r\n      startIcon={<GmailIcon />}\r\n      onClick={() => handleGmailConnect()}\r\n    >\r\n      <Trans message=\"Connect gmail account\" />\r\n    </Button>\r\n  );\r\n\r\n  const reconnectPanel = (\r\n    <div className=\"flex items-center gap-14 rounded border bg-alt px-14 py-6 text-sm\">\r\n      <GmailIcon size=\"lg\" />\r\n      {connectedEmail}\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        className=\"ml-auto\"\r\n        onClick={() => handleGmailConnect()}\r\n      >\r\n        <Trans message=\"Reconnect\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-6 text-sm\">\r\n        <Trans message=\"Gmail account\" />\r\n      </div>\r\n      {connectedEmail ? reconnectPanel : connectButton}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {ComponentType, Fragment} from 'react';\r\nimport {MailgunCredentials} from './mailgun-credentials';\r\nimport {SmtpCredentials} from './smtp-credentials';\r\nimport {SesCredentials} from './ses-credentials';\r\nimport {PostmarkCredentials} from './postmark-credentials';\r\nimport {ConnectGmailPanel} from './connect-gmail-panel';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\r\n\r\nexport function OutgoingMailGroup() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n\r\n  const selectedDriver = watch('server.mail_driver');\r\n  const credentialForms: ComponentType<{isInvalid: boolean}>[] = [];\r\n\r\n  if (selectedDriver === 'mailgun') {\r\n    credentialForms.push(MailgunCredentials);\r\n  }\r\n  if (selectedDriver === 'smtp') {\r\n    credentialForms.push(SmtpCredentials);\r\n  }\r\n  if (selectedDriver === 'ses') {\r\n    credentialForms.push(SesCredentials);\r\n  }\r\n  if (selectedDriver === 'postmark') {\r\n    credentialForms.push(PostmarkCredentials);\r\n  }\r\n  if (selectedDriver === 'gmailApi') {\r\n    credentialForms.push(ConnectGmailPanel);\r\n  }\r\n\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"mail_group\"\r\n    >\r\n      {isInvalid => (\r\n        <Fragment>\r\n          <FormSelect\r\n            onSelectionChange={() => {\r\n              clearErrors();\r\n            }}\r\n            invalid={isInvalid}\r\n            selectionMode=\"single\"\r\n            name=\"server.mail_driver\"\r\n            label={<Trans message=\"Outgoing mail method\" />}\r\n            description={\r\n              <div>\r\n                <Trans message=\"Which method should be used for sending outgoing application emails (like registration confirmation)\" />\r\n                <LearnMoreLink\r\n                  className=\"mt-8\"\r\n                  link=\"https://support.vebto.com/hc/articles/42/44/76/outgoing-emails\"\r\n                />\r\n              </div>\r\n            }\r\n          >\r\n            <Option value=\"mailgun\">Mailgun</Option>\r\n            <Option value=\"gmailApi\">Gmail Api</Option>\r\n            <Option value=\"smtp\">SMTP</Option>\r\n            <Option value=\"postmark\">Postmark</Option>\r\n            <Option value=\"ses\">Ses (Amazon Simple Email Service)</Option>\r\n            <Option value=\"sendmail\">SendMail</Option>\r\n            <Option value=\"log\">Log (Email will be saved to error log)</Option>\r\n          </FormSelect>\r\n          {credentialForms.length ? (\r\n            <div className=\"mt-30\">\r\n              {credentialForms.map((CredentialsForm, index) => (\r\n                <CredentialsForm key={index} isInvalid={isInvalid} />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </Fragment>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {ExternalLink} from '@ui/buttons/external-link';\r\nimport {SectionHelper} from '@common/ui/other/section-helper';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {OutgoingMailGroup} from './outgoing-mail-group';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\nimport React from 'react';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nexport function OutgoingEmailSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Outgoing email settings\" />}\r\n      description={\r\n        <Trans message=\"Change outgoing email handlers, email credentials and other related settings.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      server: {\r\n        mail_from_address: data.server.mail_from_address ?? '',\r\n        mail_from_name: data.server.mail_from_name ?? '',\r\n        mail_driver: data.server.mail_driver ?? '',\r\n        mailgun_domain: data.server.mailgun_domain ?? '',\r\n        mailgun_secret: data.server.mailgun_secret ?? '',\r\n        mailgun_endpoint: data.server.mailgun_endpoint ?? '',\r\n        mail_host: data.server.mail_host ?? '',\r\n        mail_username: data.server.mail_username ?? '',\r\n        mail_password: data.server.mail_password ?? '',\r\n        mail_port: data.server.mail_port ?? '',\r\n        mail_encryption: data.server.mail_encryption ?? '',\r\n        ses_key: data.server.ses_key ?? '',\r\n        ses_secret: data.server.ses_secret ?? '',\r\n        ses_region: data.server.ses_region ?? '',\r\n        postmark_token: data.server.postmark_token ?? '',\r\n        connectedGmailAccount: data.server.connectedGmailAccount ?? '',\r\n      },\r\n      client: {\r\n        mail: {\r\n          contact_page_address: data.client.mail?.contact_page_address ?? '',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <FormTextField\r\n        id=\"outgoing-emails\"\r\n        className=\"mb-30\"\r\n        type=\"email\"\r\n        name=\"server.mail_from_address\"\r\n        label={<Trans message=\"From address\" />}\r\n        description={\r\n          <Trans message=\"All outgoing application emails will be sent from this email address.\" />\r\n        }\r\n        required\r\n      />\r\n      <ContactAddressSection />\r\n      <FormTextField\r\n        className=\"mb-30\"\r\n        name=\"server.mail_from_name\"\r\n        label={<Trans message=\"From name\" />}\r\n        description={\r\n          <Trans message=\"All outgoing application emails will be sent using this name.\" />\r\n        }\r\n        required\r\n      />\r\n      <SectionHelper\r\n        color=\"warning\"\r\n        description={\r\n          <Trans message=\"Your selected mail method must be authorized to send emails using this address and name.\" />\r\n        }\r\n      />\r\n      <SettingsSeparator />\r\n      <OutgoingMailGroup />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction ContactAddressSection() {\r\n  const {base_url} = useSettings();\r\n  const contactPageUrl = `${base_url}/contact`;\r\n  const link = (\r\n    <ExternalLink href={contactPageUrl}>{contactPageUrl}</ExternalLink>\r\n  );\r\n  return (\r\n    <FormTextField\r\n      className=\"mb-30\"\r\n      type=\"email\"\r\n      name=\"client.mail.contact_page_address\"\r\n      label={<Trans message=\"Contact page address\" />}\r\n      description={\r\n        <Trans\r\n          values={{\r\n            contactPageUrl: link,\r\n          }}\r\n          message=\"Where emails from :contactPageUrl page should be sent to.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {message} from '@ui/i18n/message';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nfunction clearCache(): Promise<Response> {\r\n  return apiClient.post('cache/flush').then(r => r.data);\r\n}\r\n\r\nexport function useClearCache() {\r\n  return useMutation({\r\n    mutationFn: () => clearCache(),\r\n    onSuccess: () => {\r\n      toast(message('Cache cleared'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport React, {ComponentType, Fragment} from 'react';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {useClearCache} from '@common/admin/settings/pages/cache-settings/clear-cache';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {SectionHelper} from '@common/ui/other/section-helper';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\n\r\nexport function CacheSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Cache settings\" />}\r\n      description={\r\n        <Trans message=\"Select cache provider and manually clear cache.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const clearCache = useClearCache();\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      server: {\r\n        cache_driver: data.server.cache_driver ?? 'file',\r\n        memcached_host: data.server.memcached_host ?? '',\r\n        memcached_port: data.server.memcached_port ?? '',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <CacheSelect />\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n        color=\"primary\"\r\n        disabled={clearCache.isPending}\r\n        onClick={() => clearCache.mutate()}\r\n      >\r\n        <Trans message=\"Clear cache\" />\r\n      </Button>\r\n      <SectionHelper\r\n        color=\"warning\"\r\n        className=\"mt-30\"\r\n        description={\r\n          <Trans\r\n            message={\r\n              '\"File\" is the best option for most cases and should not be changed, unless you are familiar with another cache method and have it set up on the server already.'\r\n            }\r\n          />\r\n        }\r\n      />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction CacheSelect() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const cacheDriver = watch('server.cache_driver');\r\n\r\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\r\n  if (cacheDriver === 'memcached') {\r\n    CredentialSection = MemcachedCredentials;\r\n  }\r\n\r\n  return (\r\n    <SettingsErrorGroup separatorTop={false} name=\"cache_group\">\r\n      {isInvalid => {\r\n        return (\r\n          <>\r\n            <FormSelect\r\n              invalid={isInvalid}\r\n              onSelectionChange={() => clearErrors()}\r\n              selectionMode=\"single\"\r\n              name=\"server.cache_driver\"\r\n              label={<Trans message=\"Cache method\" />}\r\n              description={\r\n                <Trans message=\"Which method should be used for storing and retrieving cached items.\" />\r\n              }\r\n            >\r\n              <Option value=\"file\">\r\n                <Trans message=\"File (Default)\" />\r\n              </Option>\r\n              <Option value=\"array\">\r\n                <Trans message=\"None\" />\r\n              </Option>\r\n              <Option value=\"apc\">APC</Option>\r\n              <Option value=\"memcached\">Memcached</Option>\r\n              <Option value=\"redis\">Redis</Option>\r\n            </FormSelect>\r\n            {CredentialSection && (\r\n              <div className=\"mt-30\">\r\n                <CredentialSection isInvalid={isInvalid} />\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\ninterface CredentialProps {\r\n  isInvalid: boolean;\r\n}\r\nfunction MemcachedCredentials({isInvalid}: CredentialProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.memcached_host\"\r\n        label={<Trans message=\"Memcached host\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        type=\"number\"\r\n        name=\"server.memcached_port\"\r\n        label={<Trans message=\"Memcached port\" />}\r\n        required\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SectionHelper} from '@common/ui/other/section-helper';\r\nimport {ExternalLink} from '@ui/buttons/external-link';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport React from 'react';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\n\r\nexport function LoggingSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Error logging\" />}\r\n      description={\r\n        <Trans message=\"Configure site error logging and related 3rd party integrations.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      server: {\r\n        sentry_dsn: data.server.sentry_dsn ?? '',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <SentrySection />\r\n      <SectionHelper\r\n        className=\"mt-30\"\r\n        color=\"positive\"\r\n        description={\r\n          <Trans\r\n            values={{\r\n              a: parts => (\r\n                <ExternalLink href=\"https://sentry.io\">{parts}</ExternalLink>\r\n              ),\r\n            }}\r\n            message=\"<a>Sentry</a> integration provides real-time error tracking and helps identify and fix issues when site is in production.\"\r\n          />\r\n        }\r\n      />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction SentrySection() {\r\n  const {clearErrors} = useFormContext();\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"logging_group\"\r\n    >\r\n      {isInvalid => {\r\n        return (\r\n          <FormTextField\r\n            onChange={() => clearErrors()}\r\n            invalid={isInvalid}\r\n            name=\"server.sentry_dsn\"\r\n            type=\"url\"\r\n            minLength={30}\r\n            label={<Trans message=\"Sentry DSN\" />}\r\n          />\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\ninterface Response extends BackendResponse {\r\n  failedJobs: number;\r\n  jobsPerMinute: number;\r\n  pausedMasters: number;\r\n  periods: {\r\n    failedJobs: number;\r\n    recentJobs: number;\r\n  };\r\n  processes: number;\r\n  queueWithMaxRuntime?: string;\r\n  queueWithMaxThroughput?: string;\r\n  recentJobs: number;\r\n  status: 'running' | 'inactive' | 'paused';\r\n}\r\n\r\nexport function useQueueStats() {\r\n  return useQuery({\r\n    queryKey: ['queue-stats'],\r\n    queryFn: () => fetchStats(),\r\n    refetchInterval: 5000, // Poll every 5s\r\n  });\r\n}\r\n\r\nfunction fetchStats() {\r\n  return apiClient\r\n    .get<Response>('horizon/api/stats')\r\n    .then(response => response.data);\r\n}\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport React, {ComponentType, Fragment} from 'react';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useQueueStats} from '@common/admin/settings/requests/use-queue-stats';\r\nimport clsx from 'clsx';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {OpenInNewIcon} from '@ui/icons/material/OpenInNew';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\n\r\nexport function QueueSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Queue\" />}\r\n      description={\r\n        <Fragment>\r\n          <Trans message=\"Queues allow to defer time consuming tasks, such as sending an email, until a later time. They are fully optional and do not provide any additional functionality.\" />\r\n          <LearnMoreLink\r\n            className=\"mt-6 text-sm\"\r\n            link=\"https://support.vebto.com/hc/articles/224/queues\"\r\n          />\r\n        </Fragment>\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      server: {\r\n        queue_driver: data.server.queue_driver ?? 'sync',\r\n        sqs_queue_key: data.server.sqs_queue_key ?? '',\r\n        sqs_queue_secret: data.server.sqs_queue_secret ?? '',\r\n        sqs_queue_prefix: data.server.sqs_queue_prefix ?? '',\r\n        sqs_queue_name: data.server.sqs_queue_name ?? '',\r\n        sqs_queue_region: data.server.sqs_queue_region ?? '',\r\n      },\r\n    },\r\n  });\r\n\r\n  const selectedDriver = form.watch('server.queue_driver');\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      {selectedDriver !== 'sync' && <StatusWidget />}\r\n      <DriverSection />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction StatusWidget() {\r\n  const {base_url} = useSettings();\r\n  const {data} = useQueueStats();\r\n  const status = data?.status;\r\n\r\n  return (\r\n    <div className=\"mb-30 flex h-32 items-center justify-between gap-14\">\r\n      {status && (\r\n        <Fragment>\r\n          <div\r\n            className={clsx(\r\n              'min-w-108 flex w-max items-center gap-8 rounded-button px-10 py-4 text-sm capitalize',\r\n              status === 'running' && 'bg-positive-lighter',\r\n              status === 'inactive' && 'bg-danger-lighter',\r\n              status === 'paused' && 'bg-chip',\r\n            )}\r\n          >\r\n            <div\r\n              className={clsx(\r\n                'h-10 w-10 rounded-full',\r\n                status === 'running' && 'bg-positive',\r\n                status === 'inactive' && 'bg-danger',\r\n                status === 'paused' && 'bg-chip',\r\n              )}\r\n            />\r\n            <Trans message={`Worker ${status}`} />\r\n          </div>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"xs\"\r\n            elementType=\"a\"\r\n            href={`${base_url}/horizon`}\r\n            target=\"_blank\"\r\n            endIcon={<OpenInNewIcon />}\r\n          >\r\n            <Trans message=\"Monitor\" />\r\n          </Button>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DriverSection() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const queueDriver = watch('server.queue_driver');\r\n\r\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\r\n  if (queueDriver === 'sqs') {\r\n    CredentialSection = SqsCredentials;\r\n  }\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"queue_group\"\r\n    >\r\n      {isInvalid => {\r\n        return (\r\n          <>\r\n            <FormSelect\r\n              invalid={isInvalid}\r\n              onSelectionChange={() => {\r\n                clearErrors();\r\n              }}\r\n              selectionMode=\"single\"\r\n              name=\"server.queue_driver\"\r\n              label={<Trans message=\"Queue method\" />}\r\n              required\r\n            >\r\n              <Option value=\"sync\">\r\n                <Trans message=\"None (Default)\" />\r\n              </Option>\r\n              <Option value=\"beanstalkd\">Beanstalkd</Option>\r\n              <Option value=\"database\">\r\n                <Trans message=\"Database\" />\r\n              </Option>\r\n              <Option value=\"sqs\">\r\n                <Trans message=\"SQS (Amazon simple queue service)\" />\r\n              </Option>\r\n              <Option value=\"redis\">Redis</Option>\r\n            </FormSelect>\r\n            {CredentialSection && (\r\n              <div className=\"mt-30\">\r\n                <CredentialSection isInvalid={isInvalid} />\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\ninterface CredentialProps {\r\n  isInvalid: boolean;\r\n}\r\nfunction SqsCredentials({isInvalid}: CredentialProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_key\"\r\n        label={<Trans message=\"SQS queue key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_secret\"\r\n        label={<Trans message=\"SQS queue secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_prefix\"\r\n        label={<Trans message=\"SQS queue prefix\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_name\"\r\n        label={<Trans message=\"SQS queue name\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_region\"\r\n        label={<Trans message=\"SQS queue region\" />}\r\n        required\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {useForm, useFormContext, useWatch} from 'react-hook-form';\r\nimport React, {ComponentType, Fragment} from 'react';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\n\r\nexport function WebsocketSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Websockets\" />}\r\n      description={\r\n        <Fragment>\r\n          <Trans message=\"Configure websockets provider responsible for all realtime functionality on the site.\" />\r\n          <LearnMoreLink\r\n            className=\"mt-6 text-sm\"\r\n            link=\"https://support.vebto.com/hc/articles/224/queues\"\r\n          />\r\n        </Fragment>\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      server: {\r\n        broadcast_driver: data.server.broadcast_driver ?? 'null',\r\n\r\n        // pusher\r\n        pusher_app_id: data.server.pusher_app_id ?? '',\r\n        pusher_app_key: data.server.pusher_app_key ?? '',\r\n        pusher_app_secret: data.server.pusher_app_secret ?? '',\r\n        pusher_app_cluster: data.server.pusher_app_cluster ?? '',\r\n\r\n        // reverb\r\n        reverb_app_id: data.server.reverb_app_id ?? '',\r\n        reverb_app_key: data.server.reverb_app_key ?? '',\r\n        reverb_app_secret: data.server.reverb_app_secret ?? '',\r\n        reverb_host: data.server.reverb_host ?? '',\r\n        reverb_port: data.server.reverb_port ?? '',\r\n        reverb_scheme: data.server.reverb_scheme ?? 'https',\r\n\r\n        // ably\r\n        ably_app_id: data.server.ably_app_id ?? '',\r\n        ably_app_key: data.server.ably_app_key ?? '',\r\n        ably_app_secret: data.server.ably_app_secret ?? '',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <DriverSection />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction DriverSection() {\r\n  const {clearErrors, control} = useFormContext<AdminSettings>();\r\n  const driver = useWatch({\r\n    control,\r\n    name: 'server.broadcast_driver',\r\n  });\r\n\r\n  let CredentialSection: ComponentType<CredentialsProps> | null = null;\r\n  if (driver === 'pusher') {\r\n    CredentialSection = PusherFields;\r\n  } else if (driver === 'ably') {\r\n    CredentialSection = AblyFields;\r\n  }\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"queue_group\"\r\n    >\r\n      {isInvalid => (\r\n        <Fragment>\r\n          <FormSelect\r\n            invalid={isInvalid}\r\n            onSelectionChange={() => clearErrors()}\r\n            selectionMode=\"single\"\r\n            name=\"server.broadcast_driver\"\r\n            label={<Trans message=\"Websockets provider\" />}\r\n            required\r\n          >\r\n            <Option value=\"null\">\r\n              <Trans message=\"None (Disabled)\" />\r\n            </Option>\r\n            <Option value=\"reverb\">Local</Option>\r\n            <Option value=\"pusher\">Pusher</Option>\r\n            <Option value=\"ably\">\r\n              <Trans message=\"Ably\" />\r\n            </Option>\r\n          </FormSelect>\r\n          {CredentialSection && (\r\n            <div className=\"mt-30\">\r\n              <CredentialSection isInvalid={isInvalid} />\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\ninterface CredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nfunction PusherFields({isInvalid}: CredentialsProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        name=\"server.pusher_app_id\"\r\n        label={<Trans message=\"Pusher app ID\" />}\r\n        className=\"mb-30\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        name=\"server.pusher_app_key\"\r\n        label={<Trans message=\"Pusher app key\" />}\r\n        className=\"mb-30\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        name=\"server.pusher_app_secret\"\r\n        label={<Trans message=\"Pusher app secret\" />}\r\n        className=\"mb-30\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        name=\"server.pusher_app_cluster\"\r\n        label={<Trans message=\"Pusher app cluster\" />}\r\n        className=\"mb-30\"\r\n        placeholder=\"mt1\"\r\n        required\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AblyFields({isInvalid}: CredentialsProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        name=\"server.ably_app_id\"\r\n        label={<Trans message=\"Ably app ID\" />}\r\n        className=\"mb-30\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        name=\"server.ably_app_key\"\r\n        label={<Trans message=\"Ably app key\" />}\r\n        className=\"mb-30\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        name=\"server.ably_app_secret\"\r\n        label={<Trans message=\"Ably app secret\" />}\r\n        className=\"mb-30\"\r\n        required\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport React, {Fragment, useContext} from 'react';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\n\r\nexport function RecaptchaSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Recaptcha\" />}\r\n      description={\r\n        <Trans message=\"Configure google recaptcha integration and credentials.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const {settings} = useContext(SiteConfigContext);\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        recaptcha: {\r\n          enable: {\r\n            link_creation:\r\n              data.client.recaptcha?.enable?.link_creation ?? false,\r\n            contact: data.client.recaptcha?.enable?.contact ?? false,\r\n            register: data.client.recaptcha?.enable?.register ?? false,\r\n          },\r\n          site_key: data.client.recaptcha?.site_key ?? '',\r\n          secret_key: data.client.recaptcha?.secret_key ?? '',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      {settings?.showRecaptchaLinkSwitch && (\r\n        <FormSwitch\r\n          className=\"mb-30\"\r\n          name=\"client.recaptcha.enable.link_creation\"\r\n          description={\r\n            <Trans message=\"Enable recaptcha integration when creating links from homepage or user dashboard.\" />\r\n          }\r\n        >\r\n          <Trans message=\"Link creation\" />\r\n        </FormSwitch>\r\n      )}\r\n      <FormSwitch\r\n        className=\"mb-30\"\r\n        name=\"client.recaptcha.enable.contact\"\r\n        description={\r\n          <Trans\r\n            message={'Enable recaptcha integration for \"contact us\" page.'}\r\n          />\r\n        }\r\n      >\r\n        <Trans message=\"Contact page\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        className=\"mb-30\"\r\n        name=\"client.recaptcha.enable.register\"\r\n        description={\r\n          <Trans message=\"Enable recaptcha integration for registration page.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Registration page\" />\r\n      </FormSwitch>\r\n      <RecaptchaSection />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction RecaptchaSection() {\r\n  const {clearErrors} = useFormContext();\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"recaptcha_group\"\r\n    >\r\n      {isInvalid => {\r\n        return (\r\n          <>\r\n            <FormTextField\r\n              className=\"mb-30\"\r\n              onChange={() => {\r\n                clearErrors();\r\n              }}\r\n              invalid={isInvalid}\r\n              name=\"client.recaptcha.site_key\"\r\n              label={<Trans message=\"Recaptcha v3 site key\" />}\r\n            />\r\n            <FormTextField\r\n              onChange={() => {\r\n                clearErrors();\r\n              }}\r\n              invalid={isInvalid}\r\n              name=\"client.recaptcha.secret_key\"\r\n              label={<Trans message=\"Recaptcha v3 secret key\" />}\r\n            />\r\n          </>\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import React, {ChangeEventHandler} from 'react';\r\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\r\nimport {useController} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport {BaseFieldProps} from './base-field-props';\r\nimport {useField} from './use-field';\r\nimport {getInputFieldClassNames} from './get-input-field-class-names';\r\nimport {Field} from './field';\r\nimport {TextFieldProps} from './text-field/text-field';\r\n\r\nexport interface FileFieldProps\r\n  extends Omit<BaseFieldProps, 'type'> {\r\n  onChange?: ChangeEventHandler<'input'>;\r\n  accept?: string;\r\n}\r\nexport const FileField = React.forwardRef<HTMLInputElement, FileFieldProps>(\r\n  (props, ref) => {\r\n    const inputRef = useObjectRef(ref);\r\n\r\n    const {fieldProps, inputProps} = useField({...props, focusRef: inputRef});\r\n\r\n    const inputFieldClassNames = getInputFieldClassNames(props);\r\n\r\n    return (\r\n      <Field ref={ref} fieldClassNames={inputFieldClassNames} {...fieldProps}>\r\n        <input\r\n          type=\"file\"\r\n          ref={inputRef}\r\n          {...inputProps as any}\r\n          className={clsx(\r\n            inputFieldClassNames.input,\r\n            'py-8',\r\n            'file:bg-primary file:text-on-primary file:border-none file:rounded file:text-sm file:font-semibold file:px-10 file:h-24 file:mr-10'\r\n          )}\r\n        />\r\n      </Field>\r\n    );\r\n  }\r\n);\r\n\r\nexport interface FormFileFieldProps extends FileFieldProps {\r\n  name: string;\r\n}\r\nexport function FormFileField({name, ...props}: FormFileFieldProps) {\r\n  const {\r\n    field: {onChange, onBlur, ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const formProps: TextFieldProps = {\r\n    onChange: e => {\r\n      onChange(e.target.files?.[0]);\r\n      setValue(e.target.value);\r\n    },\r\n    onBlur,\r\n    value,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n  };\r\n\r\n  return <FileField ref={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {FormFileField} from '@ui/forms/input-field/file-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React, {Fragment} from 'react';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\n\r\nexport function ReportsSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Analytics\" />}\r\n      description={\r\n        <Trans message=\"Configure google analytics integration and credentials.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      files: {\r\n        certificate: '',\r\n      },\r\n      server: {\r\n        analytics_property_id: data.server.analytics_property_id ?? '',\r\n      },\r\n      client: {\r\n        analytics: {\r\n          tracking_code: data.client.analytics?.tracking_code ?? '',\r\n          gchart_api_key: data.client.analytics?.gchart_api_key ?? '',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <AnalyticsSection />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction AnalyticsSection() {\r\n  const {clearErrors} = useFormContext();\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"analytics_group\"\r\n    >\r\n      {isInvalid => (\r\n        <Fragment>\r\n          <FormFileField\r\n            className=\"mb-30\"\r\n            onChange={() => clearErrors()}\r\n            invalid={isInvalid}\r\n            name=\"files.certificate\"\r\n            accept=\".json\"\r\n            label={<Trans message=\"Google service account key file (.json)\" />}\r\n          />\r\n          <FormTextField\r\n            className=\"mb-30\"\r\n            onChange={() => clearErrors()}\r\n            invalid={isInvalid}\r\n            name=\"server.analytics_property_id\"\r\n            type=\"number\"\r\n            label={<Trans message=\"Google analytics property ID\" />}\r\n          />\r\n          <FormTextField\r\n            className=\"mb-30\"\r\n            onChange={() => clearErrors()}\r\n            invalid={isInvalid}\r\n            name=\"client.analytics.tracking_code\"\r\n            placeholder=\"G-******\"\r\n            min=\"1\"\r\n            max=\"20\"\r\n            description={\r\n              <Trans message=\"Google analytics measurement ID only, not the whole javascript snippet.\" />\r\n            }\r\n            label={<Trans message=\"Google tag manager measurement ID\" />}\r\n          />\r\n          <FormTextField\r\n            name=\"client.analytics.gchart_api_key\"\r\n            label={<Trans message=\"Google maps javascript API key\" />}\r\n            description={\r\n              <Trans message=\"Only required in order to show world geochart on integrated analytics pages.\" />\r\n            }\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import {useCallback, useRef, useState} from 'react';\r\n\r\nexport function useStickySentinel() {\r\n  const [isSticky, setIsSticky] = useState(false);\r\n\r\n  const observerRef = useRef<IntersectionObserver>();\r\n\r\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\r\n    if (sentinel) {\r\n      const observer = new IntersectionObserver(\r\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\r\n        {threshold: [1]}\r\n      );\r\n      observerRef.current = observer;\r\n      observer.observe(sentinel);\r\n    } else if (observerRef.current) {\r\n      observerRef.current?.disconnect();\r\n    }\r\n  }, []);\r\n\r\n  return {isSticky, sentinelRef};\r\n}\r\n","import {\r\n  FieldValues,\r\n  SubmitHandler,\r\n  useFormContext,\r\n  UseFormReturn,\r\n} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport React, {Fragment, ReactElement, ReactNode} from 'react';\r\nimport {useStickySentinel} from '@ui/utils/hooks/sticky-sentinel';\r\nimport {Form} from '@ui/forms/form';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\n\r\ninterface Props<T extends FieldValues> {\r\n  onSubmit: SubmitHandler<T>;\r\n  form: UseFormReturn<T>;\r\n  title: ReactNode;\r\n  subTitle?: ReactNode;\r\n  isLoading: boolean;\r\n  children: ReactNode;\r\n  actions?: ReactNode;\r\n  backButton?: ReactNode;\r\n  disableSaveWhenNotDirty?: boolean;\r\n  wrapInContainer?: boolean;\r\n  submitButtonText?: ReactNode;\r\n  variant?: 'popup' | 'sticky';\r\n}\r\nexport function CrupdateResourceLayout<T extends FieldValues>({\r\n  onSubmit,\r\n  form,\r\n  title,\r\n  subTitle,\r\n  children,\r\n  actions,\r\n  backButton,\r\n  isLoading = false,\r\n  disableSaveWhenNotDirty = false,\r\n  wrapInContainer = true,\r\n  submitButtonText,\r\n  variant = 'sticky',\r\n}: Props<T>) {\r\n  const {isSticky, sentinelRef} = useStickySentinel();\r\n  const isDirty = !disableSaveWhenNotDirty\r\n    ? true\r\n    : Object.keys(form.formState.dirtyFields).length;\r\n\r\n  const saveButton = (\r\n    <Button\r\n      variant=\"flat\"\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      disabled={isLoading || !isDirty}\r\n    >\r\n      {submitButtonText ?? <Trans message=\"Save\" />}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      onBeforeSubmit={() => form.clearErrors()}\r\n      form={form}\r\n      className=\"relative\"\r\n    >\r\n      {variant === 'sticky' && <div ref={sentinelRef} />}\r\n      <CrupdateResourceHeader\r\n        wrapInContainer={wrapInContainer}\r\n        startActions={backButton}\r\n        subTitle={subTitle}\r\n        endActions={\r\n          <Fragment>\r\n            {actions}\r\n            {variant === 'sticky' && saveButton}\r\n          </Fragment>\r\n        }\r\n        className={clsx(\r\n          isSticky && 'bg shadow',\r\n          variant === 'sticky' && 'sticky',\r\n        )}\r\n      >\r\n        {title}\r\n      </CrupdateResourceHeader>\r\n      <div\r\n        className={\r\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\r\n        }\r\n      >\r\n        <div className=\"rounded\">{children}</div>\r\n      </div>\r\n      {variant === 'popup' && (\r\n        <DirtyFormSaveDrawer saveButton={saveButton} isLoading={isLoading} />\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface CrupdateResourceHeaderProps {\r\n  className?: string;\r\n  wrapInContainer?: boolean;\r\n  children: ReactNode;\r\n  subTitle?: ReactNode;\r\n  startActions?: ReactNode;\r\n  endActions?: ReactNode;\r\n}\r\nexport function CrupdateResourceHeader({\r\n  className,\r\n  wrapInContainer,\r\n  children,\r\n  subTitle,\r\n  startActions,\r\n  endActions,\r\n}: CrupdateResourceHeaderProps) {\r\n  return (\r\n    <div\r\n      className={clsx('top-0 z-10 my-12 transition-shadow md:my-24', className)}\r\n    >\r\n      <div\r\n        className={clsx(\r\n          'flex items-center gap-24 py-14 md:items-start',\r\n          wrapInContainer && 'container mx-auto px-24',\r\n        )}\r\n      >\r\n        {startActions}\r\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis md:mr-64\">\r\n          <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\r\n            {children}\r\n          </h1>\r\n          {subTitle && <div className=\"mt-4\">{subTitle}</div>}\r\n        </div>\r\n        <div className=\"mr-auto\"></div>\r\n        {endActions}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CrupdateResourceSectionProps {\r\n  label: ReactElement;\r\n  labelMargin?: string;\r\n  children: ReactNode;\r\n  margin?: string;\r\n}\r\n\r\nexport function CrupdateResourceSection({\r\n  label,\r\n  children,\r\n  margin = 'mb-48',\r\n  labelMargin = 'mb-16',\r\n}: CrupdateResourceSectionProps) {\r\n  return (\r\n    <section className={clsx(margin)}>\r\n      <div className={clsx(labelMargin, 'text-lg font-semibold')}>{label}</div>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\ninterface DirtyFormSaveDrawerProps {\r\n  saveButton?: ReactElement;\r\n  isLoading?: boolean;\r\n}\r\n\r\nexport function DirtyFormSaveDrawer({\r\n  saveButton,\r\n  isLoading,\r\n}: DirtyFormSaveDrawerProps) {\r\n  const {formState, reset} = useFormContext();\r\n  return (\r\n    <AnimatePresence>\r\n      {formState.isDirty && (\r\n        <Fragment>\r\n          <div className=\"invisible h-92\" />\r\n          <m.div\r\n            key=\"dirty-panel\"\r\n            initial={{y: 100, opacity: 0}}\r\n            animate={{y: 0, opacity: 1}}\r\n            exit={{y: 100, opacity: 0}}\r\n            transition={{duration: 0.2}}\r\n            className=\"fixed bottom-0 left-0 right-0 z-20 flex items-center justify-center gap-16 border-t bg px-12 py-28 shadow-[rgba(0,0,0,0.2)_0px_0px_10px]\"\r\n          >\r\n            <Button variant=\"outline\" onClick={() => reset()}>\r\n              <Trans message=\"Cancel\" />\r\n            </Button>\r\n            {saveButton ?? (\r\n              <Button\r\n                variant=\"flat\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n              >\r\n                <Trans message=\"Save changes\" />\r\n              </Button>\r\n            )}\r\n          </m.div>\r\n        </Fragment>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n","import {Chip} from '@ui/forms/input-field/chip-field/chip';\r\nimport React, {ReactElement, useState} from 'react';\r\nimport {useUploadAvatar} from '@common/auth/ui/account-settings/avatar/upload-avatar';\r\nimport {useRemoveAvatar} from '@common/auth/ui/account-settings/avatar/remove-avatar';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ImageSelector} from '@common/uploads/components/image-selector';\r\nimport {Avatar} from '@ui/avatar/avatar';\r\nimport {User} from '@ui/types/user';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {ErrorOutlineIcon} from '@ui/icons/material/ErrorOutline';\r\n\r\ninterface Props {\r\n  user: User;\r\n  badge?: ReactElement;\r\n}\r\nexport function UpdateUserPageHeader({user, badge}: Props) {\r\n  const isSuspended = user.banned_at !== null;\r\n  const banReason = user.bans?.[0]?.comment;\r\n  return (\r\n    <div className=\"container mx-auto mb-44 mt-38 px-24\">\r\n      <div className=\"flex gap-32\">\r\n        <div className=\"relative\">\r\n          <AvatarSelector user={user} />\r\n          <div className=\"absolute right-0 top-2\">{badge}</div>\r\n        </div>\r\n        <div>\r\n          {!!user.roles.length && (\r\n            <Chip radius=\"rounded-panel\" size=\"sm\" className=\"mb-6 w-max\">\r\n              {user.roles[0].name}\r\n            </Chip>\r\n          )}\r\n          <h1 className=\"text-2xl font-semibold\">{user.name}</h1>\r\n          <div className=\"mt-4 text-sm text-muted\">{user.email}</div>\r\n        </div>\r\n      </div>\r\n      {isSuspended && (\r\n        <div className=\"mt-24 flex w-max items-center gap-8 rounded-panel bg-danger-lighter px-10 py-6 text-sm text-danger-darker\">\r\n          <ErrorOutlineIcon size=\"sm\" />\r\n          {banReason ? (\r\n            <Trans message=\"Suspended: :reason\" values={{reason: banReason}} />\r\n          ) : (\r\n            <Trans message=\"Suspended\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AvatarManagerProps {\r\n  user: User;\r\n}\r\n\r\nfunction AvatarSelector({user}: AvatarManagerProps) {\r\n  const uploadAvatar = useUploadAvatar({user});\r\n  const removeAvatar = useRemoveAvatar({user});\r\n  const [value, setValue] = useState(user.image);\r\n  return (\r\n    <FileUploadProvider>\r\n      <ImageSelector\r\n        value={value}\r\n        diskPrefix=\"avatars\"\r\n        variant=\"avatar\"\r\n        stretchPreview\r\n        previewSize=\"w-90 h-90\"\r\n        placeholderIcon={\r\n          <Avatar label={user.name} size=\"w-full h-full text-2xl\" circle />\r\n        }\r\n        showRemoveButton\r\n        onChange={url => {\r\n          const onSuccess = {\r\n            onSuccess: () => setValue(url),\r\n          };\r\n          if (url) {\r\n            uploadAvatar.mutate({url}, onSuccess);\r\n          } else {\r\n            removeAvatar.mutate(undefined, onSuccess);\r\n          }\r\n        }}\r\n      />\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n","import {useLocation} from 'react-router';\r\nimport {useState} from 'react';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\n\r\nexport interface UrlBackedTabConfig {\r\n  uri: string;\r\n  label: MessageDescriptor;\r\n}\r\n\r\nexport function useUrlBackedTabs(config: UrlBackedTabConfig[]) {\r\n  const {pathname} = useLocation();\r\n  const tabName = pathname.split('/').pop();\r\n  return useState(() => {\r\n    const index = config.findIndex(tab => tab.uri === tabName);\r\n    return index === -1 ? 0 : index;\r\n  });\r\n}\r\n","import {Tabs} from '@ui/tabs/tabs';\r\nimport {TabList} from '@ui/tabs/tab-list';\r\nimport {Tab} from '@ui/tabs/tab';\r\nimport {Link, Outlet} from 'react-router';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React, {useMemo} from 'react';\r\nimport {User} from '@ui/types/user';\r\nimport {\r\n  UrlBackedTabConfig,\r\n  useUrlBackedTabs,\r\n} from '@common/http/use-url-backed-tabs';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\n\r\nexport const updateUserPageTabs: UrlBackedTabConfig[] = [\r\n  {uri: 'details', label: message('Details')},\r\n  {uri: 'permissions', label: message('Roles & permissions')},\r\n  {uri: 'security', label: message('Security')},\r\n  {uri: 'date', label: message('Date & time')},\r\n  {uri: 'api', label: message('API')},\r\n];\r\n\r\ninterface Props {\r\n  tabs: UrlBackedTabConfig[];\r\n  user: User;\r\n}\r\nexport function UpdateUserPageTabs({user, tabs}: Props) {\r\n  const {user: authUser, hasPermission} = useAuth();\r\n  const {api} = useSettings();\r\n  const apiEnabled = api?.integrated && hasPermission('api.access');\r\n  const filteredTabs = useMemo(() => {\r\n    return tabs.filter(tab => {\r\n      if (tab.uri === 'api' && !apiEnabled) {\r\n        return false;\r\n      }\r\n      if (tab.uri === 'security' && user.id !== authUser?.id) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }, [user.id, authUser?.id, apiEnabled, tabs]);\r\n\r\n  const [activeTab, setActiveTab] = useUrlBackedTabs(filteredTabs);\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-24\">\r\n      <Tabs\r\n        selectedTab={activeTab}\r\n        onTabChange={setActiveTab}\r\n        overflow=\"overflow-visible\"\r\n      >\r\n        <TabList className=\"mb-24\">\r\n          {filteredTabs.map(tab => (\r\n            <Tab key={tab.uri} elementType={Link} to={tab.uri}>\r\n              <Trans {...tab.label} />\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        <Outlet context={user} />\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\nexport function useDeleteUser() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: {userId: number}) => deleteUser(payload.userId),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('users'),\r\n      });\r\n      toast(trans(message('User deleted')));\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction deleteUser(userId: string | number) {\r\n  return apiClient.delete<Response>(`users/${userId}`).then(r => r.data);\r\n}\r\n","import {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport React, {Fragment, ReactNode, useState} from 'react';\r\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\r\nimport {openDialog} from '@ui/overlays/store/dialog-store';\r\nimport {User} from '@ui/types/user';\r\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {useDeleteUser} from '@common/admin/users/requests/use-delete-user';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\n\r\ninterface Props {\r\n  user: User;\r\n  children?: ReactNode;\r\n}\r\nexport function UpdateUserPageActions({user, children}: Props) {\r\n  const unban = useUnbanUser(user.id);\r\n  const isSuspended = user.banned_at !== null;\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={deleteDialogOpen}\r\n        onOpenChange={setDeleteDialogOpen}\r\n      >\r\n        <DeleteUserDialog userId={user.id} />\r\n      </DialogTrigger>\r\n      <MenuTrigger>\r\n        <Button\r\n          className=\"ml-auto\"\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          endIcon={<KeyboardArrowDownIcon />}\r\n        >\r\n          <Trans message=\"Actions\" />\r\n        </Button>\r\n        <Menu>\r\n          {children}\r\n          <Item\r\n            value=\"toggleSuspension\"\r\n            onSelected={() => {\r\n              if (isSuspended) {\r\n                unban.mutate();\r\n              } else {\r\n                openDialog(BanUserDialog, {user});\r\n              }\r\n            }}\r\n          >\r\n            {isSuspended ? (\r\n              <Trans message=\"Unsuspend user\" />\r\n            ) : (\r\n              <Trans message=\"Suspend user\" />\r\n            )}\r\n          </Item>\r\n          <Item\r\n            value=\"delete\"\r\n            onSelected={() => {\r\n              setDeleteDialogOpen(true);\r\n            }}\r\n          >\r\n            <Trans message=\"Delete user\" />\r\n          </Item>\r\n        </Menu>\r\n      </MenuTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface DeleteUserDialogProps {\r\n  userId: number;\r\n}\r\nexport function DeleteUserDialog({userId}: DeleteUserDialogProps) {\r\n  const deleteUser = useDeleteUser();\r\n  const {close} = useDialogContext();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      isLoading={deleteUser.isPending}\r\n      title={<Trans message=\"Delete user\" />}\r\n      confirm={<Trans message=\"Delete\" />}\r\n      body={<Trans message=\"Are you sure you want to delete this user?\" />}\r\n      onConfirm={() => {\r\n        deleteUser.mutate(\r\n          {userId},\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              navigate('..', {relative: 'path'});\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {Link, useParams} from 'react-router';\r\nimport React, {Fragment} from 'react';\r\nimport {useUser} from '@common/auth/ui/use-user';\r\nimport {User} from '@ui/types/user';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {CrupdateResourceHeader} from '@common/admin/crupdate-resource-layout';\r\nimport {UpdateUserPageHeader} from '@common/admin/users/update-user-page/update-user-page-header';\r\nimport {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {\r\n  updateUserPageTabs,\r\n  UpdateUserPageTabs,\r\n} from '@common/admin/users/update-user-page/update-user-page-tabs';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\r\nimport {UpdateUserPageActions} from '@common/admin/users/update-user-page/update-user-page-actions';\r\n\r\nexport function UpdateUserPage() {\r\n  const {userId} = useParams();\r\n  const query = useUser(userId!, {\r\n    with: ['subscriptions', 'roles', 'permissions', 'bans'],\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Edit user\" />\r\n      </StaticPageTitle>\r\n      {query.data?.user ? (\r\n        <PageContent user={query.data.user} />\r\n      ) : (\r\n        <PageStatus query={query} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface PageContentProps {\r\n  user: User;\r\n}\r\nfunction PageContent({user}: PageContentProps) {\r\n  return (\r\n    <Fragment>\r\n      <CrupdateResourceHeader\r\n        wrapInContainer\r\n        startActions={\r\n          <IconButton\r\n            elementType={Link}\r\n            to=\"..\"\r\n            relative=\"path\"\r\n            size=\"sm\"\r\n            iconSize=\"md\"\r\n          >\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n        }\r\n        endActions={<UpdateUserPageActions user={user} />}\r\n      >\r\n        <Trans message=\"Edit user\" />\r\n      </CrupdateResourceHeader>\r\n      <UpdateUserPageHeader user={user} />\r\n      <UpdateUserPageTabs tabs={updateUserPageTabs} user={user} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const TranslateIcon = createSvgIcon(\r\n  <path d=\"m12.87 15.07-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7 1.62-4.33L19.12 17h-3.24z\" />\r\n, 'TranslateOutlined');\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {Localization} from '@ui/i18n/localization';\r\nimport {apiClient} from '../../http/query-client';\r\n\r\nexport interface FetchLocaleWithLinesResponse extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\nexport const getLocalWithLinesQueryKey = (localeId?: number | string) => {\r\n  const key: (string | number)[] = ['getLocaleWithLines'];\r\n  if (localeId != null) {\r\n    key.push(localeId);\r\n  }\r\n  return key;\r\n};\r\n\r\nexport function useLocaleWithLines(localeId: number | string) {\r\n  return useQuery({\r\n    queryKey: getLocalWithLinesQueryKey(localeId),\r\n    queryFn: () => fetchLocaleWithLines(localeId),\r\n    staleTime: Infinity,\r\n  });\r\n}\r\n\r\nfunction fetchLocaleWithLines(\r\n  localeId: number | string,\r\n): Promise<FetchLocaleWithLinesResponse> {\r\n  return apiClient\r\n    .get(`localizations/${localeId}`)\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {Localization} from '@ui/i18n/localization';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\r\n\r\ninterface Response extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\nfunction UpdateLocalization({\r\n  id,\r\n  ...other\r\n}: Partial<Localization>): Promise<Response> {\r\n  return apiClient.put(`localizations/${id}`, other).then(r => r.data);\r\n}\r\n\r\nexport function useUpdateLocalization(\r\n  form?: UseFormReturn<Partial<Localization>>,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (props: Partial<Localization>) => UpdateLocalization(props),\r\n    onSuccess: () => {\r\n      toast(message('Localization updated'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('localizations'),\r\n      });\r\n      queryClient.invalidateQueries({queryKey: getLocalWithLinesQueryKey()});\r\n    },\r\n    onError: r => (form ? onFormQueryError(r, form) : showHttpErrorToast(r)),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Form} from '@ui/forms/form';\r\nimport {Localization} from '@ui/i18n/localization';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useUpdateLocalization} from './update-localization';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\n\r\ninterface UpdateLocalizationDialogProps {\r\n  localization: Localization;\r\n}\r\nexport function UpdateLocalizationDialog({\r\n  localization,\r\n}: UpdateLocalizationDialogProps) {\r\n  const {trans} = useTrans();\r\n  const {formId, close} = useDialogContext();\r\n  const form = useForm<Partial<Localization>>({\r\n    defaultValues: {\r\n      id: localization.id,\r\n      name: localization.name,\r\n      language: localization.language,\r\n    },\r\n  });\r\n\r\n  const {data} = useValueLists(['languages']);\r\n  const languages = data?.languages || [];\r\n\r\n  const updateLocalization = useUpdateLocalization(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Update localization\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            updateLocalization.mutate(values, {onSuccess: close});\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            label={<Trans message=\"Name\" />}\r\n            className=\"mb-30\"\r\n            required\r\n          />\r\n          <FormSelect\r\n            required\r\n            name=\"language\"\r\n            label={<Trans message=\"Language\" />}\r\n            selectionMode=\"single\"\r\n            showSearchField\r\n            searchPlaceholder={trans(message('Search languages'))}\r\n          >\r\n            {languages.map(language => (\r\n              <Option value={language.code} key={language.code}>\r\n                {language.name}\r\n              </Option>\r\n            ))}\r\n          </FormSelect>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={updateLocalization.isPending}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {Localization} from '@ui/i18n/localization';\r\n\r\ninterface Response extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\nexport interface CreateLocalizationPayload {\r\n  name: string;\r\n  language: string;\r\n}\r\n\r\nfunction createLocalization(\r\n  payload: CreateLocalizationPayload,\r\n): Promise<Response> {\r\n  return apiClient.post(`localizations`, payload).then(r => r.data);\r\n}\r\n\r\nexport function useCreateLocalization(\r\n  form: UseFormReturn<CreateLocalizationPayload>,\r\n) {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: (props: CreateLocalizationPayload) => createLocalization(props),\r\n    onSuccess: () => {\r\n      toast(message('Localization created'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('localizations'),\r\n      });\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {\r\n  CreateLocalizationPayload,\r\n  useCreateLocalization,\r\n} from './create-localization';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\n\r\nexport function CreateLocationDialog() {\r\n  const {trans} = useTrans();\r\n  const {formId, close} = useDialogContext();\r\n  const form = useForm<CreateLocalizationPayload>({\r\n    defaultValues: {\r\n      language: 'en',\r\n    },\r\n  });\r\n\r\n  const {data} = useValueLists(['languages']);\r\n  const languages = data?.languages || [];\r\n\r\n  const createLocalization = useCreateLocalization(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Create localization\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            createLocalization.mutate(values, {onSuccess: close});\r\n          }}\r\n        >\r\n          <FormTextField\r\n            autoFocus\r\n            name=\"name\"\r\n            label={<Trans message=\"Name\" />}\r\n            className=\"mb-30\"\r\n            required\r\n          />\r\n          <FormSelect\r\n            required\r\n            name=\"language\"\r\n            label={<Trans message=\"Language\" />}\r\n            selectionMode=\"single\"\r\n            showSearchField\r\n            searchPlaceholder={trans(message('Search languages'))}\r\n          >\r\n            {languages.map(language => (\r\n              <Option value={language.code} key={language.code}>\r\n                {language.name}\r\n              </Option>\r\n            ))}\r\n          </FormSelect>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={createLocalization.isPending}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__5bb85b7d__\"","import {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {Localization} from '@ui/i18n/localization';\r\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\r\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\r\nimport {UploadedFile} from '@ui/utils/files/uploaded-file';\r\n\r\ninterface Response extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\ninterface Payload {\r\n  file: UploadedFile;\r\n  localeId: string | number;\r\n}\r\n\r\nexport function useUploadTranslationFile() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => uploadFile(payload),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('localizations'),\r\n      });\r\n      await queryClient.invalidateQueries({\r\n        queryKey: getLocalWithLinesQueryKey(),\r\n      });\r\n      toast(message('Translation file uploaded'));\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction uploadFile({localeId, file}: Payload): Promise<Response> {\r\n  const data = new FormData();\r\n  data.append('file', file.native);\r\n  return apiClient\r\n    .post(`localizations/${localeId}/upload`, data)\r\n    .then(r => r.data);\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Localization} from '@ui/i18n/localization';\r\nimport {TranslateIcon} from '@ui/icons/material/Translate';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {UpdateLocalizationDialog} from './update-localization-dialog';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {CreateLocationDialog} from './create-localization-dialog';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport aroundTheWorldSvg from './around-the-world.svg';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {openDialog} from '@ui/overlays/store/dialog-store';\r\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\r\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\r\nimport {FileInputType} from '@ui/utils/files/file-input-config';\r\n\r\nconst columnConfig: ColumnConfig<Localization>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    sortingKey: 'name',\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: locale => locale.name,\r\n  },\r\n  {\r\n    key: 'language',\r\n    allowsSorting: true,\r\n    sortingKey: 'language',\r\n    header: () => <Trans message=\"Language code\" />,\r\n    body: locale => locale.language,\r\n  },\r\n  {\r\n    key: 'updatedAt',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: locale => <FormattedDate date={locale.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-84 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: locale => {\r\n      return (\r\n        <div className=\"text-muted\">\r\n          <Tooltip label={<Trans message=\"Translate\" />}>\r\n            <IconButton\r\n              size=\"md\"\r\n              elementType={Link}\r\n              to={`${locale.id}/translate`}\r\n            >\r\n              <TranslateIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FileUploadProvider>\r\n            <RowActionsMenuTrigger locale={locale} />\r\n          </FileUploadProvider>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function LocalizationIndex() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"localizations\"\r\n      title={<Trans message=\"Localizations\" />}\r\n      columns={columnConfig}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={aroundTheWorldSvg}\r\n          title={<Trans message=\"No localizations have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching localizations\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger type=\"modal\">\r\n        <DataTableAddItemButton>\r\n          <Trans message=\"Add new localization\" />\r\n        </DataTableAddItemButton>\r\n        <CreateLocationDialog />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface RowActionsMenuTriggerProps {\r\n  locale: Localization;\r\n}\r\nfunction RowActionsMenuTrigger({locale}: RowActionsMenuTriggerProps) {\r\n  const uploadFile = useUploadTranslationFile();\r\n  return (\r\n    <MenuTrigger>\r\n      <IconButton disabled={uploadFile.isPending}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        <MenuItem\r\n          value=\"translate\"\r\n          elementType={Link}\r\n          to={`${locale.id}/translate`}\r\n        >\r\n          <Trans message=\"Translate\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"rename\"\r\n          onSelected={() =>\r\n            openDialog(UpdateLocalizationDialog, {localization: locale})\r\n          }\r\n        >\r\n          <Trans message=\"Rename\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"download\"\r\n          onSelected={() =>\r\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\r\n          }\r\n        >\r\n          <Trans message=\"Download\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"upload\"\r\n          onSelected={async () => {\r\n            const files = await openUploadWindow({\r\n              types: [FileInputType.json],\r\n            });\r\n            if (files.length == 1) {\r\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Upload\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {SectionHelper} from '../../ui/other/section-helper';\r\n\r\ninterface FormValue {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nexport function NewTranslationDialog() {\r\n  const {formId, close} = useDialogContext();\r\n  const form = useForm<FormValue>();\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Add translation\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            close(values);\r\n          }}\r\n        >\r\n          <SectionHelper\r\n            className=\"mb-30\"\r\n            title={\r\n              <Trans message=\"Add a new translation, if it does not exist already.\" />\r\n            }\r\n            description={\r\n              <Trans message=\"This should only need to be done for things like custom menu items.\" />\r\n            }\r\n          />\r\n          <FormTextField\r\n            inputElementType=\"textarea\"\r\n            rows={2}\r\n            autoFocus\r\n            name=\"key\"\r\n            label={<Trans message=\"Translation key\" />}\r\n            className=\"mb-30\"\r\n            required\r\n          />\r\n          <FormTextField\r\n            inputElementType=\"textarea\"\r\n            rows={2}\r\n            name=\"value\"\r\n            label={<Trans message=\"Translation value\" />}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId}>\r\n          <Trans message=\"Add\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useMemo, useRef, useState} from 'react';\r\nimport {useParams} from 'react-router';\r\nimport {useLocaleWithLines} from './use-locale-with-lines';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\r\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {NewTranslationDialog} from './new-translation-dialog';\r\nimport {useUpdateLocalization} from './update-localization';\r\nimport {Localization} from '@ui/i18n/localization';\r\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {useVirtualizer} from '@tanstack/react-virtual';\r\nimport {useNavigate} from '../../ui/navigation/use-navigate';\r\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\r\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\r\n\r\nimport {FileInputType} from '@ui/utils/files/file-input-config';\r\n\r\ntype Lines = Record<string, string>;\r\n\r\nexport function TranslationManagementPage() {\r\n  const {localeId} = useParams();\r\n\r\n  const {data, isLoading} = useLocaleWithLines(localeId!);\r\n  const localization = data?.localization;\r\n\r\n  if (isLoading || !localization) {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  return <Form localization={localization} />;\r\n}\r\n\r\ninterface FormProps {\r\n  localization: Localization;\r\n}\r\nfunction Form({localization}: FormProps) {\r\n  const [lines, setLines] = useState<Lines>(localization.lines || {});\r\n\r\n  const navigate = useNavigate();\r\n  const updateLocalization = useUpdateLocalization();\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n\r\n  return (\r\n    <form\r\n      className=\"flex h-full flex-col p-14 md:p-24\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        updateLocalization.mutate(\r\n          {id: localization.id, lines},\r\n          {\r\n            onSuccess: () => {\r\n              navigate('/admin/localizations');\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    >\r\n      <Header\r\n        localization={localization}\r\n        setLines={setLines}\r\n        lines={lines}\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n        isLoading={updateLocalization.isPending}\r\n      />\r\n      <LinesList lines={lines} setLines={setLines} searchQuery={searchQuery} />\r\n    </form>\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  localization: Localization;\r\n  lines: Lines;\r\n  setLines: (lines: Lines) => void;\r\n  searchQuery: string;\r\n  setSearchQuery: (value: string) => void;\r\n  isLoading: boolean;\r\n}\r\nfunction Header({\r\n  localization,\r\n  searchQuery,\r\n  setSearchQuery,\r\n  isLoading,\r\n  lines,\r\n  setLines,\r\n}: HeaderProps) {\r\n  const navigate = useNavigate();\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const {trans} = useTrans();\r\n\r\n  return (\r\n    <div className=\"flex-shrink-0\">\r\n      <Breadcrumb size=\"lg\" className=\"mb-16\">\r\n        <BreadcrumbItem\r\n          onSelected={() => {\r\n            navigate('/admin/localizations');\r\n          }}\r\n        >\r\n          <Trans message=\"Localizations\" />\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <Trans\r\n            message=\":locale translations\"\r\n            values={{locale: localization.name}}\r\n          />\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n      <div className=\"mb-24 flex items-center gap-32 md:gap-12\">\r\n        <div className=\"max-w-440 flex-auto\">\r\n          <TextField\r\n            value={searchQuery}\r\n            onChange={e => setSearchQuery(e.target.value)}\r\n            startAdornment={<SearchIcon />}\r\n            placeholder={trans({message: 'Type to search...'})}\r\n          />\r\n        </div>\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={newTranslation => {\r\n            if (newTranslation) {\r\n              const newLines = {...lines};\r\n              newLines[newTranslation.key] = newTranslation.value;\r\n              setLines(newLines);\r\n            }\r\n          }}\r\n        >\r\n          {!isMobile && (\r\n            <Button\r\n              className=\"ml-auto\"\r\n              variant=\"outline\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              <Trans message=\"Add new\" />\r\n            </Button>\r\n          )}\r\n          <NewTranslationDialog />\r\n        </DialogTrigger>\r\n        <ActionsMenuTrigger locale={localization} />\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n        >\r\n          {isMobile ? (\r\n            <Trans message=\"Save\" />\r\n          ) : (\r\n            <Trans message=\"Save translations\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface LinesListProps {\r\n  searchQuery?: string;\r\n  lines: Lines;\r\n  setLines: (lines: Lines) => void;\r\n}\r\nfunction LinesList({searchQuery, lines, setLines}: LinesListProps) {\r\n  const filteredLines = useMemo(() => {\r\n    return Object.entries(lines).filter(([id, translation]) => {\r\n      const lowerCaseQuery = searchQuery?.toLowerCase();\r\n      return (\r\n        !lowerCaseQuery ||\r\n        id?.toLowerCase().includes(lowerCaseQuery) ||\r\n        translation?.toLowerCase().includes(lowerCaseQuery)\r\n      );\r\n    });\r\n  }, [lines, searchQuery]);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const rowVirtualizer = useVirtualizer({\r\n    count: filteredLines.length,\r\n    getScrollElement: () => ref.current,\r\n    estimateSize: () => 123,\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex-auto overflow-y-auto\" ref={ref}>\r\n      <div\r\n        className=\"relative w-full\"\r\n        style={{\r\n          height: `${rowVirtualizer.getTotalSize()}px`,\r\n        }}\r\n      >\r\n        {rowVirtualizer.getVirtualItems().map(virtualItem => {\r\n          const [id, translation] = filteredLines[virtualItem.index];\r\n          return (\r\n            <div\r\n              key={id}\r\n              className=\"absolute left-0 top-0 w-full\"\r\n              style={{\r\n                height: `${virtualItem.size}px`,\r\n                transform: `translateY(${virtualItem.start}px)`,\r\n              }}\r\n            >\r\n              <div className=\"mb-10 rounded border md:mr-10\">\r\n                <div className=\"flex items-center justify-between gap-24 border-b px-10 py-2\">\r\n                  <label\r\n                    className=\"flex-auto text-xs font-semibold\"\r\n                    htmlFor={id}\r\n                  >\r\n                    {id}\r\n                  </label>\r\n                  <IconButton\r\n                    size=\"xs\"\r\n                    className=\"text-muted\"\r\n                    onClick={() => {\r\n                      const newLines = {...lines};\r\n                      delete newLines[id];\r\n                      setLines(newLines);\r\n                    }}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div>\r\n                  <textarea\r\n                    id={id}\r\n                    name={id}\r\n                    defaultValue={translation}\r\n                    className=\"block w-full resize-none rounded bg-inherit p-10 text-sm outline-none focus-visible:ring-2\"\r\n                    rows={2}\r\n                    onChange={e => {\r\n                      const newLines = {...lines};\r\n                      newLines[id] = e.target.value;\r\n                      setLines(newLines);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ActionsMenuTriggerProps {\r\n  locale: Localization;\r\n}\r\nfunction ActionsMenuTrigger({locale}: ActionsMenuTriggerProps) {\r\n  const uploadFile = useUploadTranslationFile();\r\n  return (\r\n    <MenuTrigger>\r\n      <IconButton\r\n        variant=\"outline\"\r\n        size=\"sm\"\r\n        color=\"primary\"\r\n        disabled={uploadFile.isPending}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        <MenuItem\r\n          value=\"download\"\r\n          onSelected={() =>\r\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\r\n          }\r\n        >\r\n          <Trans message=\"Download\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"upload\"\r\n          onSelected={async () => {\r\n            const files = await openUploadWindow({\r\n              types: [FileInputType.json],\r\n            });\r\n            if (files.length == 1) {\r\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Upload\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {useDialogContext} from './dialog-context';\r\nimport {Dialog} from './dialog';\r\nimport {DialogBody} from './dialog-body';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\r\nimport {useControlledState} from '@react-stately/utils';\r\n\r\ninterface Props {\r\n  image?: string;\r\n  images?: string[];\r\n  activeIndex?: number;\r\n  onActiveIndexChange?: (index: number) => void;\r\n  defaultActiveIndex?: number;\r\n}\r\nexport function ImageZoomDialog(props: Props) {\r\n  const {close} = useDialogContext();\r\n  const {image, images} = props;\r\n  const [activeIndex, setActiveIndex] = useControlledState(\r\n    props.activeIndex,\r\n    props.defaultActiveIndex,\r\n    props.onActiveIndexChange,\r\n  );\r\n  const src = image || images?.[activeIndex];\r\n\r\n  return (\r\n    <Dialog size=\"fullscreenTakeover\" background=\"bg-black/80\">\r\n      <DialogBody padding=\"p-0\" className=\"h-full w-full\">\r\n        <IconButton\r\n          size=\"lg\"\r\n          color=\"paper\"\r\n          className=\"absolute right-0 top-0 z-20 text-white\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <div className=\"relative flex h-full w-full items-center justify-center p-40\">\r\n          {images?.length ? (\r\n            <IconButton\r\n              size=\"lg\"\r\n              color=\"white\"\r\n              variant=\"flat\"\r\n              className=\"absolute bottom-0 left-20 top-0 my-auto\"\r\n              disabled={activeIndex < 1}\r\n              onClick={() => {\r\n                setActiveIndex(activeIndex - 1);\r\n              }}\r\n            >\r\n              <KeyboardArrowLeftIcon />\r\n            </IconButton>\r\n          ) : null}\r\n          <img\r\n            src={src}\r\n            alt=\"\"\r\n            className=\"max-h-full w-auto object-contain shadow\"\r\n          />\r\n          {images?.length ? (\r\n            <IconButton\r\n              size=\"lg\"\r\n              color=\"white\"\r\n              variant=\"flat\"\r\n              className=\"absolute bottom-0 right-20 top-0 my-auto\"\r\n              disabled={activeIndex + 1 === images?.length}\r\n              onClick={() => {\r\n                setActiveIndex(activeIndex + 1);\r\n              }}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </IconButton>\r\n          ) : null}\r\n        </div>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useContext} from 'react';\r\nimport {\r\n  AdConfig,\r\n  SiteConfigContext,\r\n} from '../../core/settings/site-config-context';\r\nimport {Form} from '@ui/forms/form';\r\nimport {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {useAdminSettings} from '../settings/requests/use-admin-settings';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {Settings} from '@ui/settings/settings';\r\nimport {\r\n  AdminSettingsWithFiles,\r\n  useUpdateAdminSettings,\r\n} from '../settings/requests/use-update-admin-settings';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {ImageZoomDialog} from '@ui/overlays/dialog/image-zoom-dialog';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\n\r\nexport function AdsPage() {\r\n  const query = useAdminSettings();\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-12 md:p-24\">\r\n      <StaticPageTitle>\r\n        <Trans message=\"Ads\" />\r\n      </StaticPageTitle>\r\n      <h1 className=\"mb-20 text-2xl font-light md:mb-40 md:text-3xl\">\r\n        <Trans message=\"Predefined Ad slots\" />\r\n      </h1>\r\n      {query.isLoading ? (\r\n        <ProgressCircle isIndeterminate />\r\n      ) : (\r\n        <AdsForm defaultValues={query.data?.client.ads || {}} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AdsFormProps {\r\n  defaultValues: Settings['ads'];\r\n}\r\nfunction AdsForm({defaultValues}: AdsFormProps) {\r\n  const {\r\n    admin: {ads},\r\n  } = useContext(SiteConfigContext);\r\n\r\n  const form = useForm<AdminSettingsWithFiles>({\r\n    defaultValues: {client: {ads: defaultValues}},\r\n  });\r\n  const updateSettings = useUpdateAdminSettings(form);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onSubmit={value => {\r\n        updateSettings.mutate(value);\r\n      }}\r\n    >\r\n      {ads.map(ad => {\r\n        return <AdSection key={ad.slot} adConfig={ad} />;\r\n      })}\r\n      <FormSwitch\r\n        name=\"client.ads.disable\"\r\n        className=\"mb-30\"\r\n        description={\r\n          <Trans message=\"Disable all add related functionality across the site.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Disable ads\" />\r\n      </FormSwitch>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        disabled={updateSettings.isPending}\r\n      >\r\n        <Trans message=\"Save\" />\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface AdSectionProps {\r\n  adConfig: AdConfig;\r\n}\r\nfunction AdSection({adConfig}: AdSectionProps) {\r\n  return (\r\n    <div className=\"flex items-center gap-24\">\r\n      <FormTextField\r\n        className=\"mb-30 flex-auto\"\r\n        name={`client.${adConfig.slot}`}\r\n        inputElementType=\"textarea\"\r\n        rows={8}\r\n        label={<Trans {...adConfig.description} />}\r\n      />\r\n      <DialogTrigger type=\"modal\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"cursor-zoom-in overflow-hidden rounded outline-none transition hover:scale-105 focus-visible:ring max-md:hidden\"\r\n        >\r\n          <img\r\n            src={adConfig.image}\r\n            className=\"h-[186px] w-auto border\"\r\n            alt=\"Ad slot example\"\r\n          />\r\n        </button>\r\n        <ImageZoomDialog image={adConfig.image} />\r\n      </DialogTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import {NavLink} from 'react-router';\r\nimport {AppearanceButton} from './appearance-button';\r\nimport {useAppearanceStore} from './appearance-store';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useMemo} from 'react';\r\nimport {AppearanceEditorLayout} from '@common/admin/appearance/appearance-editor-form';\r\n\r\nexport function SectionList() {\r\n  const sections = useAppearanceStore(s => s.config?.sections);\r\n  const sortedSection = useMemo(() => {\r\n    if (!sections) return [];\r\n    return Object.entries(sections || [])\r\n      .map(([key, value]) => {\r\n        return {\r\n          ...value,\r\n          key,\r\n        };\r\n      })\r\n      .sort((a, b) => (a?.position || 1) - (b?.position || 1));\r\n  }, [sections]);\r\n\r\n  return (\r\n    <AppearanceEditorLayout>\r\n      {sortedSection.map(section => (\r\n        <AppearanceButton\r\n          key={section.key}\r\n          to={section.key}\r\n          elementType={NavLink}\r\n        >\r\n          <Trans {...section.label} />\r\n        </AppearanceButton>\r\n      ))}\r\n    </AppearanceEditorLayout>\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '@ui/i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const RoleIndexPageFilters: BackendFilter[] = [\r\n  {\r\n    key: 'type',\r\n    label: message('Type'),\r\n    description: message('Type of the role'),\r\n    defaultOperator: FilterOperator.ne,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('Sitewide'),\r\n          value: 'sitewide',\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('Workspace'),\r\n          value: 'workspace',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date role was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date role was last updated'),\r\n  }),\r\n];\r\n","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Role} from '../../auth/role';\r\nimport teamSvg from './team.svg';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {RoleIndexPageFilters} from './role-index-page-filters';\r\nimport {DataTableExportCsvButton} from '../../datatable/csv-export/data-table-export-csv-button';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\n\r\nconst columnConfig: ColumnConfig<Role>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Role\" />,\r\n    body: role => (\r\n      <div>\r\n        <div>\r\n          <Trans message={role.name} />\r\n        </div>\r\n        <div className=\"overflow-x-hidden overflow-ellipsis text-xs text-muted\">\r\n          {role.description ? <Trans message={role.description} /> : undefined}\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    key: 'type',\r\n    maxWidth: 'max-w-100',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: role => <Trans message={role.type} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    maxWidth: 'max-w-100',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: role => <FormattedDate date={role.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    visibleInMode: 'all',\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    body: role => {\r\n      return (\r\n        <Link to={`${role.id}/edit`}>\r\n          <IconButton size=\"md\" className=\"text-muted\">\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Link>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function RolesIndexPage() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"roles\"\r\n      title={<Trans message=\"Roles\" />}\r\n      columns={columnConfig}\r\n      filters={RoleIndexPageFilters}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={teamSvg}\r\n          title={<Trans message=\"No roles have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching roles\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <Fragment>\r\n      <DataTableExportCsvButton endpoint=\"roles/csv/export\" />\r\n      <DataTableAddItemButton elementType={Link} to=\"new\">\r\n        <Trans message=\"Add new role\" />\r\n      </DataTableAddItemButton>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {Role} from '@common/auth/role';\r\nimport {useParams} from 'react-router';\r\n\r\nconst Endpoint = (id: number | string) => `roles/${id}`;\r\n\r\nexport interface FetchRoleResponse extends BackendResponse {\r\n  role: Role;\r\n}\r\n\r\nexport function useRole() {\r\n  const {roleId} = useParams();\r\n  return useQuery({\r\n    queryKey: [Endpoint(roleId!)],\r\n    queryFn: () => fetchRole(roleId!),\r\n  });\r\n}\r\n\r\nfunction fetchRole(roleId: number | string): Promise<FetchRoleResponse> {\r\n  return apiClient.get(Endpoint(roleId)).then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {Role} from '@common/auth/role';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\n\r\ninterface Response extends BackendResponse {\r\n  role: Role;\r\n}\r\n\r\ninterface Payload extends Partial<Role> {\r\n  id: number;\r\n}\r\n\r\nconst Endpoint = (id: number) => `roles/${id}`;\r\n\r\nexport function useUpdateRole() {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => updateRole(payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Role updated')));\r\n      queryClient.invalidateQueries({queryKey: [Endpoint(response.role.id)]});\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\r\n      navigate('/admin/roles');\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction updateRole({id, ...payload}: Payload): Promise<Response> {\r\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\r\n}\r\n","import {Role} from '@common/auth/role';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {FormSelect} from '@ui/forms/select/select';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {Button} from '@ui/buttons/button';\r\n\r\ninterface CrupdateRolePageSettingsPanelProps {\r\n  isInternal?: boolean;\r\n}\r\nexport function CrupdateRolePageSettingsPanel({\r\n  isInternal = false,\r\n}: CrupdateRolePageSettingsPanelProps) {\r\n  const {trans} = useTrans();\r\n  const {workspaces} = useSettings();\r\n  const {watch, setValue} = useFormContext<Role>();\r\n  const watchedType = watch('type');\r\n\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        label={<Trans message=\"Name\" />}\r\n        name=\"name\"\r\n        className=\"mb-20\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        label={<Trans message=\"Description\" />}\r\n        name=\"description\"\r\n        inputElementType=\"textarea\"\r\n        placeholder={trans(message('Role description...'))}\r\n        rows={4}\r\n        className=\"mb-20\"\r\n      />\r\n      {workspaces.integrated && (\r\n        <FormSelect\r\n          label={<Trans message=\"Type\" />}\r\n          name=\"type\"\r\n          selectionMode=\"single\"\r\n          className=\"mb-20\"\r\n          description={\r\n            <Trans message=\"Whether this role will be assigned to users globally on the site or only within workspaces.\" />\r\n          }\r\n        >\r\n          <Item value=\"sitewide\">\r\n            <Trans message=\"Sitewide\" />\r\n          </Item>\r\n          <Item value=\"workspace\">\r\n            <Trans message=\"Workspace\" />\r\n          </Item>\r\n        </FormSelect>\r\n      )}\r\n      {!isInternal && (\r\n        <>\r\n          <FormSwitch\r\n            name=\"default\"\r\n            className=\"mb-20\"\r\n            description={\r\n              <Trans message=\"Assign this role to new users automatically.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Default\" />\r\n          </FormSwitch>\r\n          {watchedType === 'sitewide' && (\r\n            <FormSwitch\r\n              name=\"guests\"\r\n              description={\r\n                <Trans message=\"Assign this role to guests (not logged in users).\" />\r\n              }\r\n            >\r\n              <Trans message=\"Guests\" />\r\n            </FormSwitch>\r\n          )}\r\n        </>\r\n      )}\r\n      <div className=\"mb-14 mt-30 flex items-end justify-between gap-12\">\r\n        <h2 className=\"text-lg leading-tight\">\r\n          <Trans message=\"Permissions\" />\r\n        </h2>\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"xs\"\r\n          onClick={() => setValue('permissions', [])}\r\n        >\r\n          <Trans message=\"Remove all\" />\r\n        </Button>\r\n      </div>\r\n      <FormPermissionSelector\r\n        name=\"permissions\"\r\n        valueListKey={\r\n          watchedType === 'sitewide' ? 'permissions' : 'workspacePermissions'\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {useState} from 'react';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Avatar} from '@ui/avatar/avatar';\r\nimport {NormalizedModel} from '@ui/types/normalized-model';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\nimport teamSvg from '../admin/roles/team.svg';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {useNormalizedModels} from '../ui/normalized-model/use-normalized-models';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport clsx from 'clsx';\r\n\r\ninterface SingleProps<T extends NormalizedModel> {\r\n  multiple?: false;\r\n}\r\n\r\ninterface MultipleProps<T extends NormalizedModel> {\r\n  multiple?: true;\r\n}\r\n\r\nexport function SelectUserDialog<T extends NormalizedModel>({\r\n  multiple = false,\r\n  endpoint = 'normalized-models/user',\r\n}: (MultipleProps<T> | SingleProps<T>) & {endpoint?: string}) {\r\n  const {close} = useDialogContext();\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const {trans} = useTrans();\r\n  const query = useNormalizedModels(endpoint, {\r\n    query: searchTerm,\r\n    perPage: 14,\r\n  });\r\n  const users = query.data?.results || [];\r\n  const [selectedUsers, setSelectedUsers] = useState<T[]>([]);\r\n\r\n  const emptyStateMessage = (\r\n    <IllustratedMessage\r\n      className=\"pt-20\"\r\n      size=\"sm\"\r\n      title={<Trans message=\"No matching users\" />}\r\n      description={<Trans message=\"Try another search query\" />}\r\n      image={<SvgImage src={teamSvg} />}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        {multiple ? (\r\n          <Trans message=\"Select users\" />\r\n        ) : (\r\n          <Trans message=\"Select a user\" />\r\n        )}\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <TextField\r\n          autoFocus\r\n          size=\"sm\"\r\n          className=\"mb-20\"\r\n          startAdornment={<SearchIcon />}\r\n          placeholder={trans(message('Search for user by name or email'))}\r\n          value={searchTerm}\r\n          onChange={e => {\r\n            setSearchTerm(e.target.value);\r\n          }}\r\n        />\r\n        {!query.isLoading && !users.length && emptyStateMessage}\r\n        <div className=\"grid grid-cols-2 gap-x-10\">\r\n          {users.map(user => (\r\n            <UserListItem\r\n              isSelected={!!selectedUsers.find(u => u.id === user.id)}\r\n              key={user.id}\r\n              user={user}\r\n              onSelected={user => {\r\n                if (multiple) {\r\n                  if (selectedUsers.find(u => u.id === user.id)) {\r\n                    setSelectedUsers(\r\n                      selectedUsers.filter(u => u.id !== user.id),\r\n                    );\r\n                  } else {\r\n                    setSelectedUsers([...selectedUsers, user as T]);\r\n                  }\r\n                } else {\r\n                  close(user);\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </DialogBody>\r\n      {multiple && (\r\n        <DialogFooter>\r\n          <Button onClick={() => close()}>\r\n            <Trans message=\"Cancel\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            onClick={() => close(selectedUsers)}\r\n            disabled={!selectedUsers.length}\r\n          >\r\n            <Trans message=\"Select\" />\r\n          </Button>\r\n        </DialogFooter>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface UserListItemProps {\r\n  isSelected: boolean;\r\n  user: NormalizedModel;\r\n  onSelected: (user: NormalizedModel) => void;\r\n}\r\nfunction UserListItem({user, onSelected, isSelected}: UserListItemProps) {\r\n  return (\r\n    <div\r\n      key={user.id}\r\n      className={clsx(\r\n        'flex items-center gap-10 rounded border-1 p-10 outline-none ring-offset-4 focus-visible:ring',\r\n        isSelected\r\n          ? 'border-primary bg-primary/5 hover:bg-primary/10'\r\n          : 'border-transparent hover:bg-hover',\r\n      )}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onClick={() => {\r\n        onSelected(user);\r\n      }}\r\n      onKeyDown={e => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          e.preventDefault();\r\n          onSelected(user);\r\n        }\r\n      }}\r\n    >\r\n      <Avatar src={user.image} label={user.name} circle />\r\n      <div className=\"overflow-hidden\">\r\n        <div className=\"overflow-hidden text-ellipsis\">{user.name}</div>\r\n        <div className=\"overflow-hidden text-ellipsis text-muted\">\r\n          {user.description}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Role} from '@common/auth/role';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  userIds: number[];\r\n}\r\n\r\nexport function useRemoveUsersFromRole(role: Role) {\r\n  return useMutation({\r\n    mutationFn: ({userIds}: Payload) =>\r\n      removeUsersFromRole({userIds, roleId: role.id}),\r\n    onSuccess: (response, payload) => {\r\n      toast(\r\n        message('Removed [one 1 user|other :count users] from “{role}“', {\r\n          values: {count: payload.userIds.length, role: role.name},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction removeUsersFromRole({\r\n  roleId,\r\n  userIds,\r\n}: Payload & {roleId: number}): Promise<Response> {\r\n  return apiClient\r\n    .post(`roles/${roleId}/remove-users`, {userIds})\r\n    .then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Role} from '@common/auth/role';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  userIds: number[];\r\n}\r\n\r\nexport function useAddUsersToRole(role: Role) {\r\n  return useMutation({\r\n    mutationFn: ({userIds}: Payload) =>\r\n      addUsersToRole({userIds, roleId: role.id}),\r\n    onSuccess: (response, payload) => {\r\n      toast(\r\n        message('Assigned [one 1 user|other :count users] to {role}', {\r\n          values: {count: payload.userIds.length, role: role.name},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction addUsersToRole({\r\n  roleId,\r\n  userIds,\r\n}: Payload & {roleId: number}): Promise<Response> {\r\n  return apiClient\r\n    .post(`roles/${roleId}/add-users`, {userIds})\r\n    .then(r => r.data);\r\n}\r\n","import {Role} from '@common/auth/role';\r\nimport {ColumnConfig} from '@common/datatable/column-config';\r\nimport {User} from '@ui/types/user';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport React from 'react';\r\nimport teamSvg from '../team.svg';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {SelectUserDialog} from '@common/users/select-user-dialog';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport {useDataTable} from '@common/datatable/page/data-table-context';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {useRemoveUsersFromRole} from '../requests/use-remove-users-from-role';\r\nimport {useAddUsersToRole} from '../requests/use-add-users-to-role';\r\nimport {DataTable} from '@common/datatable/data-table';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\n\r\nconst userColumn: ColumnConfig<User> = {\r\n  key: 'name',\r\n  allowsSorting: true,\r\n  sortingKey: 'email',\r\n  width: 'flex-3 min-w-200',\r\n  header: () => <Trans message=\"User\" />,\r\n  body: user => (\r\n    <NameWithAvatar\r\n      image={user.image}\r\n      label={user.name}\r\n      description={user.email}\r\n    />\r\n  ),\r\n};\r\n\r\nconst desktopColumns: ColumnConfig<User>[] = [\r\n  userColumn,\r\n  {\r\n    key: 'first_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"First name\" />,\r\n    body: user => user.first_name,\r\n  },\r\n  {\r\n    key: 'last_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last name\" />,\r\n    body: user => user.last_name,\r\n  },\r\n  {\r\n    key: 'created_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Assigned at\" />,\r\n    body: user => <FormattedDate date={user.created_at} />,\r\n  },\r\n];\r\n\r\nconst mobileColumns: ColumnConfig<User>[] = [userColumn];\r\n\r\ninterface CrupdateRolePageUsersPanelProps {\r\n  role: Role;\r\n}\r\nexport function EditRolePageUsersPanel({\r\n  role,\r\n}: CrupdateRolePageUsersPanelProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  if (role.guests || role.type === 'workspace') {\r\n    return (\r\n      <div className=\"pb-10 pt-30\">\r\n        <DataTableEmptyStateMessage\r\n          image={teamSvg}\r\n          title={<Trans message=\"Users can't be assigned to this role\" />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataTable\r\n      endpoint=\"users\"\r\n      columns={isMobile ? mobileColumns : desktopColumns}\r\n      queryParams={{roleId: `${role.id}`}}\r\n      actions={<AssignUserAction role={role} />}\r\n      selectedActions={<RemoveUsersAction role={role} />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={teamSvg}\r\n          title={\r\n            <Trans message=\"No users have been assigned to this role yet\" />\r\n          }\r\n          filteringTitle={<Trans message=\"No matching users\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\ninterface AssignUserActionProps {\r\n  role: Role;\r\n}\r\nfunction AssignUserAction({role}: AssignUserActionProps) {\r\n  const addUsers = useAddUsersToRole(role);\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={user => {\r\n        if (user) {\r\n          addUsers.mutate(\r\n            {userIds: [user.id as number]},\r\n            {\r\n              onSuccess: () => {\r\n                queryClient.invalidateQueries({\r\n                  queryKey: DatatableDataQueryKey('users', {\r\n                    roleId: `${role.id}`,\r\n                  }),\r\n                });\r\n              },\r\n            },\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <Button variant=\"flat\" color=\"primary\" disabled={addUsers.isPending}>\r\n        <Trans message=\"Assign user\" />\r\n      </Button>\r\n      <SelectUserDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ntype RemoveUsersActionProps = {\r\n  role: Role;\r\n};\r\nexport function RemoveUsersAction({role}: RemoveUsersActionProps) {\r\n  const removeUsers = useRemoveUsersFromRole(role);\r\n  const {selectedRows} = useDataTable();\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          removeUsers.mutate(\r\n            {userIds: selectedRows as number[]},\r\n            {\r\n              onSuccess: () => {\r\n                queryClient.invalidateQueries({\r\n                  queryKey: DatatableDataQueryKey('users', {\r\n                    roleId: `${role.id}`,\r\n                  }),\r\n                });\r\n              },\r\n            },\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <Button variant=\"flat\" color=\"danger\" disabled={removeUsers.isPending}>\r\n        <Trans message=\"Remove users\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        title={\r\n          <Trans\r\n            message=\"Remove [one 1 user|other :count users] from “:name“ role?\"\r\n            values={{count: selectedRows.length, name: role.name}}\r\n          />\r\n        }\r\n        body={<Trans message=\"This will permanently remove the users.\" />}\r\n        confirm={<Trans message=\"Remove\" />}\r\n        isDanger\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useRole} from '../requests/use-role';\r\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\r\nimport {Role} from '@common/auth/role';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Tabs} from '@ui/tabs/tabs';\r\nimport {Tab} from '@ui/tabs/tab';\r\nimport {TabList} from '@ui/tabs/tab-list';\r\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\r\nimport {useUpdateRole} from '../requests/use-update-role';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\r\nimport {EditRolePageUsersPanel} from './edit-role-page-users-panel';\r\n\r\nexport function EditRolePage() {\r\n  const query = useRole();\r\n\r\n  if (query.status !== 'success') {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  return <PageContent role={query.data.role} />;\r\n}\r\n\r\ninterface PageContentProps {\r\n  role: Role;\r\n}\r\nfunction PageContent({role}: PageContentProps) {\r\n  const form = useForm<Role>({defaultValues: role});\r\n  const updateRole = useUpdateRole();\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        updateRole.mutate(values);\r\n      }}\r\n      title={<Trans message=\"Edit “:name“ role\" values={{name: role.name}} />}\r\n      isLoading={updateRole.isPending}\r\n    >\r\n      <Tabs isLazy>\r\n        <TabList>\r\n          <Tab>\r\n            <Trans message=\"Settings\" />\r\n          </Tab>\r\n          <Tab>\r\n            <Trans message=\"Users\" />\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanels className=\"pt-20\">\r\n          <TabPanel>\r\n            <CrupdateRolePageSettingsPanel isInternal={role.internal} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <EditRolePageUsersPanel role={role} />\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {Role} from '@common/auth/role';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\n\r\ninterface Response extends BackendResponse {\r\n  role: Role;\r\n}\r\n\r\nexport interface CreateRolePayload extends Partial<Role> {}\r\n\r\nconst Endpoint = 'roles';\r\n\r\nexport function useCreateRole(form: UseFormReturn<CreateRolePayload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: CreateRolePayload) => createRole(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Created new role')));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction createRole({id, ...payload}: CreateRolePayload): Promise<Response> {\r\n  return apiClient.post(Endpoint, payload).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\r\nimport {CreateRolePayload, useCreateRole} from '../requests/user-create-role';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\n\r\nexport function CreateRolePage() {\r\n  const form = useForm<CreateRolePayload>({defaultValues: {type: 'sitewide'}});\r\n  const createRole = useCreateRole(form);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        createRole.mutate(values, {\r\n          onSuccess: response => {\r\n            navigate(`/admin/roles/${response.role.id}/edit`);\r\n          },\r\n        });\r\n      }}\r\n      title={<Trans message=\"Add new role\" />}\r\n      isLoading={createRole.isPending}\r\n    >\r\n      <CrupdateRolePageSettingsPanel />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '@ui/i18n/message';\r\nimport {TagType} from '../../core/settings/site-config-context';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const TagIndexPageFilters = (types: TagType[]): BackendFilter[] => {\r\n  return [\r\n    {\r\n      key: 'type',\r\n      label: message('Type'),\r\n      description: message('Type of the tag'),\r\n      defaultOperator: FilterOperator.ne,\r\n      control: {\r\n        type: FilterControlType.Select,\r\n        defaultValue: types[0].name,\r\n        options: types.map(type => ({\r\n          key: type.name,\r\n          label: message(type.name),\r\n          value: type.name,\r\n        })),\r\n      },\r\n    },\r\n    createdAtFilter({\r\n      description: message('Date tag was created'),\r\n    }),\r\n    updatedAtFilter({\r\n      description: message('Date tag was last updated'),\r\n    }),\r\n  ];\r\n};\r\n","export default \"__VITE_ASSET__8de61ea9__\"","import {Tag} from '../../tags/tag';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect} from '@ui/forms/select/select';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {useContext} from 'react';\r\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\r\n\r\ninterface CrupdateTagFormProps {\r\n  onSubmit: (values: Partial<Tag>) => void;\r\n  formId: string;\r\n  form: UseFormReturn<Partial<Tag>>;\r\n}\r\nexport function CrupdateTagForm({\r\n  form,\r\n  onSubmit,\r\n  formId,\r\n}: CrupdateTagFormProps) {\r\n  const {\r\n    tags: {types},\r\n  } = useContext(SiteConfigContext);\r\n  const watchedType = form.watch('type');\r\n  const isSystem = !!types.find(t => t.name === watchedType && t.system);\r\n\r\n  return (\r\n    <Form id={formId} form={form} onSubmit={onSubmit}>\r\n      <FormTextField\r\n        name=\"name\"\r\n        label={<Trans message=\"Name\" />}\r\n        description={<Trans message=\"Unique tag identifier.\" />}\r\n        className=\"mb-20\"\r\n        required\r\n        autoFocus\r\n      />\r\n      <FormTextField\r\n        name=\"display_name\"\r\n        label={<Trans message=\"Display name\" />}\r\n        description={<Trans message=\"User friendly tag name.\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormSelect\r\n        label={<Trans message=\"Type\" />}\r\n        name=\"type\"\r\n        selectionMode=\"single\"\r\n        disabled={isSystem}\r\n      >\r\n        {types\r\n          .filter(t => !t.system)\r\n          .map(type => (\r\n            <Item key={type.name} value={type.name}>\r\n              <Trans message={type.name} />\r\n            </Item>\r\n          ))}\r\n      </FormSelect>\r\n    </Form>\r\n  );\r\n}\r\n","\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"%\":\"percent\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ľ\":\"L\",\"ľ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ō\":\"O\",\"ō\":\"o\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ŕ\":\"R\",\"ŕ\":\"r\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ŵ\":\"W\",\"ŵ\":\"w\",\"Ŷ\":\"Y\",\"ŷ\":\"y\",\"Ÿ\":\"Y\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"Ə\":\"E\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"ə\":\"e\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"ѝ\":\"u\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"Ғ\":\"GH\",\"ғ\":\"gh\",\"Қ\":\"KH\",\"қ\":\"kh\",\"Ң\":\"NG\",\"ң\":\"ng\",\"Ү\":\"UE\",\"ү\":\"ue\",\"Ұ\":\"U\",\"ұ\":\"u\",\"Һ\":\"H\",\"һ\":\"h\",\"Ә\":\"AE\",\"ә\":\"ae\",\"Ө\":\"OE\",\"ө\":\"oe\",\"Ա\":\"A\",\"Բ\":\"B\",\"Գ\":\"G\",\"Դ\":\"D\",\"Ե\":\"E\",\"Զ\":\"Z\",\"Է\":\"E\\'\",\"Ը\":\"Y\\'\",\"Թ\":\"T\\'\",\"Ժ\":\"JH\",\"Ի\":\"I\",\"Լ\":\"L\",\"Խ\":\"X\",\"Ծ\":\"C\\'\",\"Կ\":\"K\",\"Հ\":\"H\",\"Ձ\":\"D\\'\",\"Ղ\":\"GH\",\"Ճ\":\"TW\",\"Մ\":\"M\",\"Յ\":\"Y\",\"Ն\":\"N\",\"Շ\":\"SH\",\"Չ\":\"CH\",\"Պ\":\"P\",\"Ջ\":\"J\",\"Ռ\":\"R\\'\",\"Ս\":\"S\",\"Վ\":\"V\",\"Տ\":\"T\",\"Ր\":\"R\",\"Ց\":\"C\",\"Փ\":\"P\\'\",\"Ք\":\"Q\\'\",\"Օ\":\"O\\'\\'\",\"Ֆ\":\"F\",\"և\":\"EV\",\"ء\":\"a\",\"آ\":\"aa\",\"أ\":\"a\",\"ؤ\":\"u\",\"إ\":\"i\",\"ئ\":\"e\",\"ا\":\"a\",\"ب\":\"b\",\"ة\":\"h\",\"ت\":\"t\",\"ث\":\"th\",\"ج\":\"j\",\"ح\":\"h\",\"خ\":\"kh\",\"د\":\"d\",\"ذ\":\"th\",\"ر\":\"r\",\"ز\":\"z\",\"س\":\"s\",\"ش\":\"sh\",\"ص\":\"s\",\"ض\":\"dh\",\"ط\":\"t\",\"ظ\":\"z\",\"ع\":\"a\",\"غ\":\"gh\",\"ف\":\"f\",\"ق\":\"q\",\"ك\":\"k\",\"ل\":\"l\",\"م\":\"m\",\"ن\":\"n\",\"ه\":\"h\",\"و\":\"w\",\"ى\":\"a\",\"ي\":\"y\",\"ً\":\"an\",\"ٌ\":\"on\",\"ٍ\":\"en\",\"َ\":\"a\",\"ُ\":\"u\",\"ِ\":\"e\",\"ْ\":\"\",\"٠\":\"0\",\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"پ\":\"p\",\"چ\":\"ch\",\"ژ\":\"zh\",\"ک\":\"k\",\"گ\":\"g\",\"ی\":\"y\",\"۰\":\"0\",\"۱\":\"1\",\"۲\":\"2\",\"۳\":\"3\",\"۴\":\"4\",\"۵\":\"5\",\"۶\":\"6\",\"۷\":\"7\",\"۸\":\"8\",\"۹\":\"9\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"Ṣ\":\"S\",\"ṣ\":\"s\",\"Ẁ\":\"W\",\"ẁ\":\"w\",\"Ẃ\":\"W\",\"ẃ\":\"w\",\"Ẅ\":\"W\",\"ẅ\":\"w\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"–\":\"-\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"„\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₸\":\"kazakhstani tenge\",\"₹\":\"indian rupee\",\"₺\":\"turkish lira\",\"₽\":\"russian ruble\",\"₿\":\"bitcoin\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\",\"ﻵ\":\"laa\",\"ﻷ\":\"laa\",\"ﻹ\":\"lai\",\"ﻻ\":\"la\"}')\n  var locales = JSON.parse('{\"bg\":{\"Й\":\"Y\",\"Ц\":\"Ts\",\"Щ\":\"Sht\",\"Ъ\":\"A\",\"Ь\":\"Y\",\"й\":\"y\",\"ц\":\"ts\",\"щ\":\"sht\",\"ъ\":\"a\",\"ь\":\"y\"},\"de\":{\"Ä\":\"AE\",\"ä\":\"ae\",\"Ö\":\"OE\",\"ö\":\"oe\",\"Ü\":\"UE\",\"ü\":\"ue\",\"ß\":\"ss\",\"%\":\"prozent\",\"&\":\"und\",\"|\":\"oder\",\"∑\":\"summe\",\"∞\":\"unendlich\",\"♥\":\"liebe\"},\"es\":{\"%\":\"por ciento\",\"&\":\"y\",\"<\":\"menor que\",\">\":\"mayor que\",\"|\":\"o\",\"¢\":\"centavos\",\"£\":\"libras\",\"¤\":\"moneda\",\"₣\":\"francos\",\"∑\":\"suma\",\"∞\":\"infinito\",\"♥\":\"amor\"},\"fr\":{\"%\":\"pourcent\",\"&\":\"et\",\"<\":\"plus petit\",\">\":\"plus grand\",\"|\":\"ou\",\"¢\":\"centime\",\"£\":\"livre\",\"¤\":\"devise\",\"₣\":\"franc\",\"∑\":\"somme\",\"∞\":\"infini\",\"♥\":\"amour\"},\"pt\":{\"%\":\"porcento\",\"&\":\"e\",\"<\":\"menor\",\">\":\"maior\",\"|\":\"ou\",\"¢\":\"centavo\",\"∑\":\"soma\",\"£\":\"libra\",\"∞\":\"infinito\",\"♥\":\"amor\"},\"uk\":{\"И\":\"Y\",\"и\":\"y\",\"Й\":\"Y\",\"й\":\"y\",\"Ц\":\"Ts\",\"ц\":\"ts\",\"Х\":\"Kh\",\"х\":\"kh\",\"Щ\":\"Shch\",\"щ\":\"shch\",\"Г\":\"H\",\"г\":\"h\"},\"vi\":{\"Đ\":\"D\",\"đ\":\"d\"},\"da\":{\"Ø\":\"OE\",\"ø\":\"oe\",\"Å\":\"AA\",\"å\":\"aa\",\"%\":\"procent\",\"&\":\"og\",\"|\":\"eller\",\"$\":\"dollar\",\"<\":\"mindre end\",\">\":\"større end\"},\"nb\":{\"&\":\"og\",\"Å\":\"AA\",\"Æ\":\"AE\",\"Ø\":\"OE\",\"å\":\"aa\",\"æ\":\"ae\",\"ø\":\"oe\"},\"it\":{\"&\":\"e\"},\"nl\":{\"&\":\"en\"},\"sv\":{\"&\":\"och\",\"Å\":\"AA\",\"Ä\":\"AE\",\"Ö\":\"OE\",\"å\":\"aa\",\"ä\":\"ae\",\"ö\":\"oe\"}}')\n\n  function replace (string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected')\n    }\n\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    var locale = locales[options.locale] || {}\n\n    var replacement = options.replacement === undefined ? '-' : options.replacement\n\n    var trim = options.trim === undefined ? true : options.trim\n\n    var slug = string.normalize().split('')\n      // replace characters based on charMap\n      .reduce(function (result, ch) {\n        var appendChar = locale[ch];\n        if (appendChar === undefined) appendChar = charMap[ch];\n        if (appendChar === undefined) appendChar = ch;\n        if (appendChar === replacement) appendChar = ' ';\n        return result + appendChar\n          // remove not allowed characters\n          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]+/g, '')\n      }, '');\n\n    if (options.strict) {\n      slug = slug.replace(/[^A-Za-z0-9\\s]/g, '');\n    }\n\n    if (trim) {\n      slug = slug.trim()\n    }\n\n    // Replace spaces with replacement character, treating multiple consecutive\n    // spaces as a single space.\n    slug = slug.replace(/\\s+/g, replacement);\n\n    if (options.lower) {\n      slug = slug.toLowerCase()\n    }\n\n    return slug\n  }\n\n  replace.extend = function (customMap) {\n    Object.assign(charMap, customMap)\n  }\n\n  return replace\n}))\n","import slugify from 'slugify';\r\n\r\nexport function slugifyString(\r\n  text: string,\r\n  replacement = '-',\r\n  strict = false,\r\n): string {\r\n  if (!text) return text;\r\n  let slugified = slugify(text, {\r\n    lower: true,\r\n    replacement,\r\n    strict,\r\n    remove: /[*+~.()'\"!:@?\\|/\\\\#]/g,\r\n  });\r\n  // some chinese text might not get slugified properly,\r\n  // just replace whitespace with dash in that case\r\n  if (!slugified) {\r\n    slugified = text.replace(/\\s+/g, '-').toLowerCase();\r\n  }\r\n  return slugified;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {slugifyString} from '@ui/utils/string/slugify-string';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload extends Partial<Tag> {}\r\n\r\nexport function useCreateNewTag(form: UseFormReturn<Payload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => createNewTag(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Tag created')));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createNewTag(payload: Payload): Promise<Response> {\r\n  payload.name = slugifyString(payload.name!);\r\n  return apiClient.post('tags', payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {CrupdateTagForm} from './crupdate-tag-form';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {useCreateNewTag} from './requests/use-create-new-tag';\r\nimport {useContext} from 'react';\r\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Tag} from '../../tags/tag';\r\n\r\nexport function CreateTagDialog() {\r\n  const {close, formId} = useDialogContext();\r\n  const {\r\n    tags: {types},\r\n  } = useContext(SiteConfigContext);\r\n  const form = useForm<Partial<Tag>>({\r\n    defaultValues: {\r\n      type: types[0].name,\r\n    },\r\n  });\r\n  const createNewTag = useCreateNewTag(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Add new tag\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateTagForm\r\n          formId={formId}\r\n          form={form}\r\n          onSubmit={values => {\r\n            createNewTag.mutate(values, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={createNewTag.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {slugifyString} from '@ui/utils/string/slugify-string';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\nexport interface UpdateTagPayload extends Partial<Tag> {\r\n  id: number;\r\n}\r\n\r\nexport function useUpdateTag(form: UseFormReturn<UpdateTagPayload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: UpdateTagPayload) => updateTag(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Tag updated')));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateTag({id, ...payload}: UpdateTagPayload): Promise<Response> {\r\n  if (payload.name) {\r\n    payload.name = slugifyString(payload.name!);\r\n  }\r\n  return apiClient.put(`tags/${id}`, payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {CrupdateTagForm} from './crupdate-tag-form';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Tag} from '../../tags/tag';\r\nimport {UpdateTagPayload, useUpdateTag} from './requests/use-update-tag';\r\n\r\ninterface UpdateTagDialogProps {\r\n  tag: Tag;\r\n}\r\nexport function UpdateTagDialog({tag}: UpdateTagDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<UpdateTagPayload>({\r\n    defaultValues: {\r\n      id: tag.id,\r\n      name: tag.name,\r\n      display_name: tag.display_name,\r\n      type: tag.type,\r\n    },\r\n  });\r\n  const updateTag = useUpdateTag(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Update “:name“ tag\" values={{name: tag.name}} />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateTagForm\r\n          formId={formId}\r\n          form={form as any}\r\n          onSubmit={values => {\r\n            updateTag.mutate(values as UpdateTagPayload, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={updateTag.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext, useMemo} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {Tag} from '../../tags/tag';\r\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\r\nimport {TagIndexPageFilters} from './tag-index-page-filters';\r\nimport softwareEngineerSvg from './software-engineer.svg';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {CreateTagDialog} from './create-tag-dialog';\r\nimport {UpdateTagDialog} from './update-tag-dialog';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\n\r\nconst columnConfig: ColumnConfig<Tag>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: tag => tag.name,\r\n  },\r\n  {\r\n    key: 'type',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: tag => tag.type,\r\n  },\r\n  {\r\n    key: 'display_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Display name\" />,\r\n    body: tag => tag.display_name,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: tag => <FormattedDate date={tag.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: tag => {\r\n      return (\r\n        <DialogTrigger type=\"modal\">\r\n          <IconButton size=\"md\" className=\"text-muted\">\r\n            <EditIcon />\r\n          </IconButton>\r\n          <UpdateTagDialog tag={tag} />\r\n        </DialogTrigger>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function TagIndexPage() {\r\n  const {tags} = useContext(SiteConfigContext);\r\n  const filters = useMemo(() => {\r\n    return TagIndexPageFilters(tags.types);\r\n  }, [tags.types]);\r\n\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"tags\"\r\n      title={<Trans message=\"Tags\" />}\r\n      columns={columnConfig}\r\n      filters={filters}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={softwareEngineerSvg}\r\n          title={<Trans message=\"No tags have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching tags\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <>\r\n      <DialogTrigger type=\"modal\">\r\n        <DataTableAddItemButton>\r\n          <Trans message=\"Add new tag\" />\r\n        </DataTableAddItemButton>\r\n        <CreateTagDialog />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const VisibilityIcon = createSvgIcon(\r\n  <path d=\"M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z\" />\r\n, 'VisibilityOutlined');\r\n","export default \"__VITE_ASSET__31048831__\"","import React, {Fragment} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {FileEntry} from '../../uploads/file-entry';\r\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\r\nimport {CheckIcon} from '@ui/icons/material/Check';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {FormattedBytes} from '@ui/i18n/formatted-bytes';\r\nimport {VisibilityIcon} from '@ui/icons/material/Visibility';\r\nimport uploadSvg from './upload.svg';\r\nimport {FilePreviewDialog} from '@common/uploads/components/file-preview/file-preview-dialog';\r\nimport {FILE_ENTRY_INDEX_FILTERS} from './file-entry-index-filters';\r\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\r\nimport {User} from '@ui/types/user';\r\n\r\nconst columnConfig: ColumnConfig<FileEntry>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: entry => (\r\n      <Fragment>\r\n        <div className=\"overflow-x-hidden overflow-ellipsis\">{entry.name}</div>\r\n        <div className=\"overflow-x-hidden overflow-ellipsis text-xs text-muted\">\r\n          {entry.file_name}\r\n        </div>\r\n      </Fragment>\r\n    ),\r\n  },\r\n  {\r\n    key: 'owner_id',\r\n    allowsSorting: true,\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Uploader\" />,\r\n    body: entry => {\r\n      const owner =\r\n        entry.users?.find(user => user.owns_entry) ?? entry.users?.[0];\r\n      if (!owner) return null;\r\n      return (\r\n        <NameWithAvatar\r\n          image={(owner as User).image}\r\n          label={(owner as User).name}\r\n          description={owner.email}\r\n        />\r\n      );\r\n    },\r\n  },\r\n  {\r\n    key: 'type',\r\n    width: 'w-100 flex-shrink-0',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: entry => (\r\n      <div className=\"flex items-center gap-12\">\r\n        <FileTypeIcon type={entry.type} className=\"h-24 w-24 overflow-hidden\" />\r\n        <div className=\"capitalize\">{entry.type}</div>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    key: 'public',\r\n    allowsSorting: true,\r\n    width: 'w-60 flex-shrink-0',\r\n    header: () => <Trans message=\"Public\" />,\r\n    body: entry =>\r\n      entry.public ? (\r\n        <CheckIcon className=\"text-positive icon-md\" />\r\n      ) : (\r\n        <CloseIcon className=\"text-danger icon-md\" />\r\n      ),\r\n  },\r\n  {\r\n    key: 'file_size',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"File size\" />,\r\n    body: entry => <FormattedBytes bytes={entry.file_size} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: entry => <FormattedDate date={entry.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: entry => {\r\n      return (\r\n        <DialogTrigger type=\"modal\">\r\n          <IconButton size=\"md\" className=\"text-muted\">\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <FilePreviewDialog entries={[entry]} />\r\n        </DialogTrigger>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function FileEntryIndexPage() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"file-entries\"\r\n      title={<Trans message=\"Uploaded files and folders\" />}\r\n      columns={columnConfig}\r\n      filters={FILE_ENTRY_INDEX_FILTERS}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={uploadSvg}\r\n          title={<Trans message=\"Nothing has been uploaded yet\" />}\r\n          filteringTitle={<Trans message=\"No matching files or folders\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '@ui/i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  timestampFilter,\r\n  updatedAtFilter,\r\n} from '../../datatable/filters/timestamp-filters';\r\n\r\nexport const SubscriptionIndexPageFilters: BackendFilter[] = [\r\n  {\r\n    key: 'ends_at',\r\n    label: message('Status'),\r\n    description: message('Whether subscription is active or cancelled'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: 'active',\r\n      options: [\r\n        {\r\n          key: 'active',\r\n          label: message('Active'),\r\n          value: {value: null, operator: FilterOperator.eq},\r\n        },\r\n        {\r\n          key: 'cancelled',\r\n          label: message('Cancelled'),\r\n          value: {value: null, operator: FilterOperator.ne},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: 'stripe',\r\n      options: [\r\n        {\r\n          key: 'stripe',\r\n          label: message('Stripe'),\r\n          value: 'stripe',\r\n        },\r\n        {\r\n          key: 'paypal',\r\n          label: message('PayPal'),\r\n          value: 'paypal',\r\n        },\r\n        {\r\n          key: 'none',\r\n          label: message('None'),\r\n          value: 'none',\r\n        },\r\n      ],\r\n    },\r\n    key: 'gateway_name',\r\n    label: message('Gateway'),\r\n    description: message(\r\n      'With which payment provider was subscription created',\r\n    ),\r\n    defaultOperator: FilterOperator.eq,\r\n  },\r\n  timestampFilter({\r\n    key: 'renews_at',\r\n    label: message('Renew date'),\r\n    description: message('Date subscription will renew'),\r\n  }),\r\n  createdAtFilter({\r\n    description: message('Date subscription was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date subscription was last updated'),\r\n  }),\r\n];\r\n","export default \"__VITE_ASSET__2e46d67b__\"","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {Subscription} from '@common/billing/subscription';\r\n\r\ninterface Response extends BackendResponse {\r\n  subscription: Subscription;\r\n}\r\n\r\nexport interface UpdateSubscriptionPayload extends Partial<Subscription> {\r\n  id: number;\r\n}\r\n\r\nexport function useUpdateSubscription(\r\n  form: UseFormReturn<UpdateSubscriptionPayload>,\r\n) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: UpdateSubscriptionPayload) => updateSubscription(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Subscription updated')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/subscriptions'),\r\n      });\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateSubscription({\r\n  id,\r\n  ...payload\r\n}: UpdateSubscriptionPayload): Promise<Response> {\r\n  return apiClient\r\n    .put(`billing/subscriptions/${id}`, payload)\r\n    .then(r => r.data);\r\n}\r\n","import {UseFormReturn} from 'react-hook-form';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect} from '@ui/forms/select/select';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\r\nimport {useProducts} from '../../billing/pricing-table/use-products';\r\nimport {FormattedPrice} from '../../billing/formatted-price';\r\nimport {FormNormalizedModelField} from '../../ui/normalized-model/normalized-model-field';\r\n\r\ninterface CrupdateSubscriptionForm {\r\n  onSubmit: (values: Partial<Subscription>) => void;\r\n  formId: string;\r\n  form: UseFormReturn<Partial<Subscription>>;\r\n}\r\nexport function CrupdateSubscriptionForm({\r\n  form,\r\n  onSubmit,\r\n  formId,\r\n}: CrupdateSubscriptionForm) {\r\n  const query = useProducts();\r\n  // @ts-ignore\r\n  const watchedProductId = form.watch('product_id');\r\n  const selectedProduct = query.data?.products.find(\r\n    p => p.id === watchedProductId,\r\n  );\r\n\r\n  return (\r\n    <Form id={formId} form={form} onSubmit={onSubmit}>\r\n      <FormNormalizedModelField\r\n        name=\"user_id\"\r\n        className=\"mb-20\"\r\n        endpoint=\"normalized-models/user\"\r\n        label={<Trans message=\"User\" />}\r\n      />\r\n      <FormSelect\r\n        name=\"product_id\"\r\n        selectionMode=\"single\"\r\n        className=\"mb-20\"\r\n        label={<Trans message=\"Plan\" />}\r\n      >\r\n        {query.data?.products\r\n          .filter(p => !p.free)\r\n          .map(product => (\r\n            <Item key={product.id} value={product.id}>\r\n              <Trans message={product.name} />\r\n            </Item>\r\n          ))}\r\n      </FormSelect>\r\n      {!selectedProduct?.free && (\r\n        <FormSelect\r\n          name=\"price_id\"\r\n          selectionMode=\"single\"\r\n          className=\"mb-20\"\r\n          label={<Trans message=\"Price\" />}\r\n        >\r\n          {selectedProduct?.prices.map(price => (\r\n            <Item key={price.id} value={price.id}>\r\n              <FormattedPrice price={price} />\r\n            </Item>\r\n          ))}\r\n        </FormSelect>\r\n      )}\r\n      <FormTextField\r\n        inputElementType=\"textarea\"\r\n        rows={3}\r\n        name=\"description\"\r\n        label={<Trans message=\"Description\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormDatePicker\r\n        className=\"mb-20\"\r\n        name=\"renews_at\"\r\n        granularity=\"day\"\r\n        label={<Trans message=\"Renews at\" />}\r\n        description={\r\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\r\n        }\r\n      />\r\n      <FormDatePicker\r\n        className=\"mb-20\"\r\n        name=\"ends_at\"\r\n        granularity=\"day\"\r\n        label={<Trans message=\"Ends at\" />}\r\n        description={\r\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\r\n        }\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {\r\n  UpdateSubscriptionPayload,\r\n  useUpdateSubscription,\r\n} from './requests/use-update-subscription';\r\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\r\n\r\ninterface UpdateSubscriptionDialogProps {\r\n  subscription: Subscription;\r\n}\r\nexport function UpdateSubscriptionDialog({\r\n  subscription,\r\n}: UpdateSubscriptionDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<UpdateSubscriptionPayload>({\r\n    defaultValues: {\r\n      id: subscription.id,\r\n      product_id: subscription.product_id,\r\n      price_id: subscription.price_id,\r\n      description: subscription.description,\r\n      renews_at: subscription.renews_at,\r\n      ends_at: subscription.ends_at,\r\n      user_id: subscription.user_id,\r\n    },\r\n  });\r\n  const updateSubscription = useUpdateSubscription(form);\r\n\r\n  return (\r\n    <Dialog size=\"md\">\r\n      <DialogHeader>\r\n        <Trans message=\"Update subscription\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateSubscriptionForm\r\n          formId={formId}\r\n          form={form as any}\r\n          onSubmit={values => {\r\n            updateSubscription.mutate(values as UpdateSubscriptionPayload, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={updateSubscription.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {Subscription} from '@common/billing/subscription';\r\n\r\nconst endpoint = 'billing/subscriptions';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload extends Partial<Subscription> {}\r\n\r\nexport function useCreateSubscription(form: UseFormReturn<Payload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => createNewSubscription(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Subscription created')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint),\r\n      });\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createNewSubscription(payload: Payload): Promise<Response> {\r\n  return apiClient.post(endpoint, payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useCreateSubscription} from './requests/use-create-subscription';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\r\n\r\nexport function CreateSubscriptionDialog() {\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<Partial<Subscription>>({});\r\n  const createSubscription = useCreateSubscription(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Add new subscription\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateSubscriptionForm\r\n          formId={formId}\r\n          form={form}\r\n          onSubmit={values => {\r\n            createSubscription.mutate(values, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={createSubscription.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PauseIcon = createSvgIcon(\r\n  <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\r\n, 'PauseOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PlayArrowIcon = createSvgIcon(\r\n  <path d=\"M10 8.64 15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\" />\r\n, 'PlayArrowOutlined');\r\n","import React, {Fragment} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {SubscriptionIndexPageFilters} from './subscription-index-page-filters';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport subscriptionsSvg from './subscriptions.svg';\r\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {UpdateSubscriptionDialog} from './update-subscription-dialog';\r\nimport {CreateSubscriptionDialog} from './create-subscription-dialog';\r\nimport {useCancelSubscription} from '../../billing/billing-page/requests/use-cancel-subscription';\r\nimport {PauseIcon} from '@ui/icons/material/Pause';\r\nimport {queryClient} from '../../http/query-client';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {useResumeSubscription} from '../../billing/billing-page/requests/use-resume-subscription';\r\nimport {PlayArrowIcon} from '@ui/icons/material/PlayArrow';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\r\n\r\nconst endpoint = 'billing/subscriptions';\r\n\r\nconst columnConfig: ColumnConfig<Subscription>[] = [\r\n  {\r\n    key: 'user_id',\r\n    allowsSorting: true,\r\n    width: 'flex-3 min-w-200',\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Customer\" />,\r\n    body: subscription =>\r\n      subscription.user && (\r\n        <NameWithAvatar\r\n          image={subscription.user.image}\r\n          label={subscription.user.name}\r\n          description={subscription.user.email}\r\n        />\r\n      ),\r\n  },\r\n  {\r\n    key: 'status',\r\n    width: 'w-100 flex-shrink-0',\r\n    header: () => <Trans message=\"Status\" />,\r\n    body: subscription => (\r\n      <Chip\r\n        size=\"xs\"\r\n        color={subscription.valid ? 'positive' : 'danger'}\r\n        radius=\"rounded\"\r\n        className=\"w-max\"\r\n      >\r\n        {subscription.gateway_status}\r\n      </Chip>\r\n    ),\r\n  },\r\n  {\r\n    key: 'product_id',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Plan\" />,\r\n    body: subscription => subscription.product?.name,\r\n  },\r\n  {\r\n    key: 'gateway_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Gateway\" />,\r\n    body: subscription => (\r\n      <span className=\"capitalize\">{subscription.gateway_name}</span>\r\n    ),\r\n  },\r\n  {\r\n    key: 'renews_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Renews at\" />,\r\n    body: subscription => <FormattedDate date={subscription.renews_at} />,\r\n  },\r\n  {\r\n    key: 'ends_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Ends at\" />,\r\n    body: subscription => <FormattedDate date={subscription.ends_at} />,\r\n  },\r\n  {\r\n    key: 'created_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Created at\" />,\r\n    body: subscription => <FormattedDate date={subscription.created_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    visibleInMode: 'all',\r\n    width: 'w-[168px] flex-shrink-0',\r\n    body: subscription => {\r\n      return <SubscriptionActions subscription={subscription} />;\r\n    },\r\n  },\r\n];\r\n\r\nexport function SubscriptionsIndexPage() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint={endpoint}\r\n      title={<Trans message=\"Subscriptions\" />}\r\n      columns={columnConfig}\r\n      filters={SubscriptionIndexPageFilters}\r\n      actions={<PageActions />}\r\n      enableSelection={false}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      queryParams={{with: 'product'}}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={subscriptionsSvg}\r\n          title={<Trans message=\"No subscriptions have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching subscriptions\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction PageActions() {\r\n  return (\r\n    <>\r\n      <DialogTrigger type=\"modal\">\r\n        <DataTableAddItemButton>\r\n          <Trans message=\"Add new subscription\" />\r\n        </DataTableAddItemButton>\r\n        <CreateSubscriptionDialog />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface SubscriptionActionsProps {\r\n  subscription: Subscription;\r\n}\r\nfunction SubscriptionActions({subscription}: SubscriptionActionsProps) {\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger type=\"modal\">\r\n        <IconButton size=\"md\" className=\"text-muted\">\r\n          <EditIcon />\r\n        </IconButton>\r\n        <UpdateSubscriptionDialog subscription={subscription} />\r\n      </DialogTrigger>\r\n      {subscription.cancelled && subscription.on_grace_period ? (\r\n        <ResumeSubscriptionButton subscription={subscription} />\r\n      ) : null}\r\n      {subscription.active ? (\r\n        <SuspendSubscriptionButton subscription={subscription} />\r\n      ) : null}\r\n      <CancelSubscriptionButton subscription={subscription} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction SuspendSubscriptionButton({subscription}: SubscriptionActionsProps) {\r\n  const cancelSubscription = useCancelSubscription();\r\n\r\n  const handleSuspendSubscription = () => {\r\n    cancelSubscription.mutate(\r\n      {subscriptionId: subscription.id},\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: DatatableDataQueryKey(endpoint),\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          handleSuspendSubscription();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Cancel subscription\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={cancelSubscription.isPending}\r\n        >\r\n          <PauseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Cancel subscription\" />}\r\n        body={\r\n          <div>\r\n            <Trans message=\"Are you sure you want to cancel this subscription?\" />\r\n            <div className=\"mt-10 text-sm font-semibold\">\r\n              <Trans message=\"This will put user on grace period until their next scheduled renewal date. Subscription can be renewed until that date by user or from admin area.\" />\r\n            </div>\r\n          </div>\r\n        }\r\n        confirm={<Trans message=\"Confirm\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction ResumeSubscriptionButton({subscription}: SubscriptionActionsProps) {\r\n  const resumeSubscription = useResumeSubscription();\r\n  const handleResumeSubscription = () => {\r\n    resumeSubscription.mutate(\r\n      {subscriptionId: subscription.id},\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: DatatableDataQueryKey(endpoint),\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          handleResumeSubscription();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Renew subscription\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          onClick={handleResumeSubscription}\r\n          disabled={resumeSubscription.isPending}\r\n        >\r\n          <PlayArrowIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Resume subscription\" />}\r\n        body={\r\n          <div>\r\n            <Trans message=\"Are you sure you want to resume this subscription?\" />\r\n            <div className=\"mt-10 text-sm font-semibold\">\r\n              <Trans message=\"This will put user on their original plan and billing cycle.\" />\r\n            </div>\r\n          </div>\r\n        }\r\n        confirm={<Trans message=\"Confirm\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction CancelSubscriptionButton({subscription}: SubscriptionActionsProps) {\r\n  const cancelSubscription = useCancelSubscription();\r\n\r\n  const handleDeleteSubscription = () => {\r\n    cancelSubscription.mutate(\r\n      {subscriptionId: subscription.id, delete: true},\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: DatatableDataQueryKey(endpoint),\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          handleDeleteSubscription();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Delete subscription\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={cancelSubscription.isPending}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"Delete subscription\" />}\r\n        body={\r\n          <div>\r\n            <Trans message=\"Are you sure you want to delete this subscription?\" />\r\n            <div className=\"mt-10 text-sm font-semibold\">\r\n              <Trans message=\"This will permanently delete the subscription and immediately cancel it on billing gateway. Subscription will not be renewable anymore.\" />\r\n            </div>\r\n          </div>\r\n        }\r\n        confirm={<Trans message=\"Confirm\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const SyncIcon = createSvgIcon(\r\n  <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" />\r\n, 'SyncOutlined');\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useSyncProducts() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: () => syncPlans(),\r\n    onSuccess: () => {\r\n      toast(trans(message('Plans synced')));\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not sync plans')),\r\n  });\r\n}\r\n\r\nfunction syncPlans(): Promise<Response> {\r\n  return apiClient.post('billing/products/sync').then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\n\r\nconst endpoint = (id: number) => `billing/products/${id}`;\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  productId: number;\r\n}\r\n\r\nexport function useDeleteProduct() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => updateProduct(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Plan deleted')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/products'),\r\n      });\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction updateProduct({productId}: Payload): Promise<Response> {\r\n  return apiClient.delete(endpoint(productId)).then(r => r.data);\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '@ui/i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const PlansIndexPageFilters: BackendFilter[] = [\r\n  {\r\n    key: 'subscriptions',\r\n    label: message('Subscriptions'),\r\n    description: message('Whether plan has any active subscriptions'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('Has active subscriptions'),\r\n          value: {value: '*', operator: FilterOperator.has},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('Does not have active subscriptions'),\r\n          value: {value: '*', operator: FilterOperator.doesntHave},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date plan was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date plan was last updated'),\r\n  }),\r\n];\r\n","import React, {Fragment} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {FormattedDate} from '@ui/i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport softwareEngineerSvg from './../tags/software-engineer.svg';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport {Product} from '../../billing/product';\r\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\r\nimport {Link} from 'react-router';\r\nimport {FormattedPrice} from '../../billing/formatted-price';\r\nimport {SyncIcon} from '@ui/icons/material/Sync';\r\nimport {useSyncProducts} from './requests/use-sync-products';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {useDeleteProduct} from './requests/use-delete-product';\r\nimport {DeleteIcon} from '@ui/icons/material/Delete';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {useNavigate} from '../../ui/navigation/use-navigate';\r\nimport {PlansIndexPageFilters} from './plans-index-page-filters';\r\n\r\nconst columnConfig: ColumnConfig<Product>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: product => {\r\n      const price = product.prices[0];\r\n      return (\r\n        <NameWithAvatar\r\n          label={product.name}\r\n          description={\r\n            product.free ? (\r\n              <Trans message=\"Free\" />\r\n            ) : (\r\n              <FormattedPrice price={price} />\r\n            )\r\n          }\r\n        />\r\n      );\r\n    },\r\n  },\r\n  {\r\n    key: 'created_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"Created\" />,\r\n    body: product => <FormattedDate date={product.created_at} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: product => <FormattedDate date={product.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    visibleInMode: 'all',\r\n    hideHeader: true,\r\n    align: 'end',\r\n    maxWidth: 'max-w-84',\r\n    body: product => {\r\n      return (\r\n        <Fragment>\r\n          <IconButton\r\n            size=\"md\"\r\n            className=\"text-muted\"\r\n            elementType={Link}\r\n            to={`/admin/plans/${product.id}/edit`}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <DeleteProductButton product={product} />\r\n        </Fragment>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function PlansIndexPage() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"billing/products\"\r\n      title={<Trans message=\"Subscription plans\" />}\r\n      columns={columnConfig}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      filters={PlansIndexPageFilters}\r\n      onRowAction={item => {\r\n        navigate(`/admin/plans/${item.id}/edit`);\r\n      }}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={softwareEngineerSvg}\r\n          title={<Trans message=\"No plans have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching plans\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\ninterface DeleteProductButtonProps {\r\n  product: Product;\r\n}\r\nfunction DeleteProductButton({product}: DeleteProductButtonProps) {\r\n  const deleteProduct = useDeleteProduct();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          deleteProduct.mutate({productId: product.id});\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Delete plan\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={deleteProduct.isPending}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Delete plan\" />}\r\n        body={<Trans message=\"Are you sure you want to delete this plan?\" />}\r\n        confirm={<Trans message=\"Delete\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  const syncPlans = useSyncProducts();\r\n  return (\r\n    <Fragment>\r\n      <Tooltip label={<Trans message=\"Sync plans with Stripe & PayPal\" />}>\r\n        <IconButton\r\n          color=\"primary\"\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          disabled={syncPlans.isPending}\r\n          onClick={() => {\r\n            syncPlans.mutate();\r\n          }}\r\n        >\r\n          <SyncIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <DataTableAddItemButton elementType={Link} to=\"/admin/plans/new\">\r\n        <Trans message=\"Add new plan\" />\r\n      </DataTableAddItemButton>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useParams} from 'react-router';\r\nimport {Product} from '@common/billing/product';\r\n\r\nconst Endpoint = (id: number | string) => `billing/products/${id}`;\r\n\r\nexport interface FetchRoleResponse extends BackendResponse {\r\n  product: Product;\r\n}\r\n\r\nexport function useProduct() {\r\n  const {productId} = useParams();\r\n  return useQuery({\r\n    queryKey: [Endpoint(productId!)],\r\n    queryFn: () => fetchProduct(productId!),\r\n  });\r\n}\r\n\r\nfunction fetchProduct(productId: number | string): Promise<FetchRoleResponse> {\r\n  return apiClient.get(Endpoint(productId)).then(response => response.data);\r\n}\r\n","import {message} from '@ui/i18n/message';\r\n\r\nexport const BillingPeriodPresets = [\r\n  {\r\n    key: 'day1',\r\n    label: message('Daily'),\r\n    interval: 'day',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'week1',\r\n    label: message('Weekly'),\r\n    interval: 'week',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'month1',\r\n    label: message('Monthly'),\r\n    interval: 'month',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'month3',\r\n    label: message('Every 3 months'),\r\n    interval: 'month',\r\n    interval_count: 3,\r\n  },\r\n  {\r\n    key: 'month6',\r\n    label: message('Every 6 months'),\r\n    interval: 'month',\r\n    interval_count: 6,\r\n  },\r\n  {\r\n    key: 'year1',\r\n    label: message('Yearly'),\r\n    interval: 'year',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'custom',\r\n    label: message('Custom'),\r\n    interval: null,\r\n    interval_count: null,\r\n  },\r\n];\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {Product} from '@common/billing/product';\r\nimport React, {Fragment, useMemo, useState} from 'react';\r\nimport {useValueLists} from '@common/http/value-lists';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {FormSelect, Select} from '@ui/forms/select/select';\r\nimport {Price} from '@common/billing/price';\r\nimport {BillingPeriodPresets} from '@common/admin/plans/crupdate-plan-page/billing-period-presets';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\n\r\ninterface PriceFormProps {\r\n  index: number;\r\n  onRemovePrice: () => void;\r\n}\r\nexport function PriceForm({index, onRemovePrice}: PriceFormProps) {\r\n  const {trans} = useTrans();\r\n  const query = useValueLists(['currencies']);\r\n  const currencies = useMemo(() => {\r\n    return query.data?.currencies ? Object.values(query.data.currencies) : [];\r\n  }, [query.data]);\r\n  const {watch, getValues} = useFormContext<Product>();\r\n  const isNewProduct = !watch('id');\r\n  const isNewPrice = watch(`prices.${index}.id`) == null;\r\n  const subscriberCount = watch(`prices.${index}.subscriptions_count`) || 0;\r\n\r\n  // select billing period preset based on price \"interval\" and \"interval_count\"\r\n  const [billingPeriodPreset, setBillingPeriodPreset] = useState(() => {\r\n    const interval = getValues(`prices.${index}.interval`);\r\n    const intervalCount = getValues(`prices.${index}.interval_count`);\r\n    const preset = BillingPeriodPresets.find(\r\n      p => p.key === `${interval}${intervalCount}`,\r\n    );\r\n    return preset ? preset.key : 'custom';\r\n  });\r\n\r\n  const allowPriceChanges = isNewProduct || isNewPrice || !subscriberCount;\r\n\r\n  return (\r\n    <Fragment>\r\n      {!allowPriceChanges && (\r\n        <p className=\"mb-20 max-w-500 text-sm text-muted\">\r\n          <Trans\r\n            message=\"This price can't modified or deleted, because it has [one 1 subscriber|other :count subscribers]. You can instead add a new price.\"\r\n            values={{count: subscriberCount}}\r\n          />\r\n        </p>\r\n      )}\r\n\r\n      <FormTextField\r\n        required\r\n        disabled={!allowPriceChanges}\r\n        label={<Trans message=\"Amount\" />}\r\n        type=\"number\"\r\n        min={0.1}\r\n        step={0.01}\r\n        name={`prices.${index}.amount`}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormSelect\r\n        required\r\n        disabled={!allowPriceChanges}\r\n        label={<Trans message=\"Currency\" />}\r\n        name={`prices.${index}.currency`}\r\n        items={currencies}\r\n        showSearchField\r\n        searchPlaceholder={trans(message('Search currencies'))}\r\n        selectionMode=\"single\"\r\n        className=\"mb-20\"\r\n      >\r\n        {item => (\r\n          <Item\r\n            value={item.code}\r\n            key={item.code}\r\n          >{`${item.code}: ${item.name}`}</Item>\r\n        )}\r\n      </FormSelect>\r\n      <BillingPeriodSelect\r\n        disabled={!allowPriceChanges}\r\n        index={index}\r\n        value={billingPeriodPreset}\r\n        onValueChange={setBillingPeriodPreset}\r\n      />\r\n      {billingPeriodPreset === 'custom' && (\r\n        <CustomBillingPeriodField disabled={!allowPriceChanges} index={index} />\r\n      )}\r\n      <div className=\"text-right\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"danger\"\r\n          disabled={!allowPriceChanges}\r\n          onClick={() => {\r\n            onRemovePrice();\r\n          }}\r\n        >\r\n          <Trans message=\"Delete price\" />\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface BillingPeriodSelectProps {\r\n  index: number;\r\n  value: string;\r\n  onValueChange: (value: string) => void;\r\n  disabled: boolean;\r\n}\r\nfunction BillingPeriodSelect({\r\n  index,\r\n  value,\r\n  onValueChange,\r\n  disabled,\r\n}: BillingPeriodSelectProps) {\r\n  const {setValue: setFormValue} = useFormContext<Product>();\r\n\r\n  return (\r\n    <Select\r\n      label={<Trans message=\"Billing period\" />}\r\n      disabled={disabled}\r\n      className=\"mb-20\"\r\n      selectionMode=\"single\"\r\n      selectedValue={value}\r\n      onSelectionChange={value => {\r\n        onValueChange(value as string);\r\n        if (value === 'custom') {\r\n        } else {\r\n          const preset = BillingPeriodPresets.find(p => p.key === value);\r\n          if (preset) {\r\n            setFormValue(\r\n              `prices.${index}.interval`,\r\n              preset.interval as Price['interval'],\r\n            );\r\n            setFormValue(\r\n              `prices.${index}.interval_count`,\r\n              preset.interval_count as number,\r\n            );\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {BillingPeriodPresets.map(preset => (\r\n        <Item key={preset.key} value={preset.key}>\r\n          <Trans {...preset.label} />\r\n        </Item>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\ninterface CustomBillingPeriodFieldProps {\r\n  index: number;\r\n  disabled: boolean;\r\n}\r\nfunction CustomBillingPeriodField({\r\n  index,\r\n  disabled,\r\n}: CustomBillingPeriodFieldProps) {\r\n  const {watch} = useFormContext<Product>();\r\n  const interval = watch(`prices.${index}.interval`);\r\n  let maxIntervalCount: number;\r\n\r\n  if (interval === 'day') {\r\n    maxIntervalCount = 365;\r\n  } else if (interval === 'week') {\r\n    maxIntervalCount = 52;\r\n  } else {\r\n    maxIntervalCount = 12;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex w-min rounded border\">\r\n      <div className=\"flex items-center px-18 text-sm\">\r\n        <Trans message=\"Every\" />\r\n      </div>\r\n      <FormTextField\r\n        inputShadow=\"shadow-none\"\r\n        inputBorder=\"border-none\"\r\n        className=\"w-80 border-l border-r\"\r\n        name={`prices.${index}.interval_count`}\r\n        type=\"number\"\r\n        min={1}\r\n        max={maxIntervalCount}\r\n        disabled={disabled}\r\n        required\r\n      />\r\n      <FormSelect\r\n        inputShadow=\"shadow-none\"\r\n        inputBorder=\"border-none\"\r\n        name={`prices.${index}.interval`}\r\n        selectionMode=\"single\"\r\n        disabled={disabled}\r\n      >\r\n        <Item value=\"day\">\r\n          <Trans message=\"Days\" />\r\n        </Item>\r\n        <Item value=\"week\">\r\n          <Trans message=\"Weeks\" />\r\n        </Item>\r\n        <Item value=\"month\">\r\n          <Trans message=\"Months\" />\r\n        </Item>\r\n      </FormSelect>\r\n    </div>\r\n  );\r\n}\r\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React, {Fragment, ReactNode} from 'react';\r\nimport {useFieldArray, useFormContext} from 'react-hook-form';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {FormattedPrice} from '@common/billing/formatted-price';\r\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\r\nimport {PriceForm} from './price-form';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {CreateProductPayload} from '../requests/use-create-product';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {FormSelect} from '@ui/forms/select/select';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\r\nimport {Link} from 'react-router';\r\nimport {LinkStyle} from '@ui/buttons/external-link';\r\n\r\nexport function CrupdatePlanForm() {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        name=\"name\"\r\n        label={<Trans message=\"Name\" />}\r\n        className=\"mb-20\"\r\n        required\r\n        autoFocus\r\n      />\r\n      <FormTextField\r\n        name=\"description\"\r\n        label={<Trans message=\"Description\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n      />\r\n      <FormSelect\r\n        name=\"position\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Position in pricing table\" />}\r\n        className=\"mb-20\"\r\n      >\r\n        <Item value={0}>\r\n          <Trans message=\"First\" />\r\n        </Item>\r\n        <Item value={1}>\r\n          <Trans message=\"Second\" />\r\n        </Item>\r\n        <Item value={2}>\r\n          <Trans message=\"Third\" />\r\n        </Item>\r\n        <Item value={3}>\r\n          <Trans message=\"Fourth\" />\r\n        </Item>\r\n        <Item value={4}>\r\n          <Trans message=\"Fifth\" />\r\n        </Item>\r\n      </FormSelect>\r\n      <FormFileSizeField\r\n        className=\"mb-30\"\r\n        name=\"available_space\"\r\n        label={<Trans message=\"Allowed storage space\" />}\r\n        description={\r\n          <Trans\r\n            values={{\r\n              a: parts => (\r\n                <Link\r\n                  className={LinkStyle}\r\n                  target=\"_blank\"\r\n                  to=\"/admin/settings/uploading\"\r\n                >\r\n                  {parts}\r\n                </Link>\r\n              ),\r\n            }}\r\n            message=\"Total storage space all user uploads are allowed to take up.\"\r\n          />\r\n        }\r\n      />\r\n      <FormSwitch\r\n        name=\"recommended\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Plan will be displayed more prominently on pricing page.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Recommend\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"hidden\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Plan will not be shown on pricing or upgrade pages.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Hidden\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"free\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Will be assigned to all users, if they are not subscribed already.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Free\" />\r\n      </FormSwitch>\r\n      <Header>\r\n        <Trans message=\"Feature list\" />\r\n      </Header>\r\n      <FeatureListForm />\r\n      <PricingListForm />\r\n      <Header>\r\n        <Trans message=\"Permissions\" />\r\n      </Header>\r\n      <FormPermissionSelector name=\"permissions\" />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  children: ReactNode;\r\n}\r\nfunction Header({children}: HeaderProps) {\r\n  return <h2 className=\"mb-20 mt-40 text-base font-semibold\">{children}</h2>;\r\n}\r\n\r\nfunction FeatureListForm() {\r\n  const {fields, append, remove} = useFieldArray<CreateProductPayload>({\r\n    name: 'feature_list',\r\n  });\r\n  return (\r\n    <div>\r\n      {fields.map((field, index) => {\r\n        return (\r\n          <div key={field.id} className=\"mb-10 flex gap-10\">\r\n            <FormTextField\r\n              name={`feature_list.${index}.value`}\r\n              size=\"sm\"\r\n              className=\"flex-auto\"\r\n            />\r\n            <IconButton\r\n              size=\"sm\"\r\n              color=\"primary\"\r\n              className=\"flex-shrink-0\"\r\n              onClick={() => {\r\n                remove(index);\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        );\r\n      })}\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          append({value: ''});\r\n        }}\r\n      >\r\n        <Trans message=\"Add another line\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PricingListForm() {\r\n  const {\r\n    watch,\r\n    formState: {errors},\r\n  } = useFormContext<CreateProductPayload>();\r\n  const {fields, append, remove} = useFieldArray<\r\n    CreateProductPayload,\r\n    'prices',\r\n    'key'\r\n  >({\r\n    name: 'prices',\r\n    keyName: 'key',\r\n  });\r\n\r\n  // if plan is marked as free, hide pricing form\r\n  if (watch('free')) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header>\r\n        <Trans message=\"Pricing\" />\r\n      </Header>\r\n      {errors.prices?.message && (\r\n        <div className=\"mb-20 text-sm text-danger\">{errors.prices.message}</div>\r\n      )}\r\n      <Accordion variant=\"outline\" className=\"mb-10\">\r\n        {fields.map((field, index) => (\r\n          <AccordionItem\r\n            label={<FormattedPrice price={field} />}\r\n            key={field.key}\r\n          >\r\n            <PriceForm\r\n              index={index}\r\n              onRemovePrice={() => {\r\n                remove(index);\r\n              }}\r\n            />\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          append({\r\n            currency: 'USD',\r\n            amount: 1,\r\n            interval_count: 1,\r\n            interval: 'month',\r\n          });\r\n        }}\r\n      >\r\n        <Trans message=\"Add another price\" />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {Product} from '@common/billing/product';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {CreateProductPayload} from './use-create-product';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\n\r\ninterface Response extends BackendResponse {\r\n  product: Product;\r\n}\r\n\r\nexport interface UpdateProductPayload extends CreateProductPayload {\r\n  id: number;\r\n}\r\n\r\nconst Endpoint = (id: number) => `billing/products/${id}`;\r\n\r\nexport function useUpdateProduct(form: UseFormReturn<UpdateProductPayload>) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateProductPayload) => updateProduct(payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Plan updated')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: [Endpoint(response.product.id)],\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/products'),\r\n      });\r\n      navigate('/admin/plans');\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateProduct({\r\n  id,\r\n  ...payload\r\n}: UpdateProductPayload): Promise<Response> {\r\n  const backendPayload = {\r\n    ...payload,\r\n    feature_list: payload.feature_list.map(feature => feature.value),\r\n  };\r\n  return apiClient.put(Endpoint(id), backendPayload).then(r => r.data);\r\n}\r\n","import {FullPageLoader} from '@ui/progress/full-page-loader';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useForm} from 'react-hook-form';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {useProduct} from '../requests/use-product';\r\nimport {Product} from '@common/billing/product';\r\nimport {CrupdatePlanForm} from './crupdate-plan-form';\r\nimport {\r\n  UpdateProductPayload,\r\n  useUpdateProduct,\r\n} from '../requests/use-update-product';\r\n\r\nexport function EditPlanPage() {\r\n  const query = useProduct();\r\n\r\n  if (query.status !== 'success') {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  return <PageContent product={query.data.product} />;\r\n}\r\n\r\ninterface PageContentProps {\r\n  product: Product;\r\n}\r\nfunction PageContent({product}: PageContentProps) {\r\n  const form = useForm<UpdateProductPayload>({\r\n    defaultValues: {\r\n      ...product,\r\n      feature_list: product.feature_list.map(f => ({value: f})),\r\n    },\r\n  });\r\n  const updateProduct = useUpdateProduct(form);\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        updateProduct.mutate(values);\r\n      }}\r\n      title={\r\n        <Trans message=\"Edit “:name“ plan\" values={{name: product.name}} />\r\n      }\r\n      isLoading={updateProduct.isPending}\r\n    >\r\n      <CrupdatePlanForm />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {Product} from '@common/billing/product';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {Price} from '@common/billing/price';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\n\r\nconst endpoint = 'billing/products';\r\n\r\nexport interface CreateProductPayload\r\n  extends Omit<Partial<Product>, 'feature_list' | 'prices'> {\r\n  feature_list: {value: string}[];\r\n  prices: Omit<Price, 'id'>[];\r\n}\r\n\r\nexport function useCreateProduct(form: UseFormReturn<CreateProductPayload>) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (payload: CreateProductPayload) => createProduct(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Plan created')));\r\n      queryClient.invalidateQueries({queryKey: [endpoint]});\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/products'),\r\n      });\r\n      navigate('/admin/plans');\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createProduct(payload: CreateProductPayload): Promise<Response> {\r\n  const backendPayload = {\r\n    ...payload,\r\n    feature_list: payload.feature_list.map(feature => feature.value),\r\n  };\r\n  return apiClient.post(endpoint, backendPayload).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {CrupdatePlanForm} from './crupdate-plan-form';\r\nimport {\r\n  CreateProductPayload,\r\n  useCreateProduct,\r\n} from '../requests/use-create-product';\r\n\r\nexport function CreatePlanPage() {\r\n  const form = useForm<CreateProductPayload>({\r\n    defaultValues: {\r\n      free: false,\r\n      recommended: false,\r\n    },\r\n  });\r\n  const createProduct = useCreateProduct(form);\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        createProduct.mutate(values);\r\n      }}\r\n      title={<Trans message=\"Create new plan\" />}\r\n      isLoading={createProduct.isPending}\r\n    >\r\n      <CrupdatePlanForm />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {useFieldArray, useForm, useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport React, {Fragment} from 'react';\r\nimport {FormSelect} from '@ui/forms/select/select';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {MenuItemForm} from '../../menus/menu-item-form';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {AddMenuItemDialog} from '../../appearance/sections/menus/add-menu-item-dialog';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\r\nimport {useValueLists} from '@common/http/value-lists';\r\n\r\nexport function GdprSettings() {\r\n  const optionQuery = useValueLists(['menuItemCategories']);\r\n\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"GDPR\" />}\r\n      description={\r\n        <Trans message=\"Configure settings related to EU General Data Protection Regulation.\" />\r\n      }\r\n      isLoading={optionQuery.isLoading}\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\nfunction Form({data}: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        cookie_notice: {\r\n          enable: data.client.cookie_notice?.enable ?? false,\r\n          button: data.client.cookie_notice?.button ?? {},\r\n          position: data.client.cookie_notice?.position ?? 'bottom',\r\n        },\r\n        registration: {\r\n          policies: data.client.registration?.policies ?? [],\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <CookieNoticeSection />\r\n      <SettingsSeparator />\r\n      <RegistrationPoliciesSection />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n\r\nfunction CookieNoticeSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const noticeEnabled = watch('client.cookie_notice.enable');\r\n\r\n  return (\r\n    <div>\r\n      <FormSwitch\r\n        name=\"client.cookie_notice.enable\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Whether cookie notice should be shown automatically to users from EU until it is accepted.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Enable cookie notice\" />\r\n      </FormSwitch>\r\n      {noticeEnabled && (\r\n        <Fragment>\r\n          <div className=\"mb-20 border-b pb-6\">\r\n            <div className=\"mb-20 border-b pb-10 text-sm font-medium\">\r\n              <Trans message=\"Information button\" />\r\n            </div>\r\n            <div className=\"mb-20\">\r\n              <MenuItemForm\r\n                hideRoleAndPermissionFields\r\n                formPathPrefix=\"client.cookie_notice.button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <FormSelect\r\n            name=\"client.cookie_notice.position\"\r\n            selectionMode=\"single\"\r\n            label={<Trans message=\"Cookie notice position\" />}\r\n            className=\"mb-20\"\r\n          >\r\n            <Item value=\"top\">\r\n              <Trans message=\"Top\" />\r\n            </Item>\r\n            <Item value=\"bottom\">\r\n              <Trans message=\"Bottom\" />\r\n            </Item>\r\n          </FormSelect>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RegistrationPoliciesSection() {\r\n  const {fields, append, remove} = useFieldArray<\r\n    AdminSettings,\r\n    'client.registration.policies'\r\n  >({\r\n    name: 'client.registration.policies',\r\n  });\r\n  const {watch} = useFormContext();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-6 text-sm\">\r\n        <Trans message=\"Registration policies\" />\r\n      </div>\r\n      <div className=\"text-xs text-muted\">\r\n        <Trans message=\"Create policies that will be shown on registration page. User will be required to accept them by toggling a checkbox.\" />\r\n      </div>\r\n      <Accordion className=\"mt-16\" variant=\"outline\">\r\n        {fields.map((field, index) => (\r\n          <AccordionItem\r\n            key={field.id}\r\n            label={field.label}\r\n            chevronPosition=\"left\"\r\n            endAppend={\r\n              <IconButton\r\n                variant=\"text\"\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                onClick={() => remove(index)}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <MenuItemForm\r\n              hideRoleAndPermissionFields\r\n              formPathPrefix={`client.registration.policies.${index}`}\r\n            />\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        onClose={value => {\r\n          if (value) {\r\n            append(value);\r\n          }\r\n        }}\r\n      >\r\n        <Button\r\n          className=\"mt-12\"\r\n          variant=\"link\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          size=\"xs\"\r\n        >\r\n          <Trans message=\"Add another policy\" />\r\n        </Button>\r\n        <AddMenuItemDialog title={<Trans message=\"Add policy\" />} />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {CustomPage} from '../custom-page';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useParams} from 'react-router';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\n\r\ninterface Response extends BackendResponse {\r\n  page: CustomPage;\r\n}\r\n\r\nexport function useUpdateCustomPage(endpoint?: string) {\r\n  const {pageId} = useParams();\r\n  const finalEndpoint = `${endpoint || 'custom-pages'}/${pageId}`;\r\n  return useMutation({\r\n    mutationFn: (payload: CreateCustomPagePayload) =>\r\n      updatePage(payload, finalEndpoint),\r\n    onError: err => showHttpErrorToast(err),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(finalEndpoint),\r\n      });\r\n      toast(message('Page updated'));\r\n    },\r\n  });\r\n}\r\n\r\nfunction updatePage(\r\n  payload: CreateCustomPagePayload,\r\n  endpoint: string,\r\n): Promise<Response> {\r\n  return apiClient.put(`${endpoint}`, payload).then(r => r.data);\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport clsx from 'clsx';\r\nimport {EditIcon} from '@ui/icons/material/Edit';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\n\r\nexport function ArticleEditorTitle() {\r\n  const [editingTitle, setEditingTitle] = useState(false);\r\n  const {trans} = useTrans();\r\n  const form = useFormContext<CreateCustomPagePayload>();\r\n  const watchedTitle = form.watch('title');\r\n\r\n  const titlePlaceholder = trans({message: 'Title'});\r\n\r\n  if (editingTitle) {\r\n    return (\r\n      <FormTextField\r\n        placeholder={titlePlaceholder}\r\n        autoFocus\r\n        className=\"mb-30\"\r\n        onBlur={() => {\r\n          setEditingTitle(false);\r\n        }}\r\n        name=\"title\"\r\n        required\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <h1\r\n      tabIndex={0}\r\n      onClick={() => {\r\n        setEditingTitle(true);\r\n      }}\r\n      onFocus={() => {\r\n        setEditingTitle(true);\r\n      }}\r\n      className={clsx(\r\n        'cursor-pointer rounded hover:bg-primary/focus',\r\n        !watchedTitle && 'text-muted',\r\n      )}\r\n    >\r\n      {watchedTitle || titlePlaceholder}\r\n      <EditIcon className=\"mx-8 mt-8 align-top text-muted icon-sm\" />\r\n    </h1>\r\n  );\r\n}\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {RefCallBack} from 'react-hook-form';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {LinkIcon} from '@ui/icons/material/Link';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {slugifyString} from '@ui/utils/string/slugify-string';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\n\r\nexport interface SlugEditorProps {\r\n  prefix?: string;\r\n  suffix?: string;\r\n  host?: string;\r\n  value?: string | null;\r\n  placeholder?: string;\r\n  onChange?: (value: string) => void;\r\n  className?: string;\r\n  inputRef?: RefCallBack;\r\n  onInputBlur?: () => void;\r\n  showLinkIcon?: boolean;\r\n  pattern?: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  hideButton?: boolean;\r\n}\r\nexport function SlugEditor({\r\n  host,\r\n  value: initialValue = '',\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n  inputRef,\r\n  onInputBlur,\r\n  showLinkIcon = true,\r\n  pattern,\r\n  minLength,\r\n  maxLength,\r\n  hideButton,\r\n  ...props\r\n}: SlugEditorProps) {\r\n  const {base_url} = useSettings();\r\n  const prefix = props.prefix ? `/${props.prefix}` : '';\r\n  const suffix = props.suffix ? `/${props.suffix}` : '';\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [value, setValue] = useState(initialValue);\r\n  host = host || base_url;\r\n\r\n  useEffect(() => {\r\n    setValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!isEditing) {\r\n      setIsEditing(true);\r\n    } else {\r\n      setIsEditing(false);\r\n      if (value) {\r\n        onChange?.(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  let preview: string = '';\r\n  if (value) {\r\n    preview = value;\r\n  } else if (placeholder) {\r\n    preview = slugifyString(placeholder);\r\n  }\r\n\r\n  return (\r\n    // can't use <form/> here as component might be used inside another form\r\n    <div className={clsx('flex items-center', className)}>\r\n      {showLinkIcon && <LinkIcon className=\"text-muted icon-md\" />}\r\n      <div className=\"ml-6 mr-14 text-primary\">\r\n        {host}\r\n        {prefix}\r\n        {!isEditing && preview && (\r\n          <Fragment>\r\n            <span>/</span>\r\n            <span className=\"font-medium\">{preview}</span>\r\n          </Fragment>\r\n        )}\r\n        {!isEditing ? suffix : null}\r\n      </div>\r\n      {isEditing && (\r\n        <TextField\r\n          pattern={pattern}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Enter') {\r\n              handleSubmit();\r\n            }\r\n          }}\r\n          ref={inputRef}\r\n          aria-label=\"slug\"\r\n          autoFocus\r\n          className=\"mr-14\"\r\n          size=\"2xs\"\r\n          value={value as string}\r\n          onBlur={onInputBlur}\r\n          onChange={e => {\r\n            setValue(e.target.value);\r\n          }}\r\n        />\r\n      )}\r\n      {!hideButton && (\r\n        <Button\r\n          type=\"button\"\r\n          color=\"chip\"\r\n          variant=\"outline\"\r\n          size=\"2xs\"\r\n          onClick={() => {\r\n            handleSubmit();\r\n          }}\r\n        >\r\n          {isEditing ? <Trans message=\"Save\" /> : <Trans message=\"Edit\" />}\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const UndoIcon = createSvgIcon(\r\n  <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\" />\r\n, 'UndoOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const RedoIcon = createSvgIcon(\r\n  <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\" />\r\n, 'RedoOutlined');\r\n","import React from 'react';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {UndoIcon} from '@ui/icons/material/Undo';\r\nimport {RedoIcon} from '@ui/icons/material/Redo';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\n\r\nexport function HistoryButtons({editor}: MenubarButtonProps) {\r\n  return (\r\n    <span>\r\n      <IconButton\r\n        size=\"md\"\r\n        disabled={!editor.can().undo()}\r\n        onClick={() => {\r\n          editor.commands.focus();\r\n          editor.commands.undo();\r\n        }}\r\n      >\r\n        <UndoIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        size=\"md\"\r\n        disabled={!editor.can().redo()}\r\n        onClick={() => {\r\n          editor.commands.focus();\r\n          editor.commands.redo();\r\n        }}\r\n      >\r\n        <RedoIcon />\r\n      </IconButton>\r\n    </span>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const CodeIcon = createSvgIcon(\r\n  <path d=\"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\" />\r\n, 'CodeOutlined');\r\n","import {Button} from '@ui/buttons/button';\r\nimport {CodeIcon} from '@ui/icons/material/Code';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {AceDialog} from '../../ace-editor/ace-dialog';\r\nimport {Editor} from '@tiptap/react';\r\nimport React from 'react';\r\n\r\ninterface ModeButtonProps {\r\n  editor: Editor;\r\n}\r\nexport function ModeButton({editor}: ModeButtonProps) {\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={newValue => {\r\n        if (newValue != null) {\r\n          editor?.commands.setContent(newValue);\r\n        }\r\n      }}\r\n    >\r\n      <Button variant=\"text\" startIcon={<CodeIcon />}>\r\n        <Trans message=\"Source\" />\r\n      </Button>\r\n      <AceDialog\r\n        title={<Trans message=\"Source code\" />}\r\n        defaultValue={editor.getHTML()}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","export function Divider() {\r\n  return <div className=\"self-stretch mx-4 w-1 bg-divider flex-shrink-0\" />;\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatBoldIcon = createSvgIcon(\r\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\r\n, 'FormatBoldOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatItalicIcon = createSvgIcon(\r\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\" />\r\n, 'FormatItalicOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatUnderlinedIcon = createSvgIcon(\r\n  <path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\" />\r\n, 'FormatUnderlinedOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {FormatBoldIcon} from '@ui/icons/material/FormatBold';\r\nimport {FormatItalicIcon} from '@ui/icons/material/FormatItalic';\r\nimport {FormatUnderlinedIcon} from '@ui/icons/material/FormatUnderlined';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function FontStyleButtons({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\r\n      <Tooltip label={<Trans message=\"Bold\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={editor.isActive('bold') ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleBold();\r\n          }}\r\n        >\r\n          <FormatBoldIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Italic\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={editor.isActive('italic') ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleItalic();\r\n          }}\r\n        >\r\n          <FormatItalicIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Underline\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={editor.isActive('underline') ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleUnderline();\r\n          }}\r\n        >\r\n          <FormatUnderlinedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatListBulletedIcon = createSvgIcon(\r\n  <path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\" />\r\n, 'FormatListBulletedOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatListNumberedIcon = createSvgIcon(\r\n  <path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\" />\r\n, 'FormatListNumberedOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {FormatListBulletedIcon} from '@ui/icons/material/FormatListBulleted';\r\nimport {FormatListNumberedIcon} from '@ui/icons/material/FormatListNumbered';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function ListButtons({editor, size}: MenubarButtonProps) {\r\n  const bulletActive = editor.isActive('bulletList');\r\n  const orderedActive = editor.isActive('orderedList');\r\n  return (\r\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\r\n      <Tooltip label={<Trans message=\"Bulleted list\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={bulletActive ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleBulletList();\r\n          }}\r\n        >\r\n          <FormatListBulletedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Numbered list\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={orderedActive ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleOrderedList();\r\n          }}\r\n        >\r\n          <FormatListNumberedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n}\r\n","import {Editor} from '@tiptap/react';\r\n\r\ninterface Props {\r\n  href: string;\r\n  target?: string;\r\n  text?: string;\r\n}\r\n\r\nexport function insertLinkIntoTextEditor(\r\n  editor: Editor,\r\n  {text, target, href}: Props\r\n) {\r\n  // no selection, insert new link with specified text\r\n  if (editor.state.selection.empty && text) {\r\n    editor.commands.insertContent(\r\n      `<a href=\"${href}\" target=\"${target}\">${text}</a>`\r\n    );\r\n  } else if (!editor.state.selection.empty) {\r\n    // no href provided, remove link from selection\r\n    if (!href) {\r\n      editor.chain().focus().extendMarkRange('link').unsetLink().run();\r\n    } else {\r\n      // add link to selection\r\n      editor\r\n        .chain()\r\n        .focus()\r\n        .extendMarkRange('link')\r\n        .setLink({href: href, target})\r\n        .run();\r\n    }\r\n  }\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {LinkIcon} from '@ui/icons/material/Link';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {FormSelect, Option} from '@ui/forms/select/select';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {insertLinkIntoTextEditor} from '@common/text-editor/insert-link-into-text-editor';\r\n\r\ninterface FormValue {\r\n  href: string;\r\n  target?: string;\r\n  text?: string;\r\n}\r\n\r\nexport function LinkButton({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Tooltip label={<Trans message=\"Insert link\" />}>\r\n        <IconButton size={size} className={clsx('flex-shrink-0')}>\r\n          <LinkIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <LinkDialog editor={editor} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction LinkDialog({editor}: MenubarButtonProps) {\r\n  const previousUrl = editor.getAttributes('link').href;\r\n  const previousText = editor.state.doc.textBetween(\r\n    editor.state.selection.from,\r\n    editor.state.selection.to,\r\n    '',\r\n  );\r\n\r\n  const form = useForm<FormValue>({\r\n    defaultValues: {href: previousUrl, text: previousText, target: '_blank'},\r\n  });\r\n  const {formId, close} = useDialogContext();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Insert link\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={value => {\r\n            insertLinkIntoTextEditor(editor, value);\r\n            close();\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"href\"\r\n            label={<Trans message=\"URL\" />}\r\n            autoFocus\r\n            type=\"url\"\r\n            className=\"mb-20\"\r\n          />\r\n          <FormTextField\r\n            name=\"text\"\r\n            label={<Trans message=\"Text to display\" />}\r\n            className=\"mb-20\"\r\n          />\r\n          <FormSelect\r\n            selectionMode=\"single\"\r\n            name=\"target\"\r\n            label={<Trans message=\"Open link in...\" />}\r\n          >\r\n            <Option value=\"_self\">\r\n              <Trans message=\"Current window\" />\r\n            </Option>\r\n            <Option value=\"_blank\">\r\n              <Trans message=\"New window\" />\r\n            </Option>\r\n          </FormSelect>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close} variant=\"text\">\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button type=\"submit\" form={formId} variant=\"flat\" color=\"primary\">\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ImageIcon = createSvgIcon(\r\n  <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z\" />\r\n, 'ImageOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {ImageIcon} from '@ui/icons/material/Image';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {useActiveUpload} from '../../uploads/uploader/use-active-upload';\r\nimport {Disk} from '../../uploads/uploader/backend-metadata';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FileInputType} from '@ui/utils/files/file-input-config';\r\n\r\nconst TwoMB = 2097152;\r\n\r\ninterface Props extends MenubarButtonProps {\r\n  diskPrefix?: string;\r\n}\r\n\r\nexport function ImageButton({editor, size, diskPrefix = 'page_media'}: Props) {\r\n  const {selectAndUploadFile} = useActiveUpload();\r\n\r\n  const handleUpload = () => {\r\n    selectAndUploadFile({\r\n      showToastOnRestrictionFail: true,\r\n      restrictions: {\r\n        allowedFileTypes: [FileInputType.image],\r\n        maxFileSize: TwoMB,\r\n      },\r\n      metadata: {\r\n        diskPrefix: diskPrefix,\r\n        disk: Disk.public,\r\n      },\r\n      onSuccess: entry => {\r\n        editor.commands.focus();\r\n        editor.commands.setImage({\r\n          src: entry.url,\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\"Insert image\" />}>\r\n      <IconButton\r\n        size={size}\r\n        onClick={handleUpload}\r\n        className={clsx('flex-shrink-0')}\r\n      >\r\n        <ImageIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatClearIcon = createSvgIcon(\r\n  <path d=\"M20 8V5H6.39l3 3h1.83l-.55 1.28 2.09 2.1L14.21 8zM3.41 4.86 2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21l1.41-1.41z\" />\r\n, 'FormatClearOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {FormatClearIcon} from '@ui/icons/material/FormatClear';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function ClearFormatButton({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <Tooltip label={<Trans message=\"Clear formatting\" />}>\r\n      <IconButton\r\n        className={clsx('flex-shrink-0')}\r\n        size={size}\r\n        onClick={() => {\r\n          editor.chain().focus().clearNodes().unsetAllMarks().run();\r\n        }}\r\n      >\r\n        <FormatClearIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const HorizontalRuleIcon = createSvgIcon(\r\n  <path fillRule=\"evenodd\" d=\"M4 11h16v2H4z\" />\r\n, 'HorizontalRuleOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PriorityHighIcon = createSvgIcon(\r\n  [<circle cx=\"12\" cy=\"19\" r=\"2\" key=\"0\" />,<path d=\"M10 3h4v12h-4z\" key=\"1\" />,]\r\n, 'PriorityHighOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const NoteIcon = createSvgIcon(\r\n  <path d=\"M16 4H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99h16c1.1 0 2-.9 2-2v-8l-6-6zM4 18.01V6h11v5h5v7.01H4z\" />\r\n, 'NoteOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const SmartDisplayIcon = createSvgIcon(\r\n  [<path d=\"M9.5 7.5v9l7-4.5z\" key=\"0\" />,<path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14.01H4V5.99h16v12.02z\" key=\"1\" />,]\r\n, 'SmartDisplayOutlined');\r\n","import React, {useState} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport {HorizontalRuleIcon} from '@ui/icons/material/HorizontalRule';\r\nimport {PriorityHighIcon} from '@ui/icons/material/PriorityHigh';\r\nimport {WarningIcon} from '@ui/icons/material/Warning';\r\nimport {NoteIcon} from '@ui/icons/material/Note';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\r\nimport {SmartDisplayIcon} from '@ui/icons/material/SmartDisplay';\r\nimport {Form} from '@ui/forms/form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function InsertMenuTrigger({editor, size}: MenubarButtonProps) {\r\n  const [dialog, setDialog] = useState<'embed' | false>(false);\r\n  return (\r\n    <>\r\n      <MenuTrigger\r\n        onItemSelected={key => {\r\n          if (key === 'hr') {\r\n            editor.commands.focus();\r\n            editor.commands.setHorizontalRule();\r\n          } else if (key === 'embed') {\r\n            setDialog('embed');\r\n          } else {\r\n            editor.commands.focus();\r\n            editor.commands.addInfo({type: key as any});\r\n          }\r\n        }}\r\n      >\r\n        <IconButton\r\n          variant=\"text\"\r\n          size={size}\r\n          className={clsx('flex-shrink-0')}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <Menu>\r\n          <MenuItem value=\"hr\" startIcon={<HorizontalRuleIcon />}>\r\n            <Trans message=\"Horizontal rule\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"embed\" startIcon={<SmartDisplayIcon />}>\r\n            <Trans message=\"Embed\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"important\" startIcon={<PriorityHighIcon />}>\r\n            <Trans message=\"Important\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"warning\" startIcon={<WarningIcon />}>\r\n            <Trans message=\"Warning\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"success\" startIcon={<NoteIcon />}>\r\n            <Trans message=\"Note\" />\r\n          </MenuItem>\r\n        </Menu>\r\n      </MenuTrigger>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={!!dialog}\r\n        onClose={() => {\r\n          setDialog(false);\r\n        }}\r\n      >\r\n        <EmbedDialog editor={editor} />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction EmbedDialog({editor}: MenubarButtonProps) {\r\n  const previousSrc = editor.getAttributes('embed').src;\r\n  const form = useForm<{src: string}>({\r\n    defaultValues: {src: previousSrc},\r\n  });\r\n  const {formId, close} = useDialogContext();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Insert link\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={value => {\r\n            editor.commands.setEmbed(value);\r\n            close();\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"src\"\r\n            label={<Trans message=\"Embed URL\" />}\r\n            autoFocus\r\n            type=\"url\"\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close} variant=\"text\">\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={!form.formState.isValid}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n        >\r\n          <Trans message=\"Add\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {ReactNode} from 'react';\r\nimport {isMac} from '@react-aria/utils';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  modifier?: boolean;\r\n  separator?: string;\r\n}\r\nexport function Keyboard({children, modifier, separator = '+'}: Props) {\r\n  const modKey = isMac() ? (\r\n    <span className=\"text-base align-middle\">⌘</span>\r\n  ) : (\r\n    'Ctrl'\r\n  );\r\n  return (\r\n    <kbd className=\"text-xs text-muted\">\r\n      {modifier && (\r\n        <>\r\n          {modKey}\r\n          {separator}\r\n        </>\r\n      )}\r\n      {children}\r\n    </kbd>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\r\nimport {Keyboard} from '@ui/keyboard/keyboard';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\ntype Level = 1 | 2 | 3 | 4;\r\n\r\nexport function FormatMenuTrigger({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <MenuTrigger\r\n      floatingMinWidth=\"w-256\"\r\n      onItemSelected={key => {\r\n        editor.commands.focus();\r\n        if (typeof key === 'string' && key.startsWith('h')) {\r\n          editor.commands.toggleHeading({\r\n            level: parseInt(key.replace('h', '')) as Level,\r\n          });\r\n        } else if (key === 'code') {\r\n          editor.commands.toggleCode();\r\n        } else if (key === 'strike') {\r\n          editor.commands.toggleStrike();\r\n        } else if (key === 'super') {\r\n          editor.commands.toggleSuperscript();\r\n        } else if (key === 'sub') {\r\n          editor.commands.toggleSubscript();\r\n        } else if (key === 'blockquote') {\r\n          editor.commands.toggleBlockquote();\r\n        } else if (key === 'paragraph') {\r\n          editor.commands.setParagraph();\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        className={clsx('flex-shrink-0')}\r\n        variant=\"text\"\r\n        size={size}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        <Trans message=\"Format\" />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem value=\"h1\" endSection={<Keyboard modifier>Alt+1</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 1}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"h2\" endSection={<Keyboard modifier>Alt+2</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 2}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"h3\" endSection={<Keyboard modifier>Alt+3</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 3}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"h4\" endSection={<Keyboard modifier>Alt+4</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 4}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"code\" endSection={<Keyboard modifier>E</Keyboard>}>\r\n          <Trans message=\"Code\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"strike\"\r\n          endSection={<Keyboard modifier>Shift+X</Keyboard>}\r\n        >\r\n          <Trans message=\"Strikethrough\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"super\"\r\n          endSection={\r\n            <Keyboard modifier separator=\" \">\r\n              .\r\n            </Keyboard>\r\n          }\r\n        >\r\n          <Trans message=\"Superscript\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"sub\"\r\n          endSection={\r\n            <Keyboard modifier separator=\" \">\r\n              ,\r\n            </Keyboard>\r\n          }\r\n        >\r\n          <Trans message=\"Subscript\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"blockquote\"\r\n          endSection={<Keyboard modifier>Shift+B</Keyboard>}\r\n        >\r\n          <Trans message=\"Blockquote\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"paragraph\"\r\n          endSection={<Keyboard modifier>Alt+0</Keyboard>}\r\n        >\r\n          <Trans message=\"Paragraph\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatColorTextIcon = createSvgIcon(\r\n  <path d=\"M2 20h20v4H2v-4zm3.49-3h2.42l1.27-3.58h5.65L16.09 17h2.42L13.25 3h-2.5L5.49 17zm4.42-5.61 2.03-5.79h.12l2.03 5.79H9.91z\" />\r\n, 'FormatColorTextOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatColorFillIcon = createSvgIcon(\r\n  <path d=\"M16.56 8.94 7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10 10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5zM2 20h20v4H2v-4z\" />\r\n, 'FormatColorFillOutlined');\r\n","import React, {Fragment, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FormatColorTextIcon} from '@ui/icons/material/FormatColorText';\r\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {FormatColorFillIcon} from '@ui/icons/material/FormatColorFill';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\n\r\nexport function ColorButtons({editor, size}: MenubarButtonProps) {\r\n  const [dialog, setDialog] = useState<'text' | 'bg' | false>(false);\r\n  const textActive = editor.getAttributes('textStyle').color;\r\n  const backgroundActive = editor.getAttributes('textStyle').backgroundColor;\r\n  return (\r\n    <Fragment>\r\n      <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\r\n        <IconButton\r\n          size={size}\r\n          color={textActive ? 'primary' : null}\r\n          onClick={() => {\r\n            setDialog('text');\r\n          }}\r\n        >\r\n          <FormatColorTextIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          size={size}\r\n          color={backgroundActive ? 'primary' : null}\r\n          onClick={() => {\r\n            setDialog('bg');\r\n          }}\r\n        >\r\n          <FormatColorFillIcon />\r\n        </IconButton>\r\n      </span>\r\n      <DialogTrigger\r\n        defaultValue={dialog === 'text' ? '#000000' : '#FFFFFF'}\r\n        type=\"modal\"\r\n        isOpen={!!dialog}\r\n        onClose={newValue => {\r\n          if (newValue) {\r\n            if (dialog === 'text') {\r\n              editor.commands.setColor(newValue);\r\n            } else {\r\n              editor.commands.setBackgroundColor(newValue);\r\n            }\r\n          }\r\n          setDialog(false);\r\n        }}\r\n      >\r\n        <ColorPickerDialog />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignLeftIcon = createSvgIcon(\r\n  <path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\" />\r\n, 'FormatAlignLeftOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignCenterIcon = createSvgIcon(\r\n  <path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\" />\r\n, 'FormatAlignCenterOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignRightIcon = createSvgIcon(\r\n  <path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\" />\r\n, 'FormatAlignRightOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignJustifyIcon = createSvgIcon(\r\n  <path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\" />\r\n, 'FormatAlignJustifyOutlined');\r\n","import clsx from 'clsx';\r\nimport {ComponentType} from 'react';\r\nimport {FormatAlignLeftIcon} from '@ui/icons/material/FormatAlignLeft';\r\nimport {FormatAlignCenterIcon} from '@ui/icons/material/FormatAlignCenter';\r\nimport {FormatAlignRightIcon} from '@ui/icons/material/FormatAlignRight';\r\nimport {FormatAlignJustifyIcon} from '@ui/icons/material/FormatAlignJustify';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {message} from '@ui/i18n/message';\r\n\r\nconst iconMap = {\r\n  left: {\r\n    icon: FormatAlignLeftIcon,\r\n    label: message('Align left'),\r\n  },\r\n  center: {\r\n    icon: FormatAlignCenterIcon,\r\n    label: message('Align center'),\r\n  },\r\n  right: {\r\n    icon: FormatAlignRightIcon,\r\n    label: message('Align right'),\r\n  },\r\n  justify: {\r\n    icon: FormatAlignJustifyIcon,\r\n    label: message('Justify'),\r\n  },\r\n};\r\n\r\nexport function AlignButtons({editor, size}: MenubarButtonProps) {\r\n  const activeKey = (Object.keys(iconMap).find(key => {\r\n    return editor.isActive({textAlign: key});\r\n  }) || 'left') as keyof typeof iconMap;\r\n  const ActiveIcon: ComponentType = activeKey\r\n    ? iconMap[activeKey].icon\r\n    : iconMap.left.icon;\r\n\r\n  return (\r\n    <MenuTrigger\r\n      floatingWidth=\"auto\"\r\n      selectionMode=\"single\"\r\n      selectedValue={activeKey}\r\n      onSelectionChange={key => {\r\n        editor.commands.focus();\r\n        editor.commands.setTextAlign(key as string);\r\n      }}\r\n    >\r\n      <IconButton\r\n        size={size}\r\n        color={activeKey ? 'primary' : null}\r\n        className={clsx('flex-shrink-0')}\r\n      >\r\n        <ActiveIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        {Object.entries(iconMap).map(([name, config]) => {\r\n          const Icon = config.icon;\r\n          return (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              startIcon={<Icon size=\"md\" />}\r\n              capitalizeFirst\r\n            >\r\n              <Trans message={config.label.message} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatIndentDecreaseIcon = createSvgIcon(\r\n  <path d=\"M11 17h10v-2H11v2zm-8-5 4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\r\n, 'FormatIndentDecreaseOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatIndentIncreaseIcon = createSvgIcon(\r\n  <path d=\"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\r\n, 'FormatIndentIncreaseOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {FormatIndentDecreaseIcon} from '@ui/icons/material/FormatIndentDecrease';\r\nimport {FormatIndentIncreaseIcon} from '@ui/icons/material/FormatIndentIncrease';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function IndentButtons({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\r\n      <Tooltip label={<Trans message=\"Decrease indent\" />}>\r\n        <IconButton\r\n          size={size}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.outdent();\r\n          }}\r\n        >\r\n          <FormatIndentDecreaseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Increase indent\" />}>\r\n        <IconButton\r\n          size={size}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.indent();\r\n          }}\r\n        >\r\n          <FormatIndentIncreaseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {CodeIcon} from '@ui/icons/material/Code';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {Trans} from '@ui/i18n/trans';\r\n\r\nexport function CodeBlockMenuTrigger({editor, size}: MenubarButtonProps) {\r\n  const language = editor.getAttributes('codeBlock').language || '';\r\n  return (\r\n    <MenuTrigger\r\n      selectionMode=\"single\"\r\n      selectedValue={language}\r\n      onSelectionChange={key => {\r\n        editor.commands.toggleCodeBlock({language: key as string});\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Codeblock\" />}>\r\n        <IconButton\r\n          className={clsx('flex-shrink-0')}\r\n          size={size}\r\n          color={language ? 'primary' : null}\r\n        >\r\n          <CodeIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu>\r\n        <MenuItem value=\"html\">HTML</MenuItem>\r\n        <MenuItem value=\"javascript\">JavaScript</MenuItem>\r\n        <MenuItem value=\"css\">CSS</MenuItem>\r\n        <MenuItem value=\"php\">PHP</MenuItem>\r\n        <MenuItem value=\"shell\">Shell</MenuItem>\r\n        <MenuItem value=\"bash\">Bash</MenuItem>\r\n        <MenuItem value=\"ruby\">Ruby</MenuItem>\r\n        <MenuItem value=\"python\">Python</MenuItem>\r\n        <MenuItem value=\"java\">Java</MenuItem>\r\n        <MenuItem value=\"c++\">C++</MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import React, {Fragment, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {Divider} from '@common/text-editor/menubar/divider';\r\nimport {FontStyleButtons} from '@common/text-editor/menubar/font-style-buttons';\r\nimport {ListButtons} from '@common/text-editor/menubar/list-buttons';\r\nimport {LinkButton} from '@common/text-editor/menubar/link-button';\r\nimport {ImageButton} from '@common/text-editor/menubar/image-button';\r\nimport {ClearFormatButton} from '@common/text-editor/menubar/clear-format-button';\r\nimport {InsertMenuTrigger} from '@common/text-editor/menubar/insert-menu-trigger';\r\nimport {FormatMenuTrigger} from '@common/text-editor/menubar/format-menu-trigger';\r\nimport {ColorButtons} from '@common/text-editor/menubar/color-buttons';\r\nimport {AlignButtons} from '@common/text-editor/menubar/align-buttons';\r\nimport {IndentButtons} from '@common/text-editor/menubar/indent-buttons';\r\nimport {CodeBlockMenuTrigger} from '@common/text-editor/menubar/code-block-menu-trigger';\r\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {UnfoldMoreIcon} from '@ui/icons/material/UnfoldMore';\r\nimport {UnfoldLessIcon} from '@ui/icons/material/UnfoldLess';\r\n\r\nconst MenubarRowClassName =\r\n  'flex items-center px-4 h-42 text-muted border-b overflow-hidden';\r\n\r\ninterface Props extends MenubarButtonProps {\r\n  justify?: string;\r\n  hideInsertButton?: boolean;\r\n  imageDiskPrefix?: string;\r\n}\r\nexport function ArticleBodyEditorMenubar({\r\n  editor,\r\n  size = 'md',\r\n  justify = 'justify-center',\r\n  hideInsertButton = false,\r\n  imageDiskPrefix,\r\n}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const [extendedVisible, setExtendedVisible] = useState(false);\r\n  return (\r\n    <div className={clsx(extendedVisible ? 'h-84' : 'h-42')}>\r\n      <div className={clsx(MenubarRowClassName, justify, 'relative z-20')}>\r\n        <FormatMenuTrigger editor={editor} size={size} />\r\n        <Divider />\r\n        <FontStyleButtons editor={editor} size={size} />\r\n        <Divider />\r\n        <AlignButtons editor={editor} size={size} />\r\n        <IndentButtons editor={editor} size={size} />\r\n        <Divider />\r\n        {isMobile ? (\r\n          <IconButton\r\n            className=\"flex-shrink-0\"\r\n            color={extendedVisible ? 'primary' : null}\r\n            size={size}\r\n            onClick={() => {\r\n              setExtendedVisible(!extendedVisible);\r\n            }}\r\n          >\r\n            {extendedVisible ? <UnfoldLessIcon /> : <UnfoldMoreIcon />}\r\n          </IconButton>\r\n        ) : (\r\n          <ExtendedButtons\r\n            editor={editor}\r\n            size={size}\r\n            hideInsertButton={hideInsertButton}\r\n            imageDiskPrefix={imageDiskPrefix}\r\n          />\r\n        )}\r\n      </div>\r\n      <AnimatePresence>\r\n        {extendedVisible && (\r\n          <m.div\r\n            className={clsx(\r\n              MenubarRowClassName,\r\n              justify,\r\n              'absolute flex h-full w-full',\r\n            )}\r\n            initial={{y: '-100%'}}\r\n            animate={{y: 0}}\r\n            exit={{y: '-100%'}}\r\n          >\r\n            <ExtendedButtons\r\n              editor={editor}\r\n              size={size}\r\n              imageDiskPrefix={imageDiskPrefix}\r\n            />\r\n          </m.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ExtendedButtons({\r\n  editor,\r\n  size = 'md',\r\n  hideInsertButton,\r\n  imageDiskPrefix,\r\n}: Props) {\r\n  return (\r\n    <Fragment>\r\n      <ListButtons editor={editor} size={size} />\r\n      <Divider />\r\n      <LinkButton editor={editor} size={size} />\r\n      <ImageButton editor={editor} size={size} diskPrefix={imageDiskPrefix} />\r\n      {!hideInsertButton && <InsertMenuTrigger editor={editor} size={size} />}\r\n      <Divider />\r\n      <ColorButtons editor={editor} size={size} />\r\n      <Divider />\r\n      <CodeBlockMenuTrigger editor={editor} size={size} />\r\n      <ClearFormatButton editor={editor} size={size} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {SlugEditor, SlugEditorProps} from '@common/ui/other/slug-editor';\r\nimport {useController, useFormContext} from 'react-hook-form';\r\nimport React, {Fragment, ReactNode, useEffect, useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useStickySentinel} from '@ui/utils/hooks/sticky-sentinel';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {Link} from 'react-router';\r\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {HistoryButtons} from '@common/text-editor/menubar/history-buttons';\r\nimport {ModeButton} from '@common/text-editor/menubar/mode-button';\r\nimport {ArticleBodyEditorMenubar} from './article-body-editor-menubar';\r\nimport {Editor} from '@tiptap/react';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\n\r\ninterface StickyHeaderProps {\r\n  editor: Editor;\r\n  allowSlugEditing?: boolean;\r\n  onSave?: (editorContent: string) => void;\r\n  saveButton?: ReactNode;\r\n  backLink: string;\r\n  isLoading?: boolean;\r\n  slugPrefix?: string;\r\n  imageDiskPrefix?: string;\r\n}\r\nexport function ArticleEditorStickyHeader({\r\n  editor,\r\n  allowSlugEditing = true,\r\n  onSave,\r\n  saveButton,\r\n  isLoading = false,\r\n  backLink,\r\n  slugPrefix = 'pages',\r\n  imageDiskPrefix,\r\n}: StickyHeaderProps) {\r\n  const {isSticky, sentinelRef} = useStickySentinel();\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div ref={sentinelRef} />\r\n      <div className={clsx('sticky top-0 z-10 mb-20 bg', isSticky && 'shadow')}>\r\n        <div className=\"flex items-center justify-between gap-20 border-b px-20 py-10 text-muted sm:justify-start\">\r\n          {!isMobile && (\r\n            <Fragment>\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"sm\"\r\n                elementType={Link}\r\n                to={backLink}\r\n                relative=\"path\"\r\n                startIcon={<ArrowBackIcon />}\r\n              >\r\n                <Trans message=\"Back\" />\r\n              </Button>\r\n              <div className=\"mr-auto\">\r\n                {allowSlugEditing && (\r\n                  <FormSlugEditor\r\n                    name=\"slug\"\r\n                    showLinkIcon={false}\r\n                    prefix={slugPrefix}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {editor && <HistoryButtons editor={editor} />}\r\n          {!isMobile && <ModeButton editor={editor} />}\r\n          {onSave && (\r\n            <SaveButton\r\n              onSave={() => {\r\n                onSave(editor.getHTML());\r\n              }}\r\n              isLoading={isLoading}\r\n            />\r\n          )}\r\n          {saveButton}\r\n        </div>\r\n        <ArticleBodyEditorMenubar\r\n          editor={editor}\r\n          size=\"sm\"\r\n          imageDiskPrefix={imageDiskPrefix}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface SaveButtonProps {\r\n  onSave: () => void;\r\n  isLoading: boolean;\r\n}\r\nfunction SaveButton({onSave, isLoading}: SaveButtonProps) {\r\n  const form = useFormContext();\r\n  const title = form.watch('title');\r\n\r\n  return (\r\n    <Button\r\n      variant=\"flat\"\r\n      size=\"sm\"\r\n      color=\"primary\"\r\n      className=\"min-w-90\"\r\n      disabled={isLoading || !title}\r\n      onClick={() => onSave()}\r\n    >\r\n      <Trans message=\"Save\" />\r\n    </Button>\r\n  );\r\n}\r\n\r\ninterface FormSlugEditorProps extends SlugEditorProps {\r\n  name: string;\r\n}\r\nfunction FormSlugEditor({name, ...other}: FormSlugEditorProps) {\r\n  const {\r\n    field: {onChange, onBlur, value = '', ref},\r\n  } = useController({\r\n    name,\r\n  });\r\n  const manuallyChanged = useRef(false);\r\n\r\n  const {watch, setValue} = useFormContext<CreateCustomPagePayload>();\r\n\r\n  useEffect(() => {\r\n    const subscription = watch((formVal, {name: fieldName}) => {\r\n      // if user has not changed slug manually, set it based on page title field changes\r\n      if (fieldName === 'title' && !manuallyChanged.current) {\r\n        setValue('slug', formVal.title);\r\n      }\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, [watch, setValue]);\r\n\r\n  return (\r\n    <SlugEditor\r\n      className={clsx(!value && 'invisible')}\r\n      onChange={e => {\r\n        manuallyChanged.current = true;\r\n        onChange(e);\r\n      }}\r\n      onInputBlur={onBlur}\r\n      value={value}\r\n      inputRef={ref}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n","import {useCustomPage} from '@common/custom-page/use-custom-page';\r\nimport React, {Fragment, Suspense} from 'react';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\r\nimport {FormProvider, useForm} from 'react-hook-form';\r\nimport {useUpdateCustomPage} from '@common/admin/custom-pages/requests/use-update-custom-page';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\r\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\r\n\r\nconst ArticleBodyEditor = React.lazy(\r\n  () => import('@common/article-editor/article-body-editor'),\r\n);\r\n\r\nexport function EditCustomPage() {\r\n  const query = useCustomPage();\r\n\r\n  return query.data ? (\r\n    <Fragment>\r\n      <PageMetaTags query={query} />\r\n      <PageContent page={query.data.page} />\r\n    </Fragment>\r\n  ) : (\r\n    <div className=\"relative w-full h-full\">\r\n      <PageStatus query={query} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PageContentProps {\r\n  page: CustomPage;\r\n}\r\nfunction PageContent({page}: PageContentProps) {\r\n  const navigate = useNavigate();\r\n  const crupdatePage = useUpdateCustomPage();\r\n  const form = useForm<CreateCustomPagePayload>({\r\n    defaultValues: {\r\n      title: page.title,\r\n      slug: page.slug,\r\n      body: page.body,\r\n    },\r\n  });\r\n\r\n  const handleSave = (editorContent: string) => {\r\n    crupdatePage.mutate(\r\n      {\r\n        ...form.getValues(),\r\n        body: editorContent,\r\n      },\r\n      {\r\n        onSuccess: () => navigate('../..', {relative: 'path'}),\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<FullPageLoader />}>\r\n      <ArticleBodyEditor initialContent={page.body}>\r\n        {(content, editor) => (\r\n          <FileUploadProvider>\r\n            <FormProvider {...form}>\r\n              <ArticleEditorStickyHeader\r\n                editor={editor}\r\n                backLink=\"../..\"\r\n                isLoading={crupdatePage.isPending}\r\n                onSave={handleSave}\r\n              />\r\n              <div className=\"mx-20\">\r\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\r\n                  <ArticleEditorTitle />\r\n                  {content}\r\n                </div>\r\n              </div>\r\n            </FormProvider>\r\n          </FileUploadProvider>\r\n        )}\r\n      </ArticleBodyEditor>\r\n    </Suspense>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {CustomPage} from '../custom-page';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {message} from '@ui/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  page: CustomPage;\r\n}\r\n\r\nexport interface CreateCustomPagePayload {\r\n  title?: string;\r\n  body?: string;\r\n  slug?: string;\r\n  hide_nav?: boolean;\r\n}\r\n\r\nexport function useCreateCustomPage(endpoint?: string) {\r\n  const finalEndpoint = endpoint || 'custom-pages';\r\n  return useMutation({\r\n    mutationFn: (payload: CreateCustomPagePayload) =>\r\n      createPage(payload, finalEndpoint),\r\n    onError: err => showHttpErrorToast(err),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(finalEndpoint),\r\n      });\r\n      toast(message('Page created'));\r\n    },\r\n  });\r\n}\r\n\r\nfunction createPage(\r\n  payload: CreateCustomPagePayload,\r\n  endpoint: string,\r\n): Promise<Response> {\r\n  return apiClient.post(`${endpoint}`, payload).then(r => r.data);\r\n}\r\n","import React, {Suspense} from 'react';\r\nimport {FormProvider, useForm} from 'react-hook-form';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\r\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\nimport {\r\n  CreateCustomPagePayload,\r\n  useCreateCustomPage,\r\n} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\r\n\r\nconst ArticleBodyEditor = React.lazy(\r\n  () => import('@common/article-editor/article-body-editor'),\r\n);\r\n\r\nexport function CreateCustomPage() {\r\n  const navigate = useNavigate();\r\n  const createPage = useCreateCustomPage();\r\n  const form = useForm<CreateCustomPagePayload>();\r\n\r\n  const handleSave = (editorContent: string) => {\r\n    createPage.mutate(\r\n      {\r\n        ...form.getValues(),\r\n        body: editorContent,\r\n      },\r\n      {\r\n        onSuccess: () => navigate('../', {relative: 'path'}),\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<FullPageLoader />}>\r\n      <ArticleBodyEditor>\r\n        {(content, editor) => (\r\n          <FileUploadProvider>\r\n            <FormProvider {...form}>\r\n              <ArticleEditorStickyHeader\r\n                editor={editor}\r\n                isLoading={createPage.isPending}\r\n                onSave={handleSave}\r\n                backLink=\"../\"\r\n              />\r\n              <div className=\"mx-20\">\r\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\r\n                  <ArticleEditorTitle />\r\n                  {content}\r\n                </div>\r\n              </div>\r\n            </FormProvider>\r\n          </FileUploadProvider>\r\n        )}\r\n      </ArticleBodyEditor>\r\n    </Suspense>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__03cbd387__\"","import {useTrans} from '@ui/i18n/use-trans';\r\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@ui/icons/material/Search';\r\nimport {message} from '@ui/i18n/message';\r\nimport {Select} from '@ui/forms/select/select';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React from 'react';\r\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\r\n\r\nexport interface FontSelectorFilterValue {\r\n  query: string;\r\n  category: string;\r\n}\r\n\r\ninterface FiltersHeaderProps {\r\n  state: FontSelectorState;\r\n}\r\nexport function FontSelectorFilters({\r\n  state: {filters, setFilters},\r\n}: FiltersHeaderProps) {\r\n  const {trans} = useTrans();\r\n  return (\r\n    <div className=\"mb-24 items-center gap-24 @xs:flex\">\r\n      <TextField\r\n        className=\"mb-12 flex-auto @xs:mb-0\"\r\n        value={filters.query}\r\n        onChange={e => {\r\n          setFilters({\r\n            ...filters,\r\n            query: e.target.value,\r\n          });\r\n        }}\r\n        startAdornment={<SearchIcon />}\r\n        placeholder={trans(message('Search fonts'))}\r\n      />\r\n      <Select\r\n        className=\"flex-auto\"\r\n        selectionMode=\"single\"\r\n        selectedValue={filters.category}\r\n        onSelectionChange={value => {\r\n          setFilters({\r\n            ...filters,\r\n            category: value as string,\r\n          });\r\n        }}\r\n      >\r\n        <Item value=\"\">\r\n          <Trans message=\"All categories\" />\r\n        </Item>\r\n        <Item value=\"serif\">\r\n          <Trans message=\"Serif\" />\r\n        </Item>\r\n        <Item value=\"sans-serif\">\r\n          <Trans message=\"Sans serif\" />\r\n        </Item>\r\n        <Item value=\"display\">\r\n          <Trans message=\"Display\" />\r\n        </Item>\r\n        <Item value=\"handwriting\">\r\n          <Trans message=\"Handwriting\" />\r\n        </Item>\r\n        <Item value=\"monospace\">\r\n          <Trans message=\"Monospace\" />\r\n        </Item>\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n","import {message} from '@ui/i18n/message';\r\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\r\n\r\nexport const BrowserSafeFonts: FontConfig[] = [\r\n  {\r\n    label: message('System'),\r\n    family:\r\n      'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\r\n    category: 'sans-serif',\r\n  },\r\n  {family: 'Impact, Charcoal, sans-serif', category: 'sans-serif'},\r\n  {family: 'Arial, Helvetica Neue, Helvetica, sans-serif', category: 'serif'},\r\n  {family: '\"Comic Sans MS\", cursive, sans-serif', category: 'Handwriting'},\r\n  {family: 'Century Gothic, sans-serif', category: 'sans-serif'},\r\n  {family: '\"Courier New\", Courier, monospace', category: 'monospace'},\r\n  {\r\n    family: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\r\n    category: 'sans-serif',\r\n  },\r\n  {family: '\"Times New Roman\", Times, serif', category: 'serif'},\r\n  {family: '\"Lucida Console\", Monaco, monospace', category: 'monospace'},\r\n  {family: '\"Andele Mono\", monospace, sans-serif', category: 'sans-serif'},\r\n  {family: 'Verdana, Geneva, sans-serif', category: 'sans-serif'},\r\n  {\r\n    family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\r\n    category: 'sans-serif',\r\n  },\r\n];\r\n","export function chunkArray<T>(array: T[], chunkSize: number): T[][] {\r\n  return array.reduce<any>((resultArray, item, index) => {\r\n    const chunkIndex = Math.floor(index / chunkSize);\r\n\r\n    if (!resultArray[chunkIndex]) {\r\n      resultArray[chunkIndex] = [];\r\n    }\r\n\r\n    resultArray[chunkIndex].push(item);\r\n\r\n    return resultArray;\r\n  }, []);\r\n}\r\n","import {useCollator} from '@ui/i18n/use-collator';\r\nimport {useMemo} from 'react';\r\n\r\ninterface Filter {\r\n  /** Returns whether a string starts with a given substring. */\r\n  startsWith(string: string, substring: string): boolean;\r\n  /** Returns whether a string ends with a given substring. */\r\n  endsWith(string: string, substring: string): boolean;\r\n  /** Returns whether a string contains a given substring. */\r\n  contains(string: string, substring: string): boolean;\r\n}\r\n\r\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\r\n  const collator = useCollator({\r\n    usage: 'search',\r\n    ...options,\r\n  });\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      startsWith(string, substring) {\r\n        if (substring.length === 0) {\r\n          return true;\r\n        }\r\n\r\n        string = string.normalize('NFC');\r\n        substring = substring.normalize('NFC');\r\n        return (\r\n          collator.compare(string.slice(0, substring.length), substring) === 0\r\n        );\r\n      },\r\n      endsWith(string, substring) {\r\n        if (substring.length === 0) {\r\n          return true;\r\n        }\r\n\r\n        string = string.normalize('NFC');\r\n        substring = substring.normalize('NFC');\r\n        return (\r\n          collator.compare(string.slice(-substring.length), substring) === 0\r\n        );\r\n      },\r\n      contains(string, substring) {\r\n        if (substring.length === 0) {\r\n          return true;\r\n        }\r\n\r\n        string = string.normalize('NFC');\r\n        substring = substring.normalize('NFC');\r\n\r\n        let scan = 0;\r\n        const sliceLen = substring.length;\r\n        for (; scan + sliceLen <= string.length; scan++) {\r\n          const slice = string.slice(scan, scan + sliceLen);\r\n          if (collator.compare(substring, slice) === 0) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      },\r\n    };\r\n  }, [collator]);\r\n}\r\n","import {useCallback, useEffect, useMemo, useState} from 'react';\r\nimport {FontSelectorFilterValue} from '@common/ui/font-selector/font-selector-filters';\r\nimport {useValueLists} from '@common/http/value-lists';\r\nimport {BrowserSafeFonts} from '@ui/fonts/font-picker/browser-safe-fonts';\r\nimport {chunkArray} from '@ui/utils/array/chunk-array';\r\nimport {loadFonts} from '@ui/fonts/font-picker/load-fonts';\r\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\r\nimport {useFilter} from '@ui/i18n/use-filter';\r\n\r\nexport interface FontSelectorState extends UseFontSelectorProps {\r\n  fonts: FontConfig[];\r\n  filteredFonts: FontConfig[];\r\n  pages: FontConfig[][];\r\n  isLoading: boolean;\r\n  filters: FontSelectorFilterValue;\r\n  setFilters: (filters: FontSelectorFilterValue) => void;\r\n  currentPage: number;\r\n  setCurrentPage: (page: number) => void;\r\n}\r\n\r\nexport interface UseFontSelectorProps {\r\n  value?: FontConfig;\r\n  onChange: (value: FontConfig) => void;\r\n}\r\nexport function useFontSelectorState({\r\n  value,\r\n  onChange,\r\n}: UseFontSelectorProps): FontSelectorState {\r\n  const {data, isLoading} = useValueLists(['googleFonts']);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [filters, setFilterState] = useState<FontSelectorFilterValue>({\r\n    query: '',\r\n    category: value?.category ?? '',\r\n  });\r\n  const {contains} = useFilter({\r\n    sensitivity: 'base',\r\n  });\r\n\r\n  const allFonts = useMemo(() => {\r\n    return BrowserSafeFonts.concat(data?.googleFonts ?? []);\r\n  }, [data?.googleFonts]);\r\n\r\n  const filteredFonts = useMemo(() => {\r\n    return allFonts.filter(font => {\r\n      return (\r\n        contains(font.family, filters.query) &&\r\n        (!filters.category ||\r\n          font.category?.toLowerCase() === filters.category.toLowerCase())\r\n      );\r\n    });\r\n  }, [allFonts, filters, contains]);\r\n\r\n  const pages = useMemo(() => {\r\n    return chunkArray(filteredFonts, 20);\r\n  }, [filteredFonts]);\r\n  const fonts = pages[currentPage];\r\n\r\n  // open the page with the selected font\r\n  useEffect(() => {\r\n    if (data && value?.family) {\r\n      const index = filteredFonts.findIndex(f => f.family === value.family);\r\n      if (index >= 0) {\r\n        setCurrentPage(Math.floor(index / 20));\r\n      }\r\n    }\r\n  }, [data, filteredFonts, value?.family]);\r\n\r\n  useEffect(() => {\r\n    const id = 'font-selector';\r\n    if (fonts?.length) {\r\n      loadFonts(fonts, {id});\r\n    }\r\n  }, [fonts, currentPage]);\r\n\r\n  const setFilters = useCallback((filters: FontSelectorFilterValue) => {\r\n    setFilterState(filters);\r\n    // reset to first page when searching or changing category\r\n    setCurrentPage(0);\r\n  }, []);\r\n\r\n  return {\r\n    fonts: fonts || [],\r\n    currentPage,\r\n    filteredFonts: filteredFonts || [],\r\n    setCurrentPage,\r\n    isLoading,\r\n    filters,\r\n    setFilters,\r\n    value,\r\n    onChange,\r\n    pages,\r\n  };\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\r\nimport React from 'react';\r\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\r\n\r\ninterface FontSelectorPaginationProps {\r\n  state: FontSelectorState;\r\n}\r\nexport function FontSelectorPagination({\r\n  state: {currentPage = 0, setCurrentPage, filteredFonts, pages},\r\n}: FontSelectorPaginationProps) {\r\n  const total = filteredFonts?.length || 0;\r\n\r\n  return (\r\n    <div className=\"mt-30 flex items-center justify-end gap-24 border-t pt-14 text-sm\">\r\n      {total > 0 && (\r\n        <div>\r\n          <Trans\r\n            message=\":from - :to of :total\"\r\n            values={{\r\n              from: currentPage * 20 + 1,\r\n              to: Math.min((currentPage + 1) * 20, total),\r\n              total,\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"text-muted\">\r\n        <IconButton\r\n          disabled={currentPage < 1}\r\n          onClick={() => {\r\n            setCurrentPage(Math.max(0, currentPage - 1));\r\n          }}\r\n        >\r\n          <KeyboardArrowLeftIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={currentPage >= pages.length - 1}\r\n          onClick={() => {\r\n            setCurrentPage(currentPage + 1);\r\n          }}\r\n        >\r\n          <KeyboardArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport React from 'react';\r\nimport {ButtonBase} from '@ui/buttons/button-base';\r\nimport clsx from 'clsx';\r\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\r\nimport fontImage from './font.svg';\r\nimport {SvgImage} from '@ui/images/svg-image';\r\nimport {FontSelectorFilters} from '@common/ui/font-selector/font-selector-filters';\r\nimport {\r\n  FontSelectorState,\r\n  UseFontSelectorProps,\r\n  useFontSelectorState,\r\n} from '@common/ui/font-selector/font-selector-state';\r\nimport {FontSelectorPagination} from '@common/ui/font-selector/font-selector-pagination';\r\nimport {Skeleton} from '@ui/skeleton/skeleton';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\r\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\r\n\r\ninterface FontSelectorProps extends UseFontSelectorProps {\r\n  className?: string;\r\n}\r\nexport function FontSelector(props: FontSelectorProps) {\r\n  const state = useFontSelectorState(props);\r\n  return (\r\n    <div className={props.className}>\r\n      <FontSelectorFilters state={state} />\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        <FontList state={state} />\r\n      </AnimatePresence>\r\n      <FontSelectorPagination state={state} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FontListProps {\r\n  state: FontSelectorState;\r\n}\r\nfunction FontList({state}: FontListProps) {\r\n  const {isLoading, fonts} = state;\r\n\r\n  const gridClassName =\r\n    'grid gap-24 grid-cols-[repeat(auto-fill,minmax(90px,1fr))] items-start';\r\n\r\n  if (isLoading) {\r\n    return <FontListSkeleton className={gridClassName} />;\r\n  }\r\n\r\n  if (!fonts?.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        className=\"mt-60\"\r\n        size=\"sm\"\r\n        image={<SvgImage src={fontImage} />}\r\n        title={<Trans message=\"No matching fonts\" />}\r\n        description={\r\n          <Trans message=\"Try another search query or different category\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <m.div key=\"font-list\" {...opacityAnimation} className={gridClassName}>\r\n      {fonts?.map(font => (\r\n        <FontButton key={font.family} font={font} state={state} />\r\n      ))}\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface FontButtonProps {\r\n  font: FontConfig;\r\n  state: FontSelectorState;\r\n}\r\nfunction FontButton({font, state: {value, onChange}}: FontButtonProps) {\r\n  const isActive = value?.family === font.family;\r\n  const displayName = font.family.split(',')[0].replace(/\"/g, '');\r\n\r\n  return (\r\n    <ButtonBase\r\n      key={font.family}\r\n      display=\"block\"\r\n      onClick={() => {\r\n        onChange(font);\r\n      }}\r\n    >\r\n      <span\r\n        className={clsx(\r\n          'flex aspect-square items-center justify-center rounded-panel border text-4xl transition-bg-color hover:bg-hover md:text-5xl',\r\n          isActive && 'ring-2 ring-primary ring-offset-2',\r\n        )}\r\n      >\r\n        <span style={{fontFamily: font.family}}>Aa</span>\r\n      </span>\r\n      <span\r\n        className={clsx(\r\n          'mt-6 block overflow-hidden overflow-ellipsis whitespace-nowrap text-sm',\r\n          isActive && 'text-primary',\r\n        )}\r\n      >\r\n        {font.label ? <Trans {...font.label} /> : displayName}\r\n      </span>\r\n    </ButtonBase>\r\n  );\r\n}\r\n\r\ninterface FontListSkeletonProps {\r\n  className: string;\r\n}\r\nfunction FontListSkeleton({className}: FontListSkeletonProps) {\r\n  const items = Array.from(Array(20).keys());\r\n  return (\r\n    <m.div key=\"font-list-skeleton\" {...opacityAnimation} className={className}>\r\n      {items.map(index => (\r\n        <div key={index}>\r\n          <div className=\"aspect-square\">\r\n            <Skeleton display=\"block\" variant=\"rect\" />\r\n          </div>\r\n          <Skeleton className=\"mt-6 text-sm\" />\r\n        </div>\r\n      ))}\r\n    </m.div>\r\n  );\r\n}\r\n","import {FontSelector} from '@common/ui/font-selector/font-selector';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {\r\n  appearanceState,\r\n  AppearanceEditorValues,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {useParams} from 'react-router';\r\n\r\ntype Font = 'appearance.themes.1.font';\r\n\r\nexport function ThemeFontPanel() {\r\n  const {setValue, watch} = useFormContext<AppearanceEditorValues>();\r\n  const {themeIndex} = useParams();\r\n  const key = `appearance.themes.${themeIndex}.font` as Font;\r\n  return (\r\n    <FontSelector\r\n      value={watch(key)}\r\n      onChange={font => {\r\n        setValue(key, font, {shouldDirty: true});\r\n        appearanceState().preview.setThemeFont(font);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport {ButtonBase} from '@ui/buttons/button-base';\r\nimport {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {\r\n  appearanceState,\r\n  AppearanceEditorValues,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useParams} from 'react-router';\r\n\r\nconst radiusMap = {\r\n  'rounded-none': {\r\n    label: message('Square'),\r\n    value: '0px',\r\n  },\r\n  rounded: {\r\n    label: message('Small'),\r\n    value: '0.25rem',\r\n  },\r\n  'rounded-md': {\r\n    label: message('Medium'),\r\n    value: '0.375rem',\r\n  },\r\n  'rounded-lg': {\r\n    label: message('Large'),\r\n    value: '0.5rem',\r\n  },\r\n  'rounded-xl': {\r\n    label: message('Larger'),\r\n    value: '0.75rem',\r\n  },\r\n  'rounded-full': {\r\n    label: message('Pill'),\r\n    value: '9999px',\r\n  },\r\n};\r\n\r\nexport function ThemeRadiusPanel() {\r\n  return (\r\n    <div className=\"space-y-24\">\r\n      <RadiusSelector\r\n        label={<Trans message=\"Button rounding\" />}\r\n        name=\"button-radius\"\r\n      />\r\n      <RadiusSelector\r\n        label={<Trans message=\"Input rounding\" />}\r\n        name=\"input-radius\"\r\n      />\r\n      <RadiusSelector\r\n        label={<Trans message=\"Panel rounding\" />}\r\n        name=\"panel-radius\"\r\n        hidePill\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface RadiusSelectorProps {\r\n  label: ReactNode;\r\n  name: string;\r\n  hidePill?: boolean;\r\n}\r\nfunction RadiusSelector({label, name, hidePill}: RadiusSelectorProps) {\r\n  const {themeIndex} = useParams();\r\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\r\n  const formKey =\r\n    `appearance.themes.${themeIndex}.values.--be-${name}` as 'appearance.themes.1.values.--be-button-radius';\r\n  const currentValue = watch(formKey);\r\n  return (\r\n    <div>\r\n      <div className=\"mb-10 text-sm font-semibold\">{label}</div>\r\n      <div className=\"grid grid-cols-3 gap-10 text-sm\">\r\n        {Object.entries(radiusMap)\r\n          .filter(([key]) => !hidePill || !key.includes('full'))\r\n          .map(([key, {label, value}]) => (\r\n            <PreviewButton\r\n              key={key}\r\n              radius={key}\r\n              isActive={value === currentValue}\r\n              onClick={() => {\r\n                setValue(formKey, value, {shouldDirty: true});\r\n                appearanceState().preview.setThemeValue(`--be-${name}`, value);\r\n              }}\r\n            >\r\n              <Trans {...label} />\r\n            </PreviewButton>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PreviewButtonProps {\r\n  radius: string;\r\n  children: ReactNode;\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n}\r\nfunction PreviewButton({\r\n  radius,\r\n  children,\r\n  isActive,\r\n  onClick,\r\n}: PreviewButtonProps) {\r\n  return (\r\n    <ButtonBase\r\n      display=\"block\"\r\n      className={clsx(\r\n        'h-36 border-2 hover:bg-hover',\r\n        radius,\r\n        isActive && 'border-primary',\r\n      )}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </ButtonBase>\r\n  );\r\n}\r\n","import {Tabs} from '@ui/tabs/tabs';\r\nimport {Tab} from '@ui/tabs/tab';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {TabList} from '@ui/tabs/tab-list';\r\nimport {Link, Outlet, useLocation} from 'react-router';\r\n\r\nconst tabs = ['schedule', 'error', 'outgoing-email'];\r\n\r\nexport function LogsPage() {\r\n  const {pathname} = useLocation();\r\n  const activeTab = pathname.split('/').pop() as string;\r\n  const activeIndex = tabs.includes(activeTab) ? tabs.indexOf(activeTab) : 0;\r\n  return (\r\n    <Tabs className=\"p-12 md:p-24\" selectedTab={activeIndex}>\r\n      <TabList className=\"mb-24\">\r\n        <Tab elementType={Link} to=\"/admin/logs/schedule\" replace>\r\n          <Trans message=\"Schedule\" />\r\n        </Tab>\r\n        <Tab elementType={Link} to=\"/admin/logs/error\" replace>\r\n          <Trans message=\"Error\" />\r\n        </Tab>\r\n        <Tab elementType={Link} to=\"/admin/logs/outgoing-email\" replace>\r\n          <Trans message=\"Email\" />\r\n        </Tab>\r\n      </TabList>\r\n      <Outlet />\r\n    </Tabs>\r\n  );\r\n}\r\n","import {CheckIcon} from '@ui/icons/material/Check';\r\nimport {CloseIcon} from '@ui/icons/material/Close';\r\nimport React from 'react';\r\n\r\ninterface BooleanIndicatorProps {\r\n  value: boolean;\r\n}\r\nexport function BooleanIndicator({value}: BooleanIndicatorProps) {\r\n  if (value) {\r\n    return <CheckIcon className=\"text-positive icon-md\" />;\r\n  }\r\n  return <CloseIcon className=\"text-danger icon-md\" />;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {message} from '@ui/i18n/message';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  id: number;\r\n}\r\n\r\nexport function useRerunScheduledCommand() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => rerunCommand(payload),\r\n    onSuccess: async (response, props) => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('logs/schedule'),\r\n      });\r\n      toast.positive(trans(message('Command reran')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction rerunCommand({id}: Payload): Promise<Response> {\r\n  return apiClient.post(`logs/schedule/rerun/${id}`).then(r => r.data);\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const EventRepeatIcon = createSvgIcon(\r\n  <path d=\"M21 12V6c0-1.1-.9-2-2-2h-1V2h-2v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h7v-2H5V10h14v2h2zm-2-4H5V6h14v2zm-3.36 12c.43 1.45 1.77 2.5 3.36 2.5 1.93 0 3.5-1.57 3.5-3.5s-1.57-3.5-3.5-3.5c-.95 0-1.82.38-2.45 1H18V18h-4v-4h1.5v1.43c.9-.88 2.14-1.43 3.5-1.43 2.76 0 5 2.24 5 5s-2.24 5-5 5c-2.42 0-4.44-1.72-4.9-4h1.54z\" />\r\n, 'EventRepeatOutlined');\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {BooleanIndicator} from '@common/datatable/column-templates/boolean-indicator';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport React from 'react';\r\nimport {ScheduleLogItem} from '@common/admin/logging/schedule/schedule-log-item';\r\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\r\nimport {EventRepeatIcon} from '@ui/icons/material/EventRepeat';\r\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\r\n\r\nexport const ScheduleDatatableColumns: ColumnConfig<ScheduleLogItem>[] = [\r\n  {\r\n    key: 'command',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: item => (\r\n      <NameWithAvatar label={item.command} description={item.output} />\r\n    ),\r\n  },\r\n  {\r\n    key: 'ran_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last ran at\" />,\r\n    body: item => <FormattedRelativeTime date={item.ran_at} />,\r\n  },\r\n  {\r\n    key: 'duration',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Duration\" />,\r\n    body: item => `${item.duration}ms`,\r\n  },\r\n  {\r\n    key: 'exit_code',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Completed\" />,\r\n    body: item => <BooleanIndicator value={item.exit_code === 0} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: item => <RerunButton item={item} />,\r\n  },\r\n];\r\n\r\ninterface RerunButtonProps {\r\n  item: ScheduleLogItem;\r\n}\r\nfunction RerunButton({item}: RerunButtonProps) {\r\n  const rerunCommand = useRerunScheduledCommand();\r\n  return (\r\n    <Tooltip label={<Trans message=\"Rerun now\" />}>\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"text-muted\"\r\n        disabled={rerunCommand.isPending}\r\n        onClick={() => {\r\n          rerunCommand.mutate({id: item.id});\r\n        }}\r\n      >\r\n        <EventRepeatIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__8c0e1462__\"","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DownloadIcon = createSvgIcon(\r\n  <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zm-8 2V5h2v6h1.17L12 13.17 9.83 11H11zm-6 7h14v2H5z\" />\r\n, 'DownloadOutlined');\r\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport React from 'react';\r\nimport {ScheduleDatatableColumns} from '@common/admin/logging/schedule/schedule-datatable-columns';\r\nimport timelineImage from '@common/admin/logging/schedule/timeline.svg';\r\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\r\nimport {DownloadIcon} from '@ui/icons/material/Download';\r\n\r\nexport function ScheduleLogDatatable() {\r\n  return (\r\n    <DataTablePage\r\n      padding=\"pt-12 md:pt-24\"\r\n      endpoint=\"logs/schedule\"\r\n      title={<Trans message=\"CRON schedule log\" />}\r\n      columns={ScheduleDatatableColumns}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={timelineImage}\r\n          title={<Trans message=\"No scheduled commands have ran yet\" />}\r\n          filteringTitle={<Trans message=\"No matching scheduled commands\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <DataTableAddItemButton\r\n      elementType=\"a\"\r\n      href=\"api/v1/logs/schedule/download\"\r\n      download\r\n      icon={<DownloadIcon />}\r\n    >\r\n      <Trans message=\"Download log\" />\r\n    </DataTableAddItemButton>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__5350d2f0__\"","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport React from 'react';\r\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\r\nimport {InfoIcon} from '@ui/icons/material/Info';\r\nimport {ErrorIcon} from '@ui/icons/material/Error';\r\nimport clsx from 'clsx';\r\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\r\n\r\nexport const ErrorLogDatatableColumns: ColumnConfig<ErrorLogItem>[] = [\r\n  {\r\n    key: 'message',\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Message\" />,\r\n    body: item => item.message,\r\n  },\r\n  {\r\n    key: 'datetime',\r\n    header: () => <Trans message=\"Date\" />,\r\n    body: item => <FormattedRelativeTime date={item.datetime} />,\r\n  },\r\n  {\r\n    key: 'severity',\r\n    header: () => <Trans message=\"Severity\" />,\r\n    body: item => {\r\n      return (\r\n        <span\r\n          className={clsx(\r\n            'flex items-center gap-6 text-xs capitalize',\r\n            item.level === 'error' ? 'text-danger' : 'text-primary',\r\n          )}\r\n        >\r\n          {item.level === 'error' ? (\r\n            <ErrorIcon size=\"sm\" />\r\n          ) : (\r\n            <InfoIcon size=\"sm\" />\r\n          )}\r\n          {item.level}\r\n        </span>\r\n      );\r\n    },\r\n  },\r\n];\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Button} from '@ui/buttons/button';\r\n\r\ninterface Props {\r\n  error: ErrorLogItem;\r\n}\r\nexport function ErrorLogEntryDialog({error}: Props) {\r\n  return (\r\n    <Dialog size=\"fullscreen\">\r\n      <DialogHeader\r\n        showDivider\r\n        padding=\"px-24 py-10\"\r\n        actions={\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"xs\"\r\n            onClick={() => downloadLogItem(error)}\r\n          >\r\n            <Trans message=\"Download\" />\r\n          </Button>\r\n        }\r\n      >\r\n        <Trans message=\"Error details\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <pre className=\"whitespace-pre-wrap break-words text-xs leading-5\">\r\n          {error.exception}\r\n        </pre>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction downloadLogItem(item: ErrorLogItem) {\r\n  const el = document.createElement('a');\r\n  el.setAttribute(\r\n    'href',\r\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(item.exception),\r\n  );\r\n  el.setAttribute('download', `error-${item.id}.log`);\r\n\r\n  el.style.display = 'none';\r\n  document.body.appendChild(el);\r\n  el.click();\r\n  document.body.removeChild(el);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {useTrans} from '@ui/i18n/use-trans';\r\nimport {message} from '@ui/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\n\r\ninterface Payload {\r\n  identifier: string;\r\n}\r\n\r\nexport function useDeleteErrorLog() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => deleteLogFile(payload),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('logs/error'),\r\n      });\r\n      toast(trans(message('Log file deleted')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction deleteLogFile({identifier}: Payload) {\r\n  return apiClient.delete(`logs/error/${identifier}`).then(r => r.data);\r\n}\r\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport bugFixingImage from '@common/admin/logging/error/bug-fixing.svg';\r\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\r\nimport {DownloadIcon} from '@ui/icons/material/Download';\r\nimport {ErrorLogDatatableColumns} from '@common/admin/logging/error/error-log-datatable-columns';\r\nimport {closeDialog, openDialog} from '@ui/overlays/store/dialog-store';\r\nimport {ErrorLogEntryDialog} from '@common/admin/logging/error/error-log-entry-dialog';\r\nimport {useDataTable} from '@common/datatable/page/data-table-context';\r\nimport {Select} from '@ui/forms/select/select';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {Skeleton} from '@ui/skeleton/skeleton';\r\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\r\nimport {useDeleteErrorLog} from '@common/admin/logging/error/use-delete-error-log';\r\nimport {FormattedBytes} from '@ui/i18n/formatted-bytes';\r\n\r\ninterface ErrorLogFile {\r\n  name: string;\r\n  identifier: string;\r\n  size: number;\r\n}\r\n\r\nexport function ErrorLogDatatable() {\r\n  return (\r\n    <DataTablePage\r\n      padding=\"pt-12 md:pt-24\"\r\n      endpoint=\"logs/error\"\r\n      title={<Trans message=\"Error log\" />}\r\n      onRowAction={item => {\r\n        openDialog(ErrorLogEntryDialog, {error: item});\r\n      }}\r\n      columns={ErrorLogDatatableColumns}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={bugFixingImage}\r\n          title={<Trans message=\"No errors have been logged yet\" />}\r\n          filteringTitle={<Trans message=\"No matching error log entries\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  const {query, setParams} = useDataTable<\r\n    ErrorLogItem,\r\n    {files: ErrorLogFile[]; selectedFile?: string}\r\n  >();\r\n\r\n  const setOnce = useRef(false);\r\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\r\n\r\n  // set initial selected file once files are loaded\r\n  useEffect(() => {\r\n    if (query.data?.files?.length && !setOnce.current) {\r\n      setOnce.current = true;\r\n      const firstFile = query.data.files[0].identifier;\r\n      setSelectedFile(query.data.files[0].identifier);\r\n      // prevent unnecessary http call\r\n      if (firstFile !== query.data.selectedFile) {\r\n        setParams({file: query.data.files[0].identifier});\r\n      }\r\n    }\r\n  }, [query.data, setParams, setOnce]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <FileSelector\r\n        files={query.data?.files ?? null}\r\n        selectedFile={selectedFile}\r\n        onSelected={file => {\r\n          setSelectedFile(file.identifier);\r\n          setParams({file: file.identifier});\r\n        }}\r\n      />\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"danger\"\r\n        disabled={!selectedFile}\r\n        onClick={() =>\r\n          openDialog(ConfirmDeleteDialog, {identifier: selectedFile})\r\n        }\r\n      >\r\n        <Trans message=\"Delete\" />\r\n      </Button>\r\n      {selectedFile && (\r\n        <DataTableAddItemButton\r\n          elementType=\"a\"\r\n          download={\r\n            query.data?.files.find(f => f.identifier === selectedFile)?.name\r\n          }\r\n          href={`api/v1/logs/error/${selectedFile}/download`}\r\n          icon={<DownloadIcon />}\r\n        >\r\n          <Trans message=\"Download log\" />\r\n        </DataTableAddItemButton>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface FileSelectorProps {\r\n  files: ErrorLogFile[] | null;\r\n  selectedFile: string | null;\r\n  onSelected: (file: ErrorLogFile) => void;\r\n}\r\nfunction FileSelector({files, selectedFile, onSelected}: FileSelectorProps) {\r\n  // files have not loaded yet, show skeleton\r\n  if (!files) {\r\n    return <Skeleton variant=\"rect\" className=\"max-w-[210px]\" />;\r\n  }\r\n\r\n  // no error logs yet, hide select completely\r\n  if (!files.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      selectionMode=\"single\"\r\n      selectedValue={selectedFile}\r\n      size=\"sm\"\r\n      minWidth=\"min-w-[210px]\"\r\n    >\r\n      {files?.map(file => (\r\n        <Item\r\n          key={file.identifier}\r\n          value={file.identifier}\r\n          onSelected={() => onSelected(file)}\r\n        >\r\n          {file.name} (<FormattedBytes bytes={file.size} />)\r\n        </Item>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\ninterface ConfirmDeleteDialogProps {\r\n  identifier: string;\r\n}\r\nfunction ConfirmDeleteDialog({identifier}: ConfirmDeleteDialogProps) {\r\n  const deleteLog = useDeleteErrorLog();\r\n  return (\r\n    <ConfirmationDialog\r\n      title={<Trans message=\"Delete log file\" />}\r\n      body={<Trans message=\"Are you sure you want to delete this log file?\" />}\r\n      confirm={<Trans message=\"Delete\" />}\r\n      onConfirm={() =>\r\n        deleteLog.mutate({identifier}, {onSuccess: () => closeDialog()})\r\n      }\r\n      isLoading={deleteLog.isPending}\r\n      isDanger\r\n    />\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__a71f56b4__\"","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\r\n\r\ninterface Response extends BackendResponse {\r\n  logItem: OutgoingEmailLogItem;\r\n}\r\n\r\nexport function useOutgoingEmailLogItemWithMime(id: number) {\r\n  return useQuery({\r\n    queryKey: ['logs/outgoing-email', id],\r\n    queryFn: () => fetchLogItem(id),\r\n  });\r\n}\r\n\r\nfunction fetchLogItem(id: number) {\r\n  return apiClient.get<Response>(`logs/outgoing-email/${id}`).then(r => r.data);\r\n}\r\n","import {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useOutgoingEmailLogItemWithMime} from '@common/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime';\r\nimport {ProgressCircle} from '@ui/progress/progress-circle';\r\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\n\r\ninterface Props {\r\n  logItemId: number;\r\n}\r\nexport function OutgoingEmailLogEntryDialog({logItemId}: Props) {\r\n  const {data} = useOutgoingEmailLogItemWithMime(logItemId);\r\n  const {base_url} = useSettings();\r\n  return (\r\n    <Dialog size=\"fullscreen\">\r\n      <DialogHeader\r\n        showDivider\r\n        padding=\"px-24 py-10\"\r\n        actions={\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"xs\"\r\n            disabled={!data}\r\n            type=\"button\"\r\n            onClick={\r\n              data\r\n                ? () =>\r\n                    downloadFileFromUrl(\r\n                      `${base_url}/api/v1/logs/outgoing-email/${logItemId}/download`,\r\n                    )\r\n                : undefined\r\n            }\r\n          >\r\n            <Trans message=\"Download\" />\r\n          </Button>\r\n        }\r\n      >\r\n        <Trans message=\"Email preview\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        {data ? (\r\n          <iframe\r\n            srcDoc={data.logItem.parsed_message!.body.html}\r\n            className=\"h-max w-full border-none\"\r\n            onLoad={e => {\r\n              const iframe = e.target as HTMLIFrameElement;\r\n              iframe.style.height =\r\n                iframe.contentWindow!.document.body.scrollHeight + 'px';\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"flex min-h-200 items-center justify-center\">\r\n            <ProgressCircle isIndeterminate />\r\n          </div>\r\n        )}\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {Tooltip} from '@ui/tooltip/tooltip';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport React, {ReactNode} from 'react';\r\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\r\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\r\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\r\nimport {Chip, ChipProps} from '@ui/forms/input-field/chip-field/chip';\r\nimport {VisibilityIcon} from '@ui/icons/material/Visibility';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {OutgoingEmailLogEntryDialog} from '@common/admin/logging/outgoing-email/outgoing-email-log-entry-dialog';\r\n\r\nexport const OutgoingEmailLogDatatableColumns: ColumnConfig<OutgoingEmailLogItem>[] =\r\n  [\r\n    {\r\n      key: 'message_id',\r\n      allowsSorting: true,\r\n      visibleInMode: 'all',\r\n      width: 'flex-3 min-w-200',\r\n      header: () => <Trans message=\"Subject\" />,\r\n      body: item => (\r\n        <NameWithAvatar label={item.subject} description={item.message_id} />\r\n      ),\r\n    },\r\n    {\r\n      key: 'status',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"Status\" />,\r\n      body: item => {\r\n        switch (item.status) {\r\n          case 'sent':\r\n            return (\r\n              <StatusChip color=\"positive\">\r\n                <Trans message=\"Sent\" />\r\n              </StatusChip>\r\n            );\r\n          case 'not-sent':\r\n            return (\r\n              <StatusChip color={undefined}>\r\n                <Trans message=\"Not sent\" />\r\n              </StatusChip>\r\n            );\r\n          case 'error':\r\n            return (\r\n              <StatusChip color=\"danger\">\r\n                <Trans message=\"Error\" />\r\n              </StatusChip>\r\n            );\r\n        }\r\n      },\r\n    },\r\n    {\r\n      key: 'from',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"From\" />,\r\n      body: item => item.from,\r\n    },\r\n    {\r\n      key: 'to',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"To\" />,\r\n      body: item => item.to,\r\n    },\r\n    {\r\n      key: 'created_at',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"Date\" />,\r\n      body: item => <FormattedRelativeTime date={item.created_at} />,\r\n    },\r\n    {\r\n      key: 'actions',\r\n      header: () => <Trans message=\"Actions\" />,\r\n      hideHeader: true,\r\n      align: 'end',\r\n      width: 'w-42 flex-shrink-0',\r\n      visibleInMode: 'all',\r\n      body: item => <PreviewEmailButton item={item} />,\r\n    },\r\n  ];\r\n\r\ninterface PreviewButtonProps {\r\n  item: OutgoingEmailLogItem;\r\n}\r\nfunction PreviewEmailButton({item}: PreviewButtonProps) {\r\n  const rerunCommand = useRerunScheduledCommand();\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Tooltip label={<Trans message=\"Preview\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={rerunCommand.isPending}\r\n          onClick={() => {\r\n            rerunCommand.mutate({id: item.id});\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <OutgoingEmailLogEntryDialog logItemId={item.id} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface StatusChipProps {\r\n  color: ChipProps['color'];\r\n  children: ReactNode;\r\n}\r\nfunction StatusChip({color, children}: StatusChipProps) {\r\n  return (\r\n    <Chip color={color} size=\"xs\" className=\"w-max min-w-50 text-center\">\r\n      {children}\r\n    </Chip>\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '@common/datatable/filters/backend-filter';\r\nimport {message} from '@ui/i18n/message';\r\nimport {createdAtFilter} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const OutgoingEmailLogDatatableFilters: BackendFilter[] = [\r\n  {\r\n    key: 'status',\r\n    label: message('Status'),\r\n    description: message('Status of the outgoing email'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('Not sent'),\r\n          value: 'no-sent',\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('Sent'),\r\n          value: 'sent',\r\n        },\r\n        {\r\n          key: '03',\r\n          label: message('Error'),\r\n          value: 'error',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date email send was attempted'),\r\n  }),\r\n];\r\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport React from 'react';\r\nimport openedImage from '@common/admin/logging/outgoing-email/opened.svg';\r\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\r\nimport {DownloadIcon} from '@ui/icons/material/Download';\r\nimport {OutgoingEmailLogDatatableColumns} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-columns';\r\nimport {OutgoingEmailLogDatatableFilters} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-filters';\r\n\r\nexport function OutgoingEmailLogDatatable() {\r\n  return (\r\n    <DataTablePage\r\n      padding=\"pt-12 md:pt-24\"\r\n      endpoint=\"logs/outgoing-email\"\r\n      title={<Trans message=\"Outgoing email\" />}\r\n      columns={OutgoingEmailLogDatatableColumns}\r\n      filters={OutgoingEmailLogDatatableFilters}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={openedImage}\r\n          title={<Trans message=\"No outgoing emails have been logged yet\" />}\r\n          filteringTitle={<Trans message=\"No matching emails\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <DataTableAddItemButton\r\n      elementType=\"a\"\r\n      href=\"api/v1/logs/outgoing-email/download\"\r\n      download\r\n      icon={<DownloadIcon />}\r\n    >\r\n      <Trans message=\"Download log\" />\r\n    </DataTableAddItemButton>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\r\nimport {CrupdateResourceSection} from '@common/admin/crupdate-resource-layout';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\r\nimport {Item} from '@ui/forms/listbox/item';\r\nimport {Avatar} from '@ui/avatar/avatar';\r\nimport {useAuth} from '@common/auth/use-auth';\r\n\r\ninterface Props {\r\n  endpoint?: string;\r\n}\r\nexport function UserRoleSection({endpoint}: Props) {\r\n  const [query, setQuery] = useState('');\r\n  const {data} = useNormalizedModels(endpoint ?? 'normalized-models/role', {\r\n    query,\r\n  });\r\n  const {hasPermission} = useAuth();\r\n  return (\r\n    <CrupdateResourceSection label={<Trans message=\"Roles\" />}>\r\n      <FormChipField\r\n        className=\"mb-30\"\r\n        name=\"roles\"\r\n        suggestions={data?.results}\r\n        inputValue={query}\r\n        onInputValueChange={setQuery}\r\n        alwaysShowAvatar\r\n        readOnly={!hasPermission('users.update')}\r\n      >\r\n        {suggestion => (\r\n          <Item\r\n            key={suggestion.id}\r\n            value={suggestion.id}\r\n            startIcon={<Avatar label={suggestion.name} />}\r\n          >\r\n            {suggestion.name}\r\n          </Item>\r\n        )}\r\n      </FormChipField>\r\n    </CrupdateResourceSection>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {User} from '@ui/types/user';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {message} from '@ui/i18n/message';\r\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\nexport interface UpdateUserPayload\r\n  extends Omit<Partial<User>, 'email_verified_at'> {\r\n  email_verified_at?: boolean;\r\n}\r\n\r\nexport function useUpdateUser(\r\n  userId: number,\r\n  form: UseFormReturn<UpdateUserPayload>,\r\n) {\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateUserPayload) => updateUser(userId, payload),\r\n    onSuccess: (response, props) => {\r\n      toast(message('User updated'));\r\n      queryClient.invalidateQueries({queryKey: ['users']});\r\n      navigate('/admin/users');\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction updateUser(\r\n  userId: number,\r\n  payload: UpdateUserPayload,\r\n): Promise<Response> {\r\n  if (payload.roles) {\r\n    payload.roles = payload.roles.map(r => r.id) as any;\r\n  }\r\n  return apiClient.put(`users/${userId}`, payload).then(r => r.data);\r\n}\r\n","import {UseFormReturn} from 'react-hook-form';\r\nimport {ReactNode} from 'react';\r\nimport {Form} from '@ui/forms/form';\r\nimport {DirtyFormSaveDrawer} from '@common/admin/crupdate-resource-layout';\r\nimport {\r\n  UpdateUserPayload,\r\n  useUpdateUser,\r\n} from '@common/admin/users/requests/user-update-user';\r\nimport {useOutletContext} from 'react-router';\r\nimport {User} from '@ui/types/user';\r\n\r\ninterface Props {\r\n  form: UseFormReturn<Partial<UpdateUserPayload>>;\r\n  children: ReactNode;\r\n}\r\nexport function UpdateUserForm({form, children}: Props) {\r\n  const user = useOutletContext() as User;\r\n  const updateUser = useUpdateUser(user.id, form);\r\n  return (\r\n    <Form\r\n      onSubmit={values => {\r\n        updateUser.mutate(values);\r\n      }}\r\n      onBeforeSubmit={() => form.clearErrors()}\r\n      form={form}\r\n    >\r\n      {children}\r\n      <DirtyFormSaveDrawer isLoading={updateUser.isPending} />\r\n    </Form>\r\n  );\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport React from 'react';\r\nimport {UserRoleSection} from '@common/admin/users/update-user-page/user-role-section';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Link, useOutletContext} from 'react-router';\r\nimport {User} from '@ui/types/user';\r\nimport {UpdateUserPayload} from '@common/admin/users/requests/user-update-user';\r\nimport {UpdateUserForm} from '@common/admin/users/update-user-page/update-user-form';\r\nimport {FormSwitch} from '@ui/forms/toggle/switch';\r\nimport {useResendVerificationEmail} from '@common/auth/requests/use-resend-verification-email';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\r\nimport {LinkStyle} from '@ui/buttons/external-link';\r\n\r\nexport function UpdateUserDetailsTab() {\r\n  const user = useOutletContext() as User;\r\n  const form = useForm<UpdateUserPayload>({\r\n    defaultValues: {\r\n      first_name: user.first_name ?? '',\r\n      last_name: user.last_name ?? '',\r\n      roles: user.roles,\r\n      email_verified_at: !!user.email_verified_at,\r\n      available_space: user.available_space,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <UpdateUserForm form={form}>\r\n      <div className=\"mb-24 flex gap-44\">\r\n        <FormTextField\r\n          name=\"first_name\"\r\n          label={<Trans message=\"First name\" />}\r\n          className=\"flex-auto\"\r\n        />\r\n        <FormTextField\r\n          name=\"last_name\"\r\n          label={<Trans message=\"Last name\" />}\r\n          className=\"flex-auto\"\r\n        />\r\n      </div>\r\n      <FormFileSizeField\r\n        className=\"mb-24\"\r\n        name=\"available_space\"\r\n        label={<Trans message=\"Allowed storage space\" />}\r\n        description={\r\n          <Trans\r\n            values={{\r\n              a: parts => (\r\n                <Link\r\n                  className={LinkStyle}\r\n                  target=\"_blank\"\r\n                  to=\"/admin/settings/uploading\"\r\n                >\r\n                  {parts}\r\n                </Link>\r\n              ),\r\n            }}\r\n            message=\"Total storage space all user uploads are allowed to take up. If left empty, this value will be inherited from any roles or subscriptions user has, or from 'Available space' setting in <a>Uploading</a> settings page.\"\r\n          />\r\n        }\r\n      />\r\n      <EmailConfirmSection user={user} />\r\n      <UserRoleSection />\r\n    </UpdateUserForm>\r\n  );\r\n}\r\n\r\ninterface EmailConfirmSectionProps {\r\n  user: User;\r\n}\r\nfunction EmailConfirmSection({user}: EmailConfirmSectionProps) {\r\n  const resendConfirmationEmail = useResendVerificationEmail();\r\n  const {require_email_confirmation} = useSettings();\r\n  return (\r\n    <div className=\"mb-44\">\r\n      <FormSwitch\r\n        className=\"mb-30\"\r\n        disabled={!require_email_confirmation}\r\n        name=\"email_verified_at\"\r\n        description={\r\n          <Trans message=\"Whether email address has been confirmed. User will not be able to login until address is confirmed, unless confirmation is disabled from settings page.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Email confirmed\" />\r\n      </FormSwitch>\r\n      <Button\r\n        size=\"xs\"\r\n        variant=\"outline\"\r\n        color=\"primary\"\r\n        disabled={\r\n          !require_email_confirmation ||\r\n          resendConfirmationEmail.isPending ||\r\n          !!user.email_verified_at\r\n        }\r\n        onClick={() => {\r\n          resendConfirmationEmail.mutate({email: user.email});\r\n        }}\r\n      >\r\n        <Trans message=\"Resend email\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import {CrupdateResourceSection} from '@common/admin/crupdate-resource-layout';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\r\nimport React from 'react';\r\nimport {UserRoleSection} from '@common/admin/users/update-user-page/user-role-section';\r\nimport {useOutletContext} from 'react-router';\r\nimport {useForm} from 'react-hook-form';\r\nimport {User} from '@ui/types/user';\r\nimport {UpdateUserPayload} from '@common/admin/users/requests/user-update-user';\r\nimport {UpdateUserForm} from '@common/admin/users/update-user-page/update-user-form';\r\n\r\nexport function UpdateUserPermissionsTab() {\r\n  const user = useOutletContext() as User;\r\n  const form = useForm<UpdateUserPayload>({\r\n    defaultValues: {\r\n      permissions: user.permissions,\r\n      roles: user.roles,\r\n    },\r\n  });\r\n  return (\r\n    <UpdateUserForm form={form}>\r\n      <UserRoleSection />\r\n      <CrupdateResourceSection label={<Trans message=\"Permissions\" />}>\r\n        <FormPermissionSelector name=\"permissions\" />\r\n      </CrupdateResourceSection>\r\n    </UpdateUserForm>\r\n  );\r\n}\r\n","import {useOutletContext} from 'react-router';\r\nimport {LocalizationPanel} from '@common/auth/ui/account-settings/localization-panel';\r\nimport {User} from '@ui/types/user';\r\n\r\nexport function UpdateUserDatetimeTab() {\r\n  const user = useOutletContext() as User;\r\n  return <LocalizationPanel user={user} />;\r\n}\r\n","import {useOutletContext} from 'react-router';\r\nimport {User} from '@ui/types/user';\r\nimport {AccessTokenPanel} from '@common/auth/ui/account-settings/access-token-panel/access-token-panel';\r\n\r\nexport function UpdateUserApiTab() {\r\n  const user = useOutletContext() as User;\r\n  return <AccessTokenPanel user={user} />;\r\n}\r\n","import {ChangePasswordPanel} from '@common/auth/ui/account-settings/change-password-panel/change-password-panel';\r\nimport {useOutletContext} from 'react-router';\r\nimport {TwoFactorPanel} from '@common/auth/ui/account-settings/two-factor-panel';\r\nimport {SessionsPanel} from '@common/auth/ui/account-settings/sessions-panel/sessions-panel';\r\nimport {SocialLoginPanel} from '@common/auth/ui/account-settings/social-login-panel';\r\nimport {User} from '@ui/types/user';\r\n\r\nexport function UpdateUserSecurityTab() {\r\n  const user = useOutletContext() as User;\r\n  return (\r\n    <div>\r\n      <ChangePasswordPanel />\r\n      <TwoFactorPanel user={user} />\r\n      <SocialLoginPanel user={user} />\r\n      <SessionsPanel />\r\n    </div>\r\n  );\r\n}\r\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\r\nimport {useForm, UseFormReturn, useWatch} from 'react-hook-form';\r\nimport {CssTheme} from '@ui/themes/css-theme';\r\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\r\nimport {Outlet, useLocation, useParams} from 'react-router';\r\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {ReactElement} from 'react';\r\n\r\nexport interface ThemeEditorFormValue {\r\n  appearance: {\r\n    themes: CssTheme[];\r\n  };\r\n}\r\n\r\nexport function ThemeEditorForm() {\r\n  const values = useAppearanceEditorValues();\r\n  const form = useForm<ThemeEditorFormValue>({\r\n    defaultValues: {\r\n      appearance: {\r\n        themes: values.appearance.themes.filter(t => t.type === 'site'),\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AppearanceEditorForm\r\n      form={form}\r\n      breadcrumb={<ThemeEditorBreadcrumb form={form} />}\r\n      blockerAllowedPath=\"themes\"\r\n    >\r\n      <Outlet />\r\n    </AppearanceEditorForm>\r\n  );\r\n}\r\n\r\ninterface ThemeEditorBreadcrumbProps {\r\n  form: UseFormReturn<any>;\r\n  children?: ReactElement;\r\n}\r\nexport function ThemeEditorBreadcrumb({\r\n  form,\r\n  children,\r\n}: ThemeEditorBreadcrumbProps) {\r\n  const {pathname} = useLocation();\r\n  const lastSegment = pathname.split('/').pop();\r\n  const {themeIndex} = useParams();\r\n  const allThemes = useWatch({\r\n    control: form.control,\r\n    name: 'appearance.themes',\r\n  });\r\n  const activeTheme = themeIndex ? allThemes[themeIndex as any] : null;\r\n\r\n  return (\r\n    <AppearanceEditorBreadcrumb>\r\n      {children}\r\n      <Trans message=\"Themes\" />\r\n      {activeTheme && <span>{activeTheme.name}</span>}\r\n      {lastSegment === 'font' && <Trans message=\"Font\" />}\r\n      {lastSegment === 'radius' && <Trans message=\"Rounding\" />}\r\n    </AppearanceEditorBreadcrumb>\r\n  );\r\n}\r\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\r\nimport {useForm, UseFormReturn, useWatch} from 'react-hook-form';\r\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\r\nimport {Outlet, useParams} from 'react-router';\r\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {MenuConfig} from '@common/menus/menu-config';\r\n\r\nexport interface MenuEditorFormValue {\r\n  settings: {\r\n    menus: MenuConfig[];\r\n  };\r\n}\r\n\r\nexport function MenuEditorForm() {\r\n  const values = useAppearanceEditorValues();\r\n  const form = useForm<MenuEditorFormValue>({\r\n    defaultValues: {\r\n      settings: {\r\n        menus: values.settings.menus,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AppearanceEditorForm\r\n      form={form}\r\n      breadcrumb={<MenuEditorBreadcrumb form={form} />}\r\n      blockerAllowedPath=\"menus\"\r\n    >\r\n      <Outlet />\r\n    </AppearanceEditorForm>\r\n  );\r\n}\r\n\r\ninterface MenuEditorBreadcrumbProps {\r\n  form: UseFormReturn<MenuEditorFormValue>;\r\n}\r\nfunction MenuEditorBreadcrumb({form}: MenuEditorBreadcrumbProps) {\r\n  const {menuIndex, menuItemIndex} = useParams();\r\n  const allMenus = useWatch({control: form.control, name: 'settings.menus'});\r\n\r\n  const activeMenu = menuIndex ? allMenus[menuIndex as any] : null;\r\n  const activeItem =\r\n    menuItemIndex && activeMenu ? activeMenu.items[menuItemIndex as any] : null;\r\n\r\n  return (\r\n    <AppearanceEditorBreadcrumb>\r\n      <Trans message=\"Menus\" />\r\n      {activeMenu && <span>{activeMenu.name}</span>}\r\n      {activeItem && <span>{activeItem.label}</span>}\r\n    </AppearanceEditorBreadcrumb>\r\n  );\r\n}\r\n","import { Trans } from '@ui/i18n/trans';\r\nimport { FormRadioGroup } from '@ui/forms/radio-group/radio-group';\r\nimport { FormRadio } from '@ui/forms/radio-group/radio';\r\nimport { FormSwitch } from '@ui/forms/toggle/switch';\r\nimport {\r\n  AdminSettingsForm,\r\n  AdminSettingsLayout,\r\n} from '@common/admin/settings/form/admin-settings-form';\r\nimport { AdminSettings } from '@common/admin/settings/admin-settings';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\r\n\r\nexport function DriveSettings() {\r\n  return (\r\n    <AdminSettingsLayout\r\n      title={<Trans message=\"Drive\" />}\r\n      description={\r\n        <Trans message=\"Configure defaults for drive user dashboard.\" />\r\n      }\r\n    >\r\n      {data => <Form data={data} />}\r\n    </AdminSettingsLayout>\r\n  );\r\n}\r\n\r\ninterface FormProps {\r\n  data: AdminSettings;\r\n}\r\n\r\nfunction Form({ data }: FormProps) {\r\n  const form = useForm<AdminSettings>({\r\n    defaultValues: {\r\n      client: {\r\n        drive: {\r\n          default_view: data.client.drive?.default_view ?? 'list',\r\n          send_share_notification: data.client.drive?.send_share_notification ?? false,\r\n          share_percentage : data.client.drive?.share_percentage ?? '10'\r\n        },\r\n        share: {\r\n          suggest_emails: data.client.share?.suggest_emails ?? false,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AdminSettingsForm form={form}>\r\n      <FormRadioGroup\r\n        required\r\n        className=\"mb-30\"\r\n        size=\"md\"\r\n        name=\"client.drive.default_view\"\r\n        orientation=\"vertical\"\r\n        label={<Trans message=\"Default view mode\" />}\r\n        description={\r\n          <Trans message=\"Which view mode should user drive use by default.\" />\r\n        }\r\n      >\r\n        <FormRadio value=\"list\">\r\n          <Trans message=\"List\" />\r\n        </FormRadio>\r\n        <FormRadio value=\"grid\">\r\n          <Trans message=\"Grid\" />\r\n        </FormRadio>\r\n      </FormRadioGroup>\r\n      <FormSwitch\r\n        className=\"mb-30\"\r\n        name=\"client.drive.send_share_notification\"\r\n        description={\r\n          <Trans message=\"Send a notification to user when a file or folder is shared with them.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Share notifications\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"client.share.suggest_emails\"\r\n        description={\r\n          <Trans message=\"Suggest email address of existing users when sharing a file or folder.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Suggest emails\" />\r\n      </FormSwitch>\r\n      <FormTextField\r\n        name={`client.drive.share_percentage`}\r\n        label={<Trans message=\"Premium Share percentage\" />}\r\n        className=\"mb-20 mt-20\"\r\n        type='number'\r\n      />\r\n    </AdminSettingsForm>\r\n  );\r\n}\r\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\r\nimport {useForm} from 'react-hook-form';\r\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\r\nimport {Outlet, useLocation} from 'react-router';\r\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {LandingPageContent} from '@app/landing/landing-page-content';\r\n\r\ninterface FormValue {\r\n  settings: {\r\n    homepage: {\r\n      appearance: LandingPageContent;\r\n    };\r\n  };\r\n}\r\n\r\nexport function LandingPageAppearanceForm() {\r\n  const values = useAppearanceEditorValues();\r\n  const form = useForm<FormValue>({\r\n    defaultValues: {\r\n      settings: {\r\n        homepage: {\r\n          appearance: {\r\n            headerTitle: values.settings.homepage.appearance.headerTitle ?? '',\r\n            headerSubtitle:\r\n              values.settings.homepage.appearance.headerSubtitle ?? '',\r\n            headerImage: values.settings.homepage.appearance.headerImage ?? '',\r\n            headerImageOpacity:\r\n              values.settings.homepage.appearance.headerImageOpacity ?? '',\r\n            headerOverlayColor1:\r\n              values.settings.homepage.appearance.headerOverlayColor1 ?? '',\r\n            headerOverlayColor2:\r\n              values.settings.homepage.appearance.headerOverlayColor2 ?? '',\r\n            footerTitle: values.settings.homepage.appearance.footerTitle ?? '',\r\n            footerSubtitle:\r\n              values.settings.homepage.appearance.footerSubtitle ?? '',\r\n            footerImage: values.settings.homepage.appearance.footerImage ?? '',\r\n            primaryFeatures:\r\n              values.settings.homepage.appearance.primaryFeatures ?? [],\r\n            secondaryFeatures:\r\n              values.settings.homepage.appearance.secondaryFeatures ?? [],\r\n            actions: values.settings.homepage.appearance.actions ?? [],\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AppearanceEditorForm\r\n      form={form}\r\n      breadcrumb={<Breadcrumb />}\r\n      blockerAllowedPath=\"landing-page\"\r\n    >\r\n      <Outlet />\r\n    </AppearanceEditorForm>\r\n  );\r\n}\r\n\r\nfunction Breadcrumb() {\r\n  const {pathname} = useLocation();\r\n  const lastSegment = pathname.split('/').pop();\r\n\r\n  return (\r\n    <AppearanceEditorBreadcrumb>\r\n      <Trans message=\"Landing page\" />\r\n      {lastSegment === 'action-buttons' && <Trans message=\"Action buttons\" />}\r\n      {lastSegment === 'primary-features' && (\r\n        <Trans message=\"Primary features\" />\r\n      )}\r\n      {lastSegment === 'secondary-features' && (\r\n        <Trans message=\"Secondary features\" />\r\n      )}\r\n    </AppearanceEditorBreadcrumb>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\r\nimport {UseSliderProps, UseSliderReturn} from './use-slider';\r\n\r\nexport interface BaseSliderProps extends UseSliderProps {\r\n  slider: UseSliderReturn;\r\n  children: ReactNode;\r\n}\r\n\r\nexport function BaseSlider(props: BaseSliderProps) {\r\n  const {\r\n    size = 'md',\r\n    inline,\r\n    label,\r\n    showValueLabel = !!label,\r\n    className,\r\n    width = 'w-full',\r\n    slider,\r\n    children,\r\n    trackColor = 'primary',\r\n    fillColor = 'primary',\r\n  } = props;\r\n\r\n  const {\r\n    domProps,\r\n    trackRef,\r\n    getThumbPercent,\r\n    getThumbValueLabel,\r\n    labelId,\r\n    groupId,\r\n    thumbIds,\r\n    isDisabled,\r\n    numberFormatter,\r\n    minValue,\r\n    maxValue,\r\n    step,\r\n    values,\r\n    getValueLabel,\r\n  } = slider;\r\n\r\n  let outputValue = '';\r\n  let maxLabelLength = Math.max(\r\n    [...numberFormatter.format(minValue)].length,\r\n    [...numberFormatter.format(maxValue)].length,\r\n    [...numberFormatter.format(step)].length,\r\n  );\r\n\r\n  if (getValueLabel) {\r\n    outputValue = getValueLabel(values[0]);\r\n  } else if (values.length === 1) {\r\n    outputValue = getThumbValueLabel(0);\r\n  } else if (values.length === 2) {\r\n    // This should really use the NumberFormat#formatRange proposal...\r\n    // https://github.com/tc39/ecma402/issues/393\r\n    // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\r\n    outputValue = `${getThumbValueLabel(0)} – ${getThumbValueLabel(1)}`;\r\n    maxLabelLength =\r\n      3 +\r\n      2 *\r\n        Math.max(\r\n          maxLabelLength,\r\n          [...numberFormatter.format(minValue)].length,\r\n          [...numberFormatter.format(maxValue)].length,\r\n        );\r\n  }\r\n  const style = getInputFieldClassNames({\r\n    size,\r\n    disabled: isDisabled,\r\n    labelDisplay: 'flex',\r\n  });\r\n\r\n  const wrapperClassname = clsx('touch-none', className, width, {\r\n    'flex items-center': inline,\r\n  });\r\n\r\n  return (\r\n    <div className={wrapperClassname} role=\"group\" id={groupId}>\r\n      {(label || showValueLabel) && (\r\n        <div className={clsx(style.label, 'select-none')}>\r\n          {label && (\r\n            <label\r\n              onClick={() => {\r\n                // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\r\n                // so do it manually. In addition, make sure we show the focus ring.\r\n                document.getElementById(thumbIds[0])?.focus();\r\n              }}\r\n              id={labelId}\r\n              htmlFor={groupId}\r\n            >\r\n              {label}\r\n            </label>\r\n          )}\r\n          {showValueLabel && (\r\n            <output\r\n              htmlFor={thumbIds[0]}\r\n              className=\"ml-auto text-right\"\r\n              aria-live=\"off\"\r\n              style={\r\n                !maxLabelLength\r\n                  ? undefined\r\n                  : {\r\n                      width: `${maxLabelLength}ch`,\r\n                      minWidth: `${maxLabelLength}ch`,\r\n                    }\r\n              }\r\n            >\r\n              {outputValue}\r\n            </output>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div\r\n        ref={trackRef}\r\n        className={clsx('relative', getWrapperHeight(props))}\r\n        {...domProps}\r\n        role=\"presentation\"\r\n      >\r\n        <div\r\n          className={clsx(\r\n            'absolute inset-0 m-auto rounded',\r\n            getTrackColor(trackColor, isDisabled),\r\n            getTrackHeight(size),\r\n          )}\r\n        />\r\n        <div\r\n          className={clsx(\r\n            'absolute inset-0 my-auto rounded',\r\n            getFillColor(fillColor, isDisabled),\r\n            getTrackHeight(size),\r\n          )}\r\n          style={{width: `${Math.max(getThumbPercent(0) * 100, 0)}%`}}\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getWrapperHeight({size, wrapperHeight}: UseSliderProps): string {\r\n  if (wrapperHeight) return wrapperHeight;\r\n  switch (size) {\r\n    case 'xs':\r\n      return 'h-14';\r\n    case 'sm':\r\n      return 'h-20';\r\n    default:\r\n      return 'h-30';\r\n  }\r\n}\r\n\r\nfunction getTrackHeight(size: UseSliderProps['size']): string {\r\n  switch (size) {\r\n    case 'xs':\r\n      return 'h-2';\r\n    case 'sm':\r\n      return 'h-3';\r\n    default:\r\n      return 'h-4';\r\n  }\r\n}\r\n\r\nfunction getTrackColor(color: string, isDisabled: boolean): string {\r\n  if (isDisabled) {\r\n    color = 'disabled';\r\n  }\r\n  switch (color) {\r\n    case 'disabled':\r\n      return 'bg-slider-disabled/60';\r\n    case 'primary':\r\n      return 'bg-primary-light';\r\n    case 'neutral':\r\n      return 'bg-divider';\r\n    default:\r\n      return color;\r\n  }\r\n}\r\n\r\nfunction getFillColor(color: string, isDisabled: boolean): string {\r\n  if (isDisabled) {\r\n    color = 'disabled';\r\n  }\r\n  switch (color) {\r\n    case 'disabled':\r\n      return 'bg-slider-disabled';\r\n    case 'primary':\r\n      return 'bg-primary';\r\n    default:\r\n      return color;\r\n  }\r\n}\r\n","import {\r\n  mergeProps,\r\n  snapValueToStep,\r\n  useGlobalListeners,\r\n} from '@react-aria/utils';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport React, {\r\n  HTMLAttributes,\r\n  ReactNode,\r\n  RefObject,\r\n  useId,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {clamp} from '@ui/utils/number/clamp';\r\nimport {usePointerEvents} from '../../interactions/use-pointer-events';\r\nimport {useNumberFormatter} from '@ui/i18n/use-number-formatter';\r\nimport type {NumberFormatOptions} from '@internationalized/number';\r\n\r\nexport interface UseSliderProps<T = number[]> {\r\n  formatOptions?: NumberFormatOptions;\r\n  onPointerDown?: () => void;\r\n  onPointerMove?: (e: React.PointerEvent) => void;\r\n  onChange?: (value: T) => void;\r\n  onChangeEnd?: (value: T) => void;\r\n  value?: T;\r\n  defaultValue?: T;\r\n  getValueLabel?: (value: number) => string;\r\n  minValue?: number;\r\n  maxValue?: number;\r\n  step?: number;\r\n  isDisabled?: boolean;\r\n  size?: 'xs' | 'sm' | 'md';\r\n  label?: ReactNode;\r\n  inline?: boolean;\r\n  className?: string;\r\n  width?: string;\r\n  showValueLabel?: boolean;\r\n  fillColor?: 'primary' | string;\r\n  trackColor?: 'primary' | 'neutral' | string;\r\n  showThumbOnHoverOnly?: boolean;\r\n  thumbSize?: string;\r\n  wrapperHeight?: string;\r\n}\r\n\r\nexport interface UseSliderReturn {\r\n  domProps: HTMLAttributes<HTMLElement>;\r\n  trackRef: RefObject<HTMLDivElement>;\r\n  isPointerOver: boolean;\r\n  showThumbOnHoverOnly?: boolean;\r\n  thumbSize?: string;\r\n  step: number;\r\n  isDisabled: boolean;\r\n  values: number[];\r\n  minValue: number;\r\n  maxValue: number;\r\n  focusedThumb: number | undefined;\r\n  labelId: string | undefined;\r\n  groupId: string;\r\n  thumbIds: string[];\r\n  numberFormatter: Intl.NumberFormat;\r\n  getThumbPercent: (index: number) => number;\r\n  getThumbMinValue: (index: number) => number;\r\n  getThumbMaxValue: (index: number) => number;\r\n  getThumbValueLabel: (index: number) => string;\r\n  setThumbValue: (index: number, value: number) => void;\r\n  updateDraggedThumbs: (index: number, dragging: boolean) => void;\r\n  isThumbDragging: (index: number) => boolean;\r\n  setThumbEditable: (index: number, editable: boolean) => void;\r\n  setFocusedThumb: (index: number | undefined) => void;\r\n  getValueLabel?: (value: number) => string;\r\n}\r\n\r\nexport function useSlider({\r\n  minValue = 0,\r\n  maxValue = 100,\r\n  isDisabled = false,\r\n  step = 1,\r\n  formatOptions,\r\n  onChangeEnd,\r\n  onPointerDown,\r\n  label,\r\n  getValueLabel,\r\n  showThumbOnHoverOnly,\r\n  thumbSize,\r\n  onPointerMove,\r\n  ...props\r\n}: UseSliderProps): UseSliderReturn {\r\n  const [isPointerOver, setIsPointerOver] = useState(false);\r\n  const numberFormatter = useNumberFormatter(formatOptions);\r\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\r\n  const trackRef = useRef<HTMLDivElement>(null);\r\n\r\n  // values will be stored in internal state as an array for both slider and range slider\r\n  const [values, setValues] = useControlledState<number[]>(\r\n    props.value ? props.value : undefined,\r\n    props.defaultValue ?? ([minValue] as any),\r\n    props.onChange as any,\r\n  );\r\n  // need to also store values in ref, because state value would\r\n  // lag behind by one between pointer down and move callbacks\r\n  const valuesRef = useRef<number[] | null>(null);\r\n  valuesRef.current = values;\r\n\r\n  // indices of thumbs that are being dragged currently (state and ref for same reasons as above)\r\n  const [draggedThumbs, setDraggedThumbs] = useState<boolean[]>(\r\n    new Array(values.length).fill(false),\r\n  );\r\n  const draggedThumbsRef = useRef<boolean[] | null>(null);\r\n  draggedThumbsRef.current = draggedThumbs;\r\n\r\n  // formatted value for <output> and thumb aria labels\r\n  function getFormattedValue(value: number) {\r\n    return numberFormatter.format(value);\r\n  }\r\n\r\n  const isThumbDragging = (index: number) => {\r\n    return draggedThumbsRef.current?.[index] || false;\r\n  };\r\n\r\n  const getThumbValueLabel = (index: number) =>\r\n    getFormattedValue(values[index]);\r\n\r\n  const getThumbMinValue = (index: number) =>\r\n    index === 0 ? minValue : values[index - 1];\r\n  const getThumbMaxValue = (index: number) =>\r\n    index === values.length - 1 ? maxValue : values[index + 1];\r\n\r\n  const setThumbValue = (index: number, value: number) => {\r\n    if (isDisabled || !isThumbEditable(index) || !valuesRef.current) {\r\n      return;\r\n    }\r\n    const thisMin = getThumbMinValue(index);\r\n    const thisMax = getThumbMaxValue(index);\r\n\r\n    // Round value to multiple of step, clamp value between min and max\r\n    value = snapValueToStep(value, thisMin, thisMax, step);\r\n    valuesRef.current = replaceIndex(valuesRef.current, index, value);\r\n    setValues(valuesRef.current);\r\n  };\r\n\r\n  // update \"dragging\" status of specified thumb\r\n  const updateDraggedThumbs = (index: number, dragging: boolean) => {\r\n    if (isDisabled || !isThumbEditable(index)) {\r\n      return;\r\n    }\r\n\r\n    const wasDragging = draggedThumbsRef.current?.[index];\r\n    draggedThumbsRef.current = replaceIndex(\r\n      draggedThumbsRef.current || [],\r\n      index,\r\n      dragging,\r\n    );\r\n    setDraggedThumbs(draggedThumbsRef.current);\r\n\r\n    // Call onChangeEnd if no handles are dragging.\r\n    if (onChangeEnd && wasDragging && !draggedThumbsRef.current.some(Boolean)) {\r\n      onChangeEnd(valuesRef.current || []);\r\n    }\r\n  };\r\n\r\n  const [focusedThumb, setFocusedThumb] = useState<number | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  const getValuePercent = (value: number) => {\r\n    const x = Math.min(1, (value - minValue) / (maxValue - minValue));\r\n    if (isNaN(x)) {\r\n      return 0;\r\n    }\r\n    return x;\r\n  };\r\n\r\n  const getThumbPercent = (index: number) =>\r\n    getValuePercent(valuesRef.current![index]);\r\n\r\n  const setThumbPercent = (index: number, percent: number) => {\r\n    setThumbValue(index, getPercentValue(percent));\r\n  };\r\n\r\n  const getRoundedValue = (value: number) =>\r\n    Math.round((value - minValue) / step) * step + minValue;\r\n\r\n  const getPercentValue = (percent: number) => {\r\n    const val = percent * (maxValue - minValue) + minValue;\r\n    return clamp(getRoundedValue(val), minValue, maxValue);\r\n  };\r\n\r\n  // allows disabling individual thumbs in range slider, instead of disable the whole slider\r\n  const editableThumbsRef = useRef<boolean[]>(\r\n    new Array(values.length).fill(true),\r\n  );\r\n  const isThumbEditable = (index: number) => editableThumbsRef.current[index];\r\n  const setThumbEditable = (index: number, editable: boolean) => {\r\n    editableThumbsRef.current[index] = editable;\r\n  };\r\n\r\n  // When the user clicks or drags the track, we want the motion to set and drag the\r\n  // closest thumb. Hence, we also need to install useMove() on the track element.\r\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\r\n  // It is set onMouseDown/onTouchDown; see trackProps below.\r\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\r\n\r\n  const currentPointer = useRef<number | null | undefined>(undefined);\r\n  const handlePointerDown = (e: React.PointerEvent) => {\r\n    if (\r\n      e.pointerType === 'mouse' &&\r\n      (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    onPointerDown?.();\r\n\r\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\r\n    if (\r\n      trackRef.current &&\r\n      !isDisabled &&\r\n      values.every((_, i) => !draggedThumbs[i])\r\n    ) {\r\n      const size = trackRef.current.offsetWidth;\r\n      // Find the closest thumb\r\n      const trackPosition = trackRef.current.getBoundingClientRect().left;\r\n      const offset = e.clientX - trackPosition;\r\n      const percent = offset / size;\r\n      const value = getPercentValue(percent);\r\n\r\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\r\n      let closestThumb;\r\n      const split = values.findIndex(v => value - v < 0);\r\n      if (split === 0) {\r\n        // If the index is zero then the closest thumb is the first one\r\n        closestThumb = split;\r\n      } else if (split === -1) {\r\n        // If no index is found they've clicked past all the thumbs\r\n        closestThumb = values.length - 1;\r\n      } else {\r\n        const lastLeft = values[split - 1];\r\n        const firstRight = values[split];\r\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\r\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\r\n          closestThumb = split - 1;\r\n        } else {\r\n          closestThumb = split;\r\n        }\r\n      }\r\n\r\n      // Confirm that the found closest thumb is editable, not disabled, and move it\r\n      if (closestThumb >= 0 && isThumbEditable(closestThumb)) {\r\n        // Don't un-focus anything\r\n        e.preventDefault();\r\n\r\n        realTimeTrackDraggingIndex.current = closestThumb;\r\n        setFocusedThumb(closestThumb);\r\n        currentPointer.current = e.pointerId;\r\n\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, true);\r\n        setThumbValue(closestThumb, value);\r\n\r\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\r\n      } else {\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  const currentPosition = useRef<number | null>(null);\r\n  const {domProps: moveDomProps} = usePointerEvents({\r\n    onPointerDown: handlePointerDown,\r\n    onMoveStart() {\r\n      currentPosition.current = null;\r\n    },\r\n    onMove(e, deltaX) {\r\n      const size = trackRef.current?.offsetWidth || 0;\r\n\r\n      if (currentPosition.current == null) {\r\n        currentPosition.current =\r\n          getThumbPercent(realTimeTrackDraggingIndex.current || 0) * size;\r\n      }\r\n\r\n      currentPosition.current += deltaX;\r\n\r\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\r\n        const percent = clamp(currentPosition.current / size, 0, 1);\r\n        setThumbPercent(realTimeTrackDraggingIndex.current, percent);\r\n      }\r\n    },\r\n    onMoveEnd() {\r\n      if (realTimeTrackDraggingIndex.current != null) {\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n    },\r\n  });\r\n\r\n  const domProps = mergeProps(moveDomProps, {\r\n    onPointerEnter: () => {\r\n      setIsPointerOver(true);\r\n    },\r\n    onPointerLeave: () => {\r\n      setIsPointerOver(false);\r\n    },\r\n    onPointerMove: (e: React.PointerEvent) => {\r\n      onPointerMove?.(e);\r\n    },\r\n  });\r\n\r\n  const onUpTrack = (e: PointerEvent) => {\r\n    const id = e.pointerId;\r\n    if (id === currentPointer.current) {\r\n      if (realTimeTrackDraggingIndex.current != null) {\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n\r\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\r\n    }\r\n  };\r\n\r\n  const id = useId();\r\n  const labelId = label ? `${id}-label` : undefined;\r\n  const groupId = `${id}-group`;\r\n  const thumbIds = [...Array(values.length)].map((v, i) => {\r\n    return `${id}-thumb-${i}`;\r\n  });\r\n\r\n  return {\r\n    domProps,\r\n    trackRef,\r\n    isDisabled,\r\n    step,\r\n    values,\r\n    minValue,\r\n    maxValue,\r\n    focusedThumb,\r\n    labelId,\r\n    groupId,\r\n    thumbIds,\r\n    numberFormatter,\r\n    getThumbPercent,\r\n    getThumbMinValue,\r\n    getThumbMaxValue,\r\n    getThumbValueLabel,\r\n    isThumbDragging,\r\n    setThumbValue,\r\n    updateDraggedThumbs,\r\n    setThumbEditable,\r\n    setFocusedThumb,\r\n    getValueLabel,\r\n    isPointerOver,\r\n    showThumbOnHoverOnly,\r\n    thumbSize,\r\n  };\r\n}\r\n\r\nfunction replaceIndex<T>(array: T[], index: number, value: T) {\r\n  if (array[index] === value) {\r\n    return array;\r\n  }\r\n\r\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\r\n}\r\n","import React, {Ref, useCallback, useEffect, useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport {UseSliderReturn} from './use-slider';\r\nimport {useGlobalListeners, useObjectRef} from '@react-aria/utils';\r\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\r\nimport {BaseSliderProps} from '@ui/forms/slider/base-slider';\r\n\r\ninterface SliderThumb {\r\n  index: number;\r\n  slider: UseSliderReturn;\r\n  isDisabled?: boolean;\r\n  ariaLabel?: string;\r\n  inputRef?: Ref<HTMLInputElement>;\r\n  onBlur?: React.FocusEventHandler;\r\n  fillColor?: BaseSliderProps['fillColor'];\r\n}\r\n\r\nexport function SliderThumb({\r\n  index,\r\n  slider,\r\n  isDisabled: isThumbDisabled,\r\n  ariaLabel,\r\n  inputRef,\r\n  onBlur,\r\n  fillColor = 'primary',\r\n}: SliderThumb) {\r\n  const inputObjRef = useObjectRef(inputRef);\r\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\r\n\r\n  const {\r\n    step,\r\n    values,\r\n    focusedThumb,\r\n    labelId,\r\n    thumbIds,\r\n    isDisabled: isSliderDisabled,\r\n    getThumbPercent,\r\n    getThumbMinValue,\r\n    getThumbMaxValue,\r\n    getThumbValueLabel,\r\n    setThumbValue,\r\n    updateDraggedThumbs,\r\n    isThumbDragging,\r\n    setThumbEditable,\r\n    setFocusedThumb,\r\n    isPointerOver,\r\n    showThumbOnHoverOnly,\r\n    thumbSize = 'w-18 h-18',\r\n  } = slider;\r\n\r\n  const isDragging = isThumbDragging(index);\r\n  const value = values[index];\r\n\r\n  // Immediately register editability with the state\r\n  setThumbEditable(index, !isThumbDisabled);\r\n  const isDisabled = isThumbDisabled || isSliderDisabled;\r\n\r\n  const focusInput = useCallback(() => {\r\n    if (inputObjRef.current) {\r\n      inputObjRef.current.focus({preventScroll: true});\r\n    }\r\n  }, [inputObjRef]);\r\n\r\n  // we will focus the native range input when slider is clicked or thumb is\r\n  // focused in some other way, and let browser handle keyboard interactions\r\n  const isFocused = focusedThumb === index;\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      focusInput();\r\n    }\r\n  }, [isFocused, focusInput]);\r\n\r\n  const currentPointer = useRef<number | undefined>(undefined);\r\n  const handlePointerUp = (e: PointerEvent) => {\r\n    if (e.pointerId === currentPointer.current) {\r\n      focusInput();\r\n      updateDraggedThumbs(index, false);\r\n      removeGlobalListener(window, 'pointerup', handlePointerUp, false);\r\n    }\r\n  };\r\n\r\n  const className = clsx(\r\n    'outline-none rounded-full top-1/2 -translate-y-1/2 -translate-x-1/2 absolute inset-0 transition-button duration-200',\r\n    thumbSize,\r\n    !isDisabled && 'shadow-md',\r\n    thumbColor({fillColor, isDisabled, isDragging: isDragging}),\r\n    // show thumb on hover and while dragging, otherwise \"blur\" event will fire on thumb and dragging will stop\r\n    !showThumbOnHoverOnly ||\r\n      (showThumbOnHoverOnly && isDragging) ||\r\n      isPointerOver\r\n      ? 'visible'\r\n      : 'invisible',\r\n  );\r\n\r\n  return (\r\n    <div\r\n      role=\"presentation\"\r\n      className={className}\r\n      style={{\r\n        left: `${Math.max(getThumbPercent(index) * 100, 0)}%`,\r\n      }}\r\n      onPointerDown={e => {\r\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\r\n          return;\r\n        }\r\n        focusInput();\r\n        currentPointer.current = e.pointerId;\r\n        updateDraggedThumbs(index, true);\r\n\r\n        addGlobalListener(window, 'pointerup', handlePointerUp, false);\r\n      }}\r\n    >\r\n      <input\r\n        id={thumbIds[index]}\r\n        onKeyDown={createEventHandler(() => {\r\n          updateDraggedThumbs(index, true);\r\n        })}\r\n        onKeyUp={createEventHandler(() => {\r\n          // make sure \"onChangeEnd\" is fired on keyboard navigation\r\n          updateDraggedThumbs(index, false);\r\n        })}\r\n        ref={inputObjRef}\r\n        tabIndex={!isDisabled ? 0 : undefined}\r\n        min={getThumbMinValue(index)}\r\n        max={getThumbMaxValue(index)}\r\n        step={step}\r\n        value={value}\r\n        disabled={isDisabled}\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={labelId}\r\n        aria-orientation=\"horizontal\"\r\n        aria-valuetext={getThumbValueLabel(index)}\r\n        onFocus={() => {\r\n          setFocusedThumb(index);\r\n        }}\r\n        onBlur={e => {\r\n          setFocusedThumb(undefined);\r\n          updateDraggedThumbs(index, false);\r\n          onBlur?.(e);\r\n        }}\r\n        onChange={e => {\r\n          setThumbValue(index, parseFloat(e.target.value));\r\n        }}\r\n        type=\"range\"\r\n        className=\"sr-only\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SliderThumbColorProps {\r\n  isDisabled?: boolean;\r\n  isDragging: boolean;\r\n  fillColor?: BaseSliderProps['fillColor'];\r\n}\r\n\r\nfunction thumbColor({\r\n  isDisabled,\r\n  isDragging,\r\n  fillColor,\r\n}: SliderThumbColorProps): string {\r\n  if (isDisabled) {\r\n    return 'bg-slider-disabled cursor-default';\r\n  }\r\n\r\n  if (fillColor && fillColor !== 'primary') {\r\n    return fillColor;\r\n  }\r\n\r\n  return clsx(\r\n    'hover:bg-primary-dark',\r\n    isDragging ? 'bg-primary-dark' : 'bg-primary',\r\n  );\r\n}\r\n","import {BaseSlider} from './base-slider';\r\nimport {useSlider, UseSliderProps} from './use-slider';\r\nimport React, {Ref} from 'react';\r\nimport {SliderThumb} from './slider-thumb';\r\nimport {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\n\r\ninterface SliderProps extends UseSliderProps<number> {\r\n  inputRef?: Ref<HTMLInputElement>;\r\n  onBlur?: React.FocusEventHandler;\r\n}\r\nexport function Slider({inputRef, onBlur, ...props}: SliderProps) {\r\n  const {onChange, onChangeEnd, value, defaultValue, ...otherProps} = props;\r\n\r\n  const baseProps: UseSliderProps = {\r\n    ...otherProps,\r\n    // Normalize `value: number[]` to `value: number`\r\n    value: value != null ? [value] : undefined,\r\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\r\n    onChange: (v: number[]): void => {\r\n      onChange?.(v[0]);\r\n    },\r\n    onChangeEnd: (v: number[]): void => {\r\n      onChangeEnd?.(v[0]);\r\n    },\r\n  };\r\n\r\n  const slider = useSlider(baseProps);\r\n\r\n  return (\r\n    <BaseSlider {...baseProps} slider={slider}>\r\n      <SliderThumb\r\n        fillColor={props.fillColor}\r\n        index={0}\r\n        slider={slider}\r\n        inputRef={inputRef}\r\n        onBlur={onBlur}\r\n      />\r\n    </BaseSlider>\r\n  );\r\n}\r\n\r\nexport interface FormSliderProps extends SliderProps {\r\n  name: string;\r\n}\r\n\r\nexport function FormSlider({name, ...props}: FormSliderProps) {\r\n  const {\r\n    field: {onChange, onBlur, value = '', ref},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  const formProps: SliderProps = {\r\n    onChange,\r\n    onBlur,\r\n    value: value || '', // avoid issues with \"null\" value when setting form defaults from backend model\r\n  };\r\n\r\n  return <Slider inputRef={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n","import {LandingPageContent} from '@app/landing/landing-page-content';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {\r\n  AppearanceEditorValues,\r\n  appearanceState,\r\n  useAppearanceStore,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormSlider} from '@ui/forms/slider/slider';\r\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\r\nimport {Link} from 'react-router';\r\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\r\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\r\n\r\nexport function LandingPageSectionGeneral() {\r\n  return (\r\n    <Fragment>\r\n      <HeaderSection />\r\n      <div className=\"my-24 border-y py-24\">\r\n        <AppearanceButton\r\n          to=\"action-buttons\"\r\n          elementType={Link}\r\n          className=\"mb-20\"\r\n        >\r\n          <Trans message=\"Action buttons\" />\r\n        </AppearanceButton>\r\n        <AppearanceButton to=\"primary-features\" elementType={Link}>\r\n          <Trans message=\"Primary features\" />\r\n        </AppearanceButton>\r\n        <AppearanceButton to=\"secondary-features\" elementType={Link}>\r\n          <Trans message=\"Secondary features\" />\r\n        </AppearanceButton>\r\n      </div>\r\n      <FooterSection />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction HeaderSection() {\r\n  const defaultImage = useAppearanceStore(\r\n    s =>\r\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\r\n        ?.headerImage,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        label={<Trans message=\"Header title\" />}\r\n        className=\"mb-20\"\r\n        name=\"settings.homepage.appearance.headerTitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight('[data-testid=\"headerTitle\"]');\r\n        }}\r\n      />\r\n      <FormTextField\r\n        label={<Trans message=\"Header subtitle\" />}\r\n        className=\"mb-30\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        name=\"settings.homepage.appearance.headerSubtitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            '[data-testid=\"headerSubtitle\"]',\r\n          );\r\n        }}\r\n      />\r\n      <FormImageSelector\r\n        name=\"settings.homepage.appearance.headerImage\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Header image\" />}\r\n        defaultValue={defaultImage}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n      <FormSlider\r\n        name=\"settings.homepage.appearance.headerImageOpacity\"\r\n        label={<Trans message=\"Header image opacity\" />}\r\n        minValue={0}\r\n        step={0.1}\r\n        maxValue={1}\r\n        formatOptions={{style: 'percent'}}\r\n      />\r\n      <div className=\"mb-20 text-xs text-muted\">\r\n        <Trans message=\"In order for overlay colors to appear, header image opacity will need to be less then 100%\" />\r\n      </div>\r\n      <ColorPickerTrigger\r\n        formKey=\"settings.homepage.appearance.headerOverlayColor1\"\r\n        label={<Trans message=\"Header overlay color 1\" />}\r\n      />\r\n      <ColorPickerTrigger\r\n        formKey=\"settings.homepage.appearance.headerOverlayColor2\"\r\n        label={<Trans message=\"Header overlay color 2\" />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FooterSection() {\r\n  const defaultImage = useAppearanceStore(\r\n    s =>\r\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\r\n        ?.footerImage,\r\n  );\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        label={<Trans message=\"Footer title\" />}\r\n        className=\"mb-20\"\r\n        name=\"settings.homepage.appearance.footerTitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight('[data-testid=\"footerTitle\"]');\r\n        }}\r\n      />\r\n      <FormTextField\r\n        label={<Trans message=\"Footer subtitle\" />}\r\n        className=\"mb-20\"\r\n        name=\"settings.homepage.appearance.footerSubtitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            '[data-testid=\"footerSubtitle\"]',\r\n          );\r\n        }}\r\n      />\r\n      <FormImageSelector\r\n        name=\"settings.homepage.appearance.footerImage\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Footer background image\" />}\r\n        defaultValue={defaultImage}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ColorPickerTriggerProps {\r\n  formKey: string;\r\n  label: ReactNode;\r\n}\r\nfunction ColorPickerTrigger({label, formKey}: ColorPickerTriggerProps) {\r\n  const key = formKey as 'settings.homepage.appearance.headerOverlayColor1';\r\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\r\n\r\n  const formValue = watch(key);\r\n\r\n  const setColor = (value: string | null) => {\r\n    setValue(formKey as any, value, {\r\n      shouldDirty: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"popover\"\r\n      value={formValue}\r\n      alwaysReturnCurrentValueOnClose\r\n      onValueChange={newValue => setColor(newValue)}\r\n      onClose={value => setColor(value)}\r\n    >\r\n      <AppearanceButton\r\n        className=\"capitalize\"\r\n        startIcon={\r\n          <ColorIcon\r\n            viewBox=\"0 0 48 48\"\r\n            className=\"icon-lg\"\r\n            style={{fill: formValue}}\r\n          />\r\n        }\r\n      >\r\n        {label}\r\n      </AppearanceButton>\r\n      <ColorPickerDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {MenuItemForm} from '@common/admin/menus/menu-item-form';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\r\nimport {useState} from 'react';\r\n\r\nexport function LandingPageSectionActionButtons() {\r\n  const [expandedValues, setExpandedValues] = useState(['cta1']);\r\n  return (\r\n    <Accordion\r\n      variant=\"outline\"\r\n      expandedValues={expandedValues}\r\n      onExpandedChange={values => {\r\n        setExpandedValues(values as string[]);\r\n        if (values.length) {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"${values[0]}\"]`,\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <AccordionItem value=\"cta1\" label={<Trans message=\"Header button 1\" />}>\r\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta1\" />\r\n      </AccordionItem>\r\n      <AccordionItem value=\"ct2\" label={<Trans message=\"Header button 2\" />}>\r\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta2\" />\r\n      </AccordionItem>\r\n      <AccordionItem value=\"cta3\" label={<Trans message=\"Footer button\" />}>\r\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta3\" />\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport {\r\n  appearanceState,\r\n  useAppearanceStore,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {LandingPageContent} from '@app/landing/landing-page-content';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {useState} from 'react';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\r\n\r\nexport function LandingPageSectionPrimaryFeatures() {\r\n  const {fields, remove, append} = useFieldArray({\r\n    name: 'settings.homepage.appearance.primaryFeatures',\r\n  });\r\n  const [expandedValues, setExpandedValues] = useState([0]);\r\n  return (\r\n    <div>\r\n      <Accordion\r\n        variant=\"outline\"\r\n        expandedValues={expandedValues}\r\n        onExpandedChange={values => {\r\n          setExpandedValues(values as number[]);\r\n          if (values.length) {\r\n            appearanceState().preview.setHighlight(\r\n              `[data-testid=\"primary-root-${values[0]}\"]`,\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <AccordionItem\r\n              key={field.id}\r\n              value={index}\r\n              label={<Trans message={`Primary feature ${index + 1}`} />}\r\n            >\r\n              <FeatureForm index={index} />\r\n              <div className=\"text-right\">\r\n                <Button\r\n                  size=\"xs\"\r\n                  variant=\"outline\"\r\n                  color=\"danger\"\r\n                  onClick={() => {\r\n                    remove(index);\r\n                  }}\r\n                >\r\n                  <Trans message=\"Remove\" />\r\n                </Button>\r\n              </div>\r\n            </AccordionItem>\r\n          );\r\n        })}\r\n      </Accordion>\r\n      <div className=\"mt-20 text-right\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => {\r\n            append({});\r\n            setExpandedValues([fields.length]);\r\n          }}\r\n        >\r\n          <Trans message=\"Add feature\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FeatureFormProps {\r\n  index: number;\r\n}\r\nfunction FeatureForm({index}: FeatureFormProps) {\r\n  const defaultImage = useAppearanceStore(\r\n    s =>\r\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\r\n        ?.primaryFeatures[index]?.image,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <FormImageSelector\r\n        name={`settings.homepage.appearance.primaryFeatures.${index}.image`}\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Image\" />}\r\n        defaultValue={defaultImage}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.primaryFeatures.${index}.title`}\r\n        label={<Trans message=\"Title\" />}\r\n        className=\"mb-20\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"primary-title-${index}\"]`,\r\n          );\r\n        }}\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.primaryFeatures.${index}.subtitle`}\r\n        label={<Trans message=\"Subtitle\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"primary-subtitle-${index}\"]`,\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {Trans} from '@ui/i18n/trans';\r\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {LandingPageContent} from '@app/landing/landing-page-content';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {AddIcon} from '@ui/icons/material/Add';\r\nimport {useState} from 'react';\r\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\r\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\r\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\r\n\r\nexport function LandingPageSecondaryFeatures() {\r\n  const {fields, remove, append} = useFieldArray({\r\n    name: 'settings.homepage.appearance.secondaryFeatures',\r\n  });\r\n  const [expandedValues, setExpandedValues] = useState([0]);\r\n  return (\r\n    <div>\r\n      <Accordion\r\n        variant=\"outline\"\r\n        expandedValues={expandedValues}\r\n        onExpandedChange={values => {\r\n          setExpandedValues(values as number[]);\r\n          if (values.length) {\r\n            appearanceState().preview.setHighlight(\r\n              `[data-testid=\"secondary-root-${values[0]}\"]`,\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <AccordionItem\r\n              key={field.id}\r\n              value={index}\r\n              label={<Trans message={`Secondary feature ${index + 1}`} />}\r\n            >\r\n              <FeatureForm index={index} />\r\n              <div className=\"text-right\">\r\n                <Button\r\n                  size=\"xs\"\r\n                  variant=\"outline\"\r\n                  color=\"danger\"\r\n                  onClick={() => {\r\n                    remove(index);\r\n                  }}\r\n                >\r\n                  <Trans message=\"Remove\" />\r\n                </Button>\r\n              </div>\r\n            </AccordionItem>\r\n          );\r\n        })}\r\n      </Accordion>\r\n      <div className=\"mt-20 text-right\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => {\r\n            append({});\r\n            setExpandedValues([fields.length]);\r\n          }}\r\n        >\r\n          <Trans message=\"Add feature\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FeatureFormProps {\r\n  index: number;\r\n}\r\nfunction FeatureForm({index}: FeatureFormProps) {\r\n  return (\r\n    <>\r\n      <FormImageSelector\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.image`}\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Image\" />}\r\n        defaultValue={getDefaultImage(index)}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.title`}\r\n        label={<Trans message=\"Title\" />}\r\n        className=\"mb-20\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"secondary-title-${index}\"]`,\r\n          );\r\n        }}\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.subtitle`}\r\n        label={<Trans message=\"Subtitle\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"secondary-subtitle-${index}\"]`,\r\n          );\r\n        }}\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.description`}\r\n        label={<Trans message=\"Description\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"secondary-description-${index}\"]`,\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getDefaultImage(index: number): string | undefined {\r\n  return (\r\n    appearanceState().defaults?.settings.homepage\r\n      .appearance as LandingPageContent\r\n  ).secondaryFeatures[index]?.image;\r\n}\r\n"],"file":"assets/app-admin-routes.lazy-d8c4edb2.js"}