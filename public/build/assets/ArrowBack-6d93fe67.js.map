{"version":3,"file":"ArrowBack-6d93fe67.js","sources":["../../../common/foundation/resources/client/ui/library/forms/input-field/input.tsx","../../../common/foundation/resources/client/ui/library/utils/date/start-of-day.ts","../../../common/foundation/resources/client/ui/library/utils/date/end-of-day.ts","../../../common/foundation/resources/client/ui/library/i18n/get-user-timezone.ts","../../../common/foundation/resources/client/ui/library/i18n/use-current-date-time.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/foundation/resources/client/ui/library/icons/material/DateRange.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/utils.ts","../../../common/foundation/resources/client/ui/library/i18n/to-safe-zoned.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/use-base-date-picker-state.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/foundation/resources/client/ui/library/icons/material/ArrowRightAlt.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/set-segment.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/page-step.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/literal-segment.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/date-segment-list.tsx","../../../common/foundation/resources/client/ui/library/icons/material/KeyboardArrowRight.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar-month.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar.tsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-date-time-range.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/foundation/resources/client/ui/library/utils/hooks/is-tablet-media-query.ts","../../../common/foundation/resources/client/ui/library/forms/toggle/switch.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-number.tsx","../../../common/foundation/resources/client/ui/library/icons/material/ArrowBack.tsx"],"sourcesContent":["import {FocusScope} from '@react-aria/focus';\r\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface InputProps {\r\n  className?: string;\r\n  children: ReactNode;\r\n  autoFocus?: boolean;\r\n  disabled?: boolean;\r\n  style?: CSSProperties;\r\n  inputProps?: ComponentPropsWithoutRef<'div'>;\r\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\r\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\r\n}\r\n\r\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\r\n  (props, ref) => {\r\n    const {\r\n      children,\r\n      inputProps,\r\n      wrapperProps,\r\n      className,\r\n      autoFocus,\r\n      style,\r\n      onClick,\r\n    } = props;\r\n\r\n    return (\r\n      <div {...wrapperProps} onClick={onClick}>\r\n        <div\r\n          {...inputProps}\r\n          role=\"group\"\r\n          className={clsx(\r\n            className,\r\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\r\n          )}\r\n          ref={ref}\r\n          style={style}\r\n        >\r\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\r\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\r\n}\r\n","import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\r\n  return date.set({\r\n    hour: 24 - 1,\r\n    minute: 60 - 1,\r\n    second: 60 - 1,\r\n    millisecond: 1000 - 1,\r\n  });\r\n}\r\n","import {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\r\nimport {getLocalTimeZone} from '@internationalized/date';\r\n\r\nexport function getUserTimezone(): string {\r\n  const defaultTimezone = getBootstrapData()?.settings.dates.default_timezone;\r\n  const preferredTimezone =\r\n    getBootstrapData()?.user?.timezone || defaultTimezone || 'auto';\r\n\r\n  if (!preferredTimezone || preferredTimezone === 'auto') {\r\n    return getLocalTimeZone();\r\n  }\r\n  return preferredTimezone;\r\n}\r\n","import {useMemo} from 'react';\r\nimport {now} from '@internationalized/date';\r\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\r\nimport {getUserTimezone} from '@ui/i18n/get-user-timezone';\r\n\r\nexport function useCurrentDateTime() {\r\n  const timezone = useUserTimezone();\r\n  return useMemo(() => {\r\n    try {\r\n      return now(timezone);\r\n    } catch (e) {\r\n      return now('UTC');\r\n    }\r\n  }, [timezone]);\r\n}\r\n\r\nexport function getCurrentDateTime() {\r\n  const timezone = getUserTimezone();\r\n  try {\r\n    return now(timezone);\r\n  } catch (e) {\r\n    return now('UTC');\r\n  }\r\n}\r\n","import {DateRangeValue} from '../date-range-value';\r\nimport {message} from '@ui/i18n/message';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\nimport {\r\n  endOfMonth,\r\n  endOfWeek,\r\n  endOfYear,\r\n  startOfMonth,\r\n  startOfWeek,\r\n  startOfYear,\r\n} from '@internationalized/date';\r\nimport {startOfDay} from '@ui/utils/date/start-of-day';\r\nimport {endOfDay} from '@ui/utils/date/end-of-day';\r\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\r\nimport {getCurrentDateTime} from '@ui/i18n/use-current-date-time';\r\n\r\nconst Now = startOfDay(getCurrentDateTime());\r\nconst locale = getBootstrapData()?.i18n?.language || 'en';\r\n\r\nexport interface DateRangePreset {\r\n  key: number;\r\n  label: MessageDescriptor;\r\n  getRangeValue: () => DateRangeValue;\r\n}\r\n\r\nexport const DateRangePresets: DateRangePreset[] = [\r\n  {\r\n    key: 0,\r\n    label: message('Today'),\r\n    getRangeValue: () => ({\r\n      preset: 0,\r\n      start: Now,\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 1,\r\n    label: message('Yesterday'),\r\n    getRangeValue: () => ({\r\n      preset: 1,\r\n      start: Now.subtract({days: 1}),\r\n      end: endOfDay(Now).subtract({days: 1}),\r\n    }),\r\n  },\r\n  {\r\n    key: 2,\r\n    label: message('This week'),\r\n    getRangeValue: () => ({\r\n      preset: 2,\r\n      start: startOfWeek(Now, locale),\r\n      end: endOfWeek(endOfDay(Now), locale),\r\n    }),\r\n  },\r\n  {\r\n    key: 3,\r\n    label: message('Last week'),\r\n    getRangeValue: () => {\r\n      const start = startOfWeek(Now, locale).subtract({days: 7});\r\n      return {\r\n        preset: 3,\r\n        start,\r\n        end: start.add({days: 6}),\r\n      };\r\n    },\r\n  },\r\n  {\r\n    key: 4,\r\n    label: message('Last 7 days'),\r\n    getRangeValue: () => ({\r\n      preset: 4,\r\n      start: Now.subtract({days: 7}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 6,\r\n    label: message('Last 30 days'),\r\n    getRangeValue: () => ({\r\n      preset: 6,\r\n      start: Now.subtract({days: 30}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 7,\r\n    label: message('Last 3 months'),\r\n    getRangeValue: () => ({\r\n      preset: 7,\r\n      start: Now.subtract({months: 3}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 8,\r\n    label: message('Last 12 months'),\r\n    getRangeValue: () => ({\r\n      preset: 8,\r\n      start: Now.subtract({months: 12}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 9,\r\n    label: message('This month'),\r\n    getRangeValue: () => ({\r\n      preset: 9,\r\n      start: startOfMonth(Now),\r\n      end: endOfMonth(endOfDay(Now)),\r\n    }),\r\n  },\r\n  {\r\n    key: 10,\r\n    label: message('This year'),\r\n    getRangeValue: () => ({\r\n      preset: 10,\r\n      start: startOfYear(Now),\r\n      end: endOfYear(endOfDay(Now)),\r\n    }),\r\n  },\r\n  {\r\n    key: 11,\r\n    label: message('Last year'),\r\n    getRangeValue: () => ({\r\n      preset: 11,\r\n      start: startOfYear(Now).subtract({years: 1}),\r\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\r\n    }),\r\n  },\r\n];\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DateRangeIcon = createSvgIcon(\r\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\r\n, 'DateRangeOutlined');\r\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createFocusManager} from '@react-aria/focus';\r\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\r\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\r\nimport {Field, FieldProps} from '../../field';\r\nimport {Input} from '../../input';\r\nimport {useField} from '../../use-field';\r\n\r\nexport interface DatePickerFieldProps\r\n  extends Omit<FieldProps, 'fieldClassNames'> {\r\n  inputRef?: Ref<HTMLDivElement>;\r\n  onBlur?: FocusEventHandler;\r\n  showCalendarFooter?: boolean;\r\n}\r\nexport const DatePickerField = React.forwardRef<\r\n  HTMLDivElement,\r\n  DatePickerFieldProps\r\n>(({inputRef, wrapperProps, children, onBlur, ...other}, ref) => {\r\n  const fieldClassNames = getInputFieldClassNames(other);\r\n  const objRef = useObjectRef(ref);\r\n\r\n  const {fieldProps, inputProps} = useField({\r\n    ...other,\r\n    focusRef: objRef,\r\n    labelElementType: 'span',\r\n  });\r\n\r\n  fieldClassNames.wrapper = clsx(\r\n    fieldClassNames.wrapper,\r\n    other.disabled && 'pointer-events-none',\r\n  );\r\n\r\n  return (\r\n    <Field\r\n      wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\r\n        wrapperProps!,\r\n        {\r\n          onBlur: e => {\r\n            if (!objRef.current?.contains(e.relatedTarget)) {\r\n              onBlur?.(e);\r\n            }\r\n          },\r\n          onClick: () => {\r\n            // focus first segment when clicking on label or somewhere else in the field, but no directly on segment\r\n            const focusManager = createFocusManager(objRef);\r\n            focusManager?.focusFirst();\r\n          },\r\n        },\r\n      )}\r\n      fieldClassNames={fieldClassNames}\r\n      ref={objRef}\r\n      {...fieldProps}\r\n    >\r\n      <Input\r\n        inputProps={inputProps}\r\n        className={clsx(fieldClassNames.input, 'gap-10')}\r\n        ref={inputRef}\r\n      >\r\n        {children}\r\n      </Input>\r\n    </Field>\r\n  );\r\n});\r\n","import {CalendarDate, DateValue} from '@internationalized/date';\r\n\r\nexport function getDefaultGranularity(date: DateValue) {\r\n  if (date instanceof CalendarDate) {\r\n    return 'day';\r\n  }\r\n  return 'minute';\r\n}\r\n\r\nexport function dateIsInvalid(\r\n  date: CalendarDate,\r\n  min?: DateValue,\r\n  max?: DateValue\r\n) {\r\n  return (\r\n    (min != null && date.compare(min) < 0) ||\r\n    (max != null && date.compare(max) > 0)\r\n  );\r\n}\r\n","import {\r\n  CalendarDate,\r\n  CalendarDateTime,\r\n  Disambiguation,\r\n  toZoned,\r\n  ZonedDateTime,\r\n} from '@internationalized/date';\r\n\r\nexport function toSafeZoned(\r\n  date: CalendarDate | CalendarDateTime | ZonedDateTime,\r\n  timeZone: string,\r\n  disambiguation?: Disambiguation,\r\n): ZonedDateTime {\r\n  try {\r\n    return toZoned(date, timeZone, disambiguation);\r\n  } catch (e) {\r\n    return toZoned(date, 'UTC', disambiguation);\r\n  }\r\n}\r\n","import {useState} from 'react';\r\nimport {DateValue, ZonedDateTime} from '@internationalized/date';\r\nimport {getDefaultGranularity} from './utils';\r\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\r\nimport {DateRangeValue} from './date-range-picker/date-range-value';\r\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\r\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\r\n\r\nexport function useBaseDatePickerState(\r\n  selectedDate: DateValue,\r\n  props:\r\n    | DatePickerValueProps<ZonedDateTime>\r\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\r\n) {\r\n  const timezone = useUserTimezone();\r\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\r\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\r\n\r\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\r\n  const min = props.min ? toSafeZoned(props.min, timezone) : undefined;\r\n  const max = props.max ? toSafeZoned(props.max, timezone) : undefined;\r\n\r\n  return {\r\n    timezone,\r\n    granularity,\r\n    min,\r\n    max,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    closeDialogOnSelection,\r\n  };\r\n}\r\n","import {useControlledState} from '@react-stately/utils';\r\nimport {HTMLAttributes, useCallback, useState} from 'react';\r\nimport {\r\n  CalendarDate,\r\n  DateValue,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  maxDate,\r\n  minDate,\r\n  startOfMonth,\r\n  toCalendarDate,\r\n  ZonedDateTime,\r\n} from '@internationalized/date';\r\nimport {\r\n  BaseDatePickerState,\r\n  DatePickerValueProps,\r\n} from '../date-picker/use-date-picker-state';\r\nimport {DateRangeValue} from './date-range-value';\r\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\r\nimport {startOfDay} from '@ui/utils/date/start-of-day';\r\nimport {endOfDay} from '@ui/utils/date/end-of-day';\r\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\r\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\r\n\r\nexport interface IsPlaceholderValue {\r\n  start: boolean;\r\n  end: boolean;\r\n}\r\n\r\nexport type DateRangePickerState = BaseDatePickerState<\r\n  DateRangeValue,\r\n  IsPlaceholderValue\r\n>;\r\n\r\nexport function useDateRangePickerState(\r\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\r\n): DateRangePickerState {\r\n  const now = useCurrentDateTime();\r\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\r\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\r\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\r\n  });\r\n\r\n  // if user clears the date, we will want to still keep an\r\n  // instance internally, but return null via \"onChange\" callback\r\n  const setStateValue = props.onChange;\r\n  const [internalValue, setInternalValue] = useControlledState(\r\n    props.value ? completeRange(props.value, now) : undefined,\r\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\r\n    value => {\r\n      setIsPlaceholder({start: false, end: false});\r\n      setStateValue?.(value);\r\n    },\r\n  );\r\n\r\n  const {\r\n    min,\r\n    max,\r\n    granularity,\r\n    timezone,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    closeDialogOnSelection,\r\n  } = useBaseDatePickerState(internalValue.start, props);\r\n\r\n  const clear = useCallback(() => {\r\n    setIsPlaceholder({start: true, end: true});\r\n    setInternalValue(completeRange(null, now));\r\n    setStateValue?.(null);\r\n    setCalendarIsOpen(false);\r\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\r\n\r\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\r\n  const [isHighlighting, setIsHighlighting] = useState(false);\r\n  const [highlightedRange, setHighlightedRange] =\r\n    useState<DateRangeValue>(internalValue);\r\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\r\n    return rangeToCalendarDates(internalValue, max);\r\n  });\r\n\r\n  const constrainRange = useCallback(\r\n    (range: DateRangeValue): DateRangeValue => {\r\n      let start = range.start;\r\n      let end = range.end;\r\n\r\n      // make sure start date is after min date and before max date/range end\r\n      if (min) {\r\n        start = maxDate(start, min);\r\n      }\r\n      const startMax = max ? minDate(max, end) : end;\r\n      start = minDate(start, startMax);\r\n\r\n      // make sure end date is after min date/range start and before max date\r\n      const endMin = min ? maxDate(min, start) : start;\r\n      end = maxDate(end, endMin);\r\n\r\n      if (max) {\r\n        end = minDate(end, max);\r\n      }\r\n\r\n      return {\r\n        start: toSafeZoned(start, timezone),\r\n        end: toSafeZoned(end, timezone),\r\n      };\r\n    },\r\n    [min, max, timezone],\r\n  );\r\n\r\n  const setSelectedValue = useCallback(\r\n    (newRange: DateRangeValue) => {\r\n      const value = {\r\n        ...constrainRange(newRange),\r\n        preset: newRange.preset,\r\n      };\r\n      setInternalValue(value);\r\n      setHighlightedRange(value);\r\n      setCalendarDates(rangeToCalendarDates(value, max));\r\n      setIsPlaceholder({start: false, end: false});\r\n    },\r\n    [setInternalValue, constrainRange, max],\r\n  );\r\n\r\n  const dayIsActive = useCallback(\r\n    (day: CalendarDate) => {\r\n      return (\r\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\r\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\r\n      );\r\n    },\r\n    [highlightedRange, isPlaceholder],\r\n  );\r\n\r\n  const dayIsHighlighted = useCallback(\r\n    (day: CalendarDate) => {\r\n      return (\r\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\r\n        day.compare(highlightedRange.start) >= 0 &&\r\n        day.compare(highlightedRange.end) <= 0\r\n      );\r\n    },\r\n    [highlightedRange, isPlaceholder, isHighlighting],\r\n  );\r\n\r\n  const dayIsRangeStart = useCallback(\r\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\r\n    [highlightedRange],\r\n  );\r\n\r\n  const dayIsRangeEnd = useCallback(\r\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\r\n    [highlightedRange],\r\n  );\r\n\r\n  const getCellProps = useCallback(\r\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\r\n      return {\r\n        onPointerEnter: () => {\r\n          if (isHighlighting && isSameMonth) {\r\n            setHighlightedRange(\r\n              makeRange({start: anchorDate!, end: date, timezone}),\r\n            );\r\n          }\r\n        },\r\n        onClick: () => {\r\n          if (!isHighlighting) {\r\n            setIsHighlighting(true);\r\n            setAnchorDate(date);\r\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\r\n          } else {\r\n            const finalRange = makeRange({\r\n              start: anchorDate!,\r\n              end: date,\r\n              timezone,\r\n            });\r\n            // cast to start and end of day after making range, because \"makeRange\"\r\n            // will flip start and end dates, if they are out of order\r\n            finalRange.start = startOfDay(finalRange.start);\r\n            finalRange.end = endOfDay(finalRange.end);\r\n            setIsHighlighting(false);\r\n            setAnchorDate(null);\r\n            setSelectedValue?.(finalRange);\r\n            if (closeDialogOnSelection) {\r\n              setCalendarIsOpen?.(false);\r\n            }\r\n          }\r\n        },\r\n      };\r\n    },\r\n    [\r\n      anchorDate,\r\n      isHighlighting,\r\n      setSelectedValue,\r\n      setCalendarIsOpen,\r\n      closeDialogOnSelection,\r\n      timezone,\r\n    ],\r\n  );\r\n\r\n  return {\r\n    selectedValue: internalValue,\r\n    setSelectedValue,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    dayIsActive,\r\n    dayIsHighlighted,\r\n    dayIsRangeStart,\r\n    dayIsRangeEnd,\r\n    getCellProps,\r\n    calendarDates,\r\n    setIsPlaceholder,\r\n    isPlaceholder,\r\n    clear,\r\n    setCalendarDates,\r\n    min,\r\n    max,\r\n    granularity,\r\n    timezone,\r\n    closeDialogOnSelection,\r\n  };\r\n}\r\n\r\nfunction rangeToCalendarDates(\r\n  range: DateRangeValue,\r\n  max?: DateValue,\r\n): CalendarDate[] {\r\n  let start = toCalendarDate(startOfMonth(range.start));\r\n  let end = toCalendarDate(endOfMonth(range.end));\r\n\r\n  // make sure we don't show the same month twice\r\n  if (isSameMonth(start, end)) {\r\n    end = endOfMonth(end.add({months: 1}));\r\n  }\r\n\r\n  // if next month is disabled, show previous instead\r\n  if (max && end.compare(max) > 0) {\r\n    end = start;\r\n    start = startOfMonth(start.subtract({months: 1}));\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ninterface MakeRangeProps {\r\n  start: DateValue;\r\n  end: DateValue;\r\n  timezone: string;\r\n}\r\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\r\n  const start = toSafeZoned(props.start, props.timezone);\r\n  const end = toSafeZoned(props.end, props.timezone);\r\n  if (start.compare(end) > 0) {\r\n    return {start: end, end: start};\r\n  }\r\n  return {start, end};\r\n}\r\n\r\nfunction completeRange(\r\n  range: Partial<DateRangeValue> | null | undefined,\r\n  now: ZonedDateTime,\r\n): DateRangeValue {\r\n  if (range?.start && range?.end) {\r\n    return range as DateRangeValue;\r\n  } else if (!range?.start && range?.end) {\r\n    range.start = range.end.subtract({months: 1});\r\n    return range as DateRangeValue;\r\n  } else if (!range?.end && range?.start) {\r\n    range.end = range.start.add({months: 1});\r\n    return range as DateRangeValue;\r\n  }\r\n  return {start: now, end: now.add({months: 1})};\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ArrowRightAltIcon = createSvgIcon(\r\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\r\n, 'ArrowRightAltOutlined');\r\n","import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function adjustSegment(\r\n  value: ZonedDateTime,\r\n  part: string,\r\n  amount: number,\r\n  options: Intl.ResolvedDateTimeFormatOptions\r\n) {\r\n  switch (part) {\r\n    case 'era':\r\n    case 'year':\r\n    case 'month':\r\n    case 'day':\r\n      return value.cycle(part, amount, {round: part === 'year'});\r\n  }\r\n\r\n  if ('hour' in value) {\r\n    switch (part) {\r\n      case 'dayPeriod': {\r\n        const hours = value.hour;\r\n        const isPM = hours >= 12;\r\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\r\n      }\r\n      case 'hour':\r\n      case 'minute':\r\n      case 'second':\r\n        return value.cycle(part, amount, {\r\n          round: part !== 'hour',\r\n          hourCycle: options.hour12 ? 12 : 24,\r\n        });\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n","import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function setSegment(\r\n  value: ZonedDateTime,\r\n  part: string,\r\n  segmentValue: number,\r\n  options: Intl.ResolvedDateTimeFormatOptions\r\n) {\r\n  switch (part) {\r\n    case 'day':\r\n    case 'month':\r\n    case 'year':\r\n      return value.set({[part]: segmentValue});\r\n  }\r\n\r\n  if ('hour' in value) {\r\n    switch (part) {\r\n      case 'dayPeriod': {\r\n        const hours = value.hour;\r\n        const wasPM = hours >= 12;\r\n        const isPM = segmentValue >= 12;\r\n        if (isPM === wasPM) {\r\n          return value;\r\n        }\r\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\r\n      }\r\n      case 'hour':\r\n        // In 12 hour time, ensure that AM/PM does not change\r\n        if (options.hour12) {\r\n          const hours = value.hour;\r\n          const wasPM = hours >= 12;\r\n          if (!wasPM && segmentValue === 12) {\r\n            segmentValue = 0;\r\n          }\r\n          if (wasPM && segmentValue < 12) {\r\n            segmentValue += 12;\r\n          }\r\n        }\r\n      // fallthrough\r\n      case 'minute':\r\n      case 'second':\r\n        return value.set({[part]: segmentValue});\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n","export const PAGE_STEP = {\r\n  year: 5,\r\n  month: 2,\r\n  day: 7,\r\n  hour: 2,\r\n  minute: 15,\r\n  second: 15,\r\n  dayPeriod: 1,\r\n};\r\n","import {useFocusManager} from '@react-aria/focus';\r\nimport React, {\r\n  ComponentPropsWithoutRef,\r\n  HTMLAttributes,\r\n  KeyboardEventHandler,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\nimport {NumberParser} from '@internationalized/number';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {today, ZonedDateTime} from '@internationalized/date';\r\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\r\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {adjustSegment} from './utils/adjust-segment';\r\nimport {setSegment} from './utils/set-segment';\r\nimport {PAGE_STEP} from './utils/page-step';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\n\r\nexport interface EditableSegment {\r\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\r\n  text: string;\r\n  value: number;\r\n  minValue: number;\r\n  maxValue: number;\r\n  minLength: number;\r\n}\r\n\r\ninterface DatePickerSegmentProps {\r\n  segment: EditableSegment;\r\n  domProps?: ComponentPropsWithoutRef<'div'>;\r\n  state: DatePickerState | DateRangePickerState;\r\n  value: ZonedDateTime;\r\n  onChange: (newValue: ZonedDateTime) => void;\r\n  isPlaceholder?: boolean;\r\n}\r\nexport function EditableDateSegment({\r\n  segment,\r\n  domProps,\r\n  value,\r\n  onChange,\r\n  isPlaceholder,\r\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\r\n}: DatePickerSegmentProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const enteredKeys = useRef('');\r\n  const {localeCode} = useSelectedLocale();\r\n  const focusManager = useFocusManager();\r\n  const formatter = useDateFormatter({timeZone: timezone});\r\n  const parser = useMemo(\r\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\r\n    [localeCode],\r\n  );\r\n\r\n  const setSegmentValue = (newValue: number) => {\r\n    onChange(\r\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\r\n    );\r\n  };\r\n\r\n  const adjustSegmentValue = (amount: number) => {\r\n    onChange(\r\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\r\n    );\r\n  };\r\n\r\n  const backspace = () => {\r\n    if (parser.isValidPartialNumber(segment.text)) {\r\n      const newValue = segment.text.slice(0, -1);\r\n      const parsed = parser.parse(newValue);\r\n      if (newValue.length === 0 || parsed === 0) {\r\n        const now = today(timezone);\r\n        if (segment.type in now) {\r\n          // @ts-ignore\r\n          setSegmentValue(now[segment.type]);\r\n        }\r\n      } else {\r\n        setSegmentValue(parsed);\r\n      }\r\n      enteredKeys.current = newValue;\r\n    } else if (segment.type === 'dayPeriod') {\r\n      adjustSegmentValue(-1);\r\n    }\r\n  };\r\n\r\n  const onKeyDown: KeyboardEventHandler = e => {\r\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\r\n      return;\r\n    }\r\n\r\n    // Navigation between date segments and deletion\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        focusManager?.focusPrevious();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'Enter':\r\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\r\n        setCalendarIsOpen(!calendarIsOpen);\r\n        break;\r\n      case 'Tab':\r\n        break;\r\n      case 'Backspace':\r\n      case 'Delete': {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        backspace();\r\n        break;\r\n      }\r\n\r\n      // Spinbutton incrementing/decrementing\r\n      case 'ArrowUp':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(1);\r\n        break;\r\n      case 'ArrowDown':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(-1);\r\n        break;\r\n      case 'PageUp':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\r\n        break;\r\n      case 'PageDown':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\r\n        break;\r\n      case 'Home':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        setSegmentValue(segment.maxValue);\r\n        break;\r\n      case 'End':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        setSegmentValue(segment.minValue);\r\n        break;\r\n    }\r\n\r\n    onInput(e.key);\r\n  };\r\n\r\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\r\n  const am = useMemo(() => {\r\n    const amDate = new Date();\r\n    amDate.setHours(0);\r\n    return amPmFormatter\r\n      .formatToParts(amDate)\r\n      .find(part => part.type === 'dayPeriod')!.value;\r\n  }, [amPmFormatter]);\r\n  const pm = useMemo(() => {\r\n    const pmDate = new Date();\r\n    pmDate.setHours(12);\r\n    return amPmFormatter\r\n      .formatToParts(pmDate)\r\n      .find(part => part.type === 'dayPeriod')!.value;\r\n  }, [amPmFormatter]);\r\n\r\n  // Update date values on user keyboard input\r\n  const onInput = (key: string) => {\r\n    const newValue = enteredKeys.current + key;\r\n\r\n    switch (segment.type) {\r\n      case 'dayPeriod':\r\n        if (am.toLowerCase().startsWith(key)) {\r\n          setSegmentValue(0);\r\n        } else if (pm.toLowerCase().startsWith(key)) {\r\n          setSegmentValue(12);\r\n        } else {\r\n          break;\r\n        }\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'day':\r\n      case 'hour':\r\n      case 'minute':\r\n      case 'second':\r\n      case 'month':\r\n      case 'year': {\r\n        if (!parser.isValidPartialNumber(newValue)) {\r\n          return;\r\n        }\r\n\r\n        let numberValue = parser.parse(newValue);\r\n        let segmentValue = numberValue;\r\n        let allowsZero = segment.minValue === 0;\r\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\r\n          switch (formatter.resolvedOptions().hourCycle) {\r\n            case 'h11':\r\n              if (numberValue > 11) {\r\n                segmentValue = parser.parse(key);\r\n              }\r\n              break;\r\n            case 'h12':\r\n              allowsZero = false;\r\n              if (numberValue > 12) {\r\n                segmentValue = parser.parse(key);\r\n              }\r\n              break;\r\n          }\r\n\r\n          if (segment.value >= 12 && numberValue > 1) {\r\n            numberValue += 12;\r\n          }\r\n        } else if (numberValue > segment.maxValue) {\r\n          segmentValue = parser.parse(key);\r\n        }\r\n\r\n        if (Number.isNaN(numberValue)) {\r\n          return;\r\n        }\r\n\r\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\r\n        if (shouldSetValue) {\r\n          setSegmentValue(segmentValue);\r\n        }\r\n\r\n        if (\r\n          Number(`${numberValue}0`) > segment.maxValue ||\r\n          newValue.length >= String(segment.maxValue).length\r\n        ) {\r\n          enteredKeys.current = '';\r\n          if (shouldSetValue) {\r\n            focusManager?.focusNext();\r\n          }\r\n        } else {\r\n          enteredKeys.current = newValue;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\r\n    ? {}\r\n    : {\r\n        'aria-label': segment.type,\r\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\r\n        'aria-valuemin': segment.minValue,\r\n        'aria-valuemax': segment.maxValue,\r\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\r\n        tabIndex: 0,\r\n        onKeyDown,\r\n      };\r\n\r\n  return (\r\n    <div\r\n      {...mergeProps(domProps!, {\r\n        ...spinButtonProps,\r\n        onFocus: e => {\r\n          enteredKeys.current = '';\r\n          e.target.scrollIntoView({block: 'nearest'});\r\n        },\r\n        onClick: e => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        },\r\n      } as HTMLAttributes<HTMLDivElement>)}\r\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\r\n    >\r\n      {segment.text.padStart(segment.minLength, '0')}\r\n    </div>\r\n  );\r\n}\r\n","import {useFocusManager} from '@react-aria/focus';\r\nimport {ComponentPropsWithoutRef} from 'react';\r\n\r\nexport interface LiteralSegment {\r\n  type: 'literal';\r\n  minLength: 1;\r\n  text: string;\r\n}\r\n\r\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\r\n  segment: LiteralSegment;\r\n  domProps?: ComponentPropsWithoutRef<'div'>;\r\n}\r\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\r\n  const focusManager = useFocusManager();\r\n  return (\r\n    <div\r\n      {...domProps}\r\n      onPointerDown={e => {\r\n        if (e.pointerType === 'mouse') {\r\n          e.preventDefault();\r\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\r\n          if (!res) {\r\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\r\n          }\r\n        }\r\n      }}\r\n      aria-hidden\r\n      className=\"min-w-4 cursor-default select-none\"\r\n    >\r\n      {segment.text}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  DateValue,\r\n  getMinimumDayInMonth,\r\n  getMinimumMonthInYear,\r\n} from '@internationalized/date';\r\n\r\nexport function getSegmentLimits(\r\n  date: DateValue,\r\n  type: string,\r\n  options: Intl.ResolvedDateTimeFormatOptions\r\n) {\r\n  switch (type) {\r\n    case 'year':\r\n      return {\r\n        value: date.year,\r\n        placeholder: 'yyyy',\r\n        minValue: 1,\r\n        maxValue: date.calendar.getYearsInEra(date),\r\n      };\r\n    case 'month':\r\n      return {\r\n        value: date.month,\r\n        placeholder: 'mm',\r\n        minValue: getMinimumMonthInYear(date),\r\n        maxValue: date.calendar.getMonthsInYear(date),\r\n      };\r\n    case 'day':\r\n      return {\r\n        value: date.day,\r\n        minValue: getMinimumDayInMonth(date),\r\n        maxValue: date.calendar.getDaysInMonth(date),\r\n        placeholder: 'dd',\r\n      };\r\n  }\r\n\r\n  if ('hour' in date) {\r\n    switch (type) {\r\n      case 'dayPeriod':\r\n        return {\r\n          value: date.hour >= 12 ? 12 : 0,\r\n          minValue: 0,\r\n          maxValue: 12,\r\n          placeholder: '--',\r\n        };\r\n      case 'hour':\r\n        if (options.hour12) {\r\n          const isPM = date.hour >= 12;\r\n          return {\r\n            value: date.hour,\r\n            minValue: isPM ? 12 : 0,\r\n            maxValue: isPM ? 23 : 11,\r\n            placeholder: '--',\r\n          };\r\n        }\r\n\r\n        return {\r\n          value: date.hour,\r\n          minValue: 0,\r\n          maxValue: 23,\r\n          placeholder: '--',\r\n        };\r\n      case 'minute':\r\n        return {\r\n          value: date.minute,\r\n          minValue: 0,\r\n          maxValue: 59,\r\n          placeholder: '--',\r\n        };\r\n    }\r\n  }\r\n\r\n  return {};\r\n}\r\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\r\nimport {ZonedDateTime} from '@internationalized/date';\r\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\r\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\r\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {getSegmentLimits} from './utils/get-segment-limits';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\ninterface DateSegmentListProps {\r\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\r\n  state: DatePickerState | DateRangePickerState;\r\n  value: ZonedDateTime;\r\n  onChange: (newValue: ZonedDateTime) => void;\r\n  isPlaceholder?: boolean;\r\n}\r\nexport function DateSegmentList({\r\n  segmentProps,\r\n  state,\r\n  value,\r\n  onChange,\r\n  isPlaceholder,\r\n}: DateSegmentListProps) {\r\n  const {granularity} = state;\r\n  const options = useMemo(() => {\r\n    const memoOptions: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n    };\r\n    if (granularity === 'minute') {\r\n      memoOptions.hour = 'numeric';\r\n      memoOptions.minute = 'numeric';\r\n    }\r\n    return memoOptions;\r\n  }, [granularity]);\r\n\r\n  const formatter = useDateFormatter(options);\r\n\r\n  const dateValue = useMemo(() => value.toDate(), [value]);\r\n  const segments = useMemo(() => {\r\n    return formatter.formatToParts(dateValue).map(segment => {\r\n      const limits = getSegmentLimits(\r\n        value,\r\n        segment.type,\r\n        formatter.resolvedOptions(),\r\n      );\r\n      const textValue =\r\n        isPlaceholder && segment.type !== 'literal'\r\n          ? limits.placeholder\r\n          : segment.value;\r\n      return {\r\n        type: segment.type,\r\n        text: segment.value === ', ' ? ' ' : textValue,\r\n        ...limits,\r\n        minLength:\r\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\r\n      } as LiteralSegment | EditableSegment;\r\n    });\r\n  }, [dateValue, formatter, isPlaceholder, value]);\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      {segments.map((segment, index) => {\r\n        if (segment.type === 'literal') {\r\n          return (\r\n            <LiteralDateSegment\r\n              domProps={segmentProps}\r\n              key={index}\r\n              segment={segment}\r\n            />\r\n          );\r\n        }\r\n        return (\r\n          <EditableDateSegment\r\n            isPlaceholder={isPlaceholder}\r\n            domProps={segmentProps}\r\n            state={state}\r\n            value={value}\r\n            onChange={onChange}\r\n            segment={segment}\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const KeyboardArrowRightIcon = createSvgIcon(\r\n  <path d=\"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\r\n, 'KeyboardArrowRightOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n  CalendarDate,\r\n  DateValue,\r\n  getDayOfWeek,\r\n  isSameMonth,\r\n  isToday,\r\n} from '@internationalized/date';\r\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {dateIsInvalid} from '../utils';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\ninterface CalendarCellProps {\r\n  date: CalendarDate;\r\n  currentMonth: DateValue;\r\n  state: DatePickerState | DateRangePickerState;\r\n}\r\nexport function CalendarCell({\r\n  date,\r\n  currentMonth,\r\n  state: {\r\n    dayIsActive,\r\n    dayIsHighlighted,\r\n    dayIsRangeStart,\r\n    dayIsRangeEnd,\r\n    getCellProps,\r\n    timezone,\r\n    min,\r\n    max,\r\n  },\r\n}: CalendarCellProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const dayOfWeek = getDayOfWeek(date, localeCode);\r\n  const isActive = dayIsActive(date);\r\n  const isHighlighted = dayIsHighlighted(date);\r\n  const isRangeStart = dayIsRangeStart(date);\r\n  const isRangeEnd = dayIsRangeEnd(date);\r\n  const dayIsToday = isToday(date, timezone);\r\n  const sameMonth = isSameMonth(date, currentMonth);\r\n  const isDisabled = dateIsInvalid(date, min, max);\r\n\r\n  return (\r\n    <div\r\n      role=\"button\"\r\n      aria-disabled={isDisabled}\r\n      className={clsx(\r\n        'relative isolate h-40 w-40 flex-shrink-0 text-sm',\r\n        isDisabled && 'pointer-events-none text-disabled',\r\n        !sameMonth && 'pointer-events-none invisible',\r\n      )}\r\n      {...getCellProps(date, sameMonth)}\r\n    >\r\n      <span\r\n        className={clsx(\r\n          'absolute inset-0 z-10 flex h-full w-full cursor-pointer select-none items-center justify-center rounded-full',\r\n          !isActive && !dayIsToday && 'hover:bg-hover',\r\n          isActive && 'bg-primary font-semibold text-on-primary',\r\n          dayIsToday && !isActive && 'bg-chip',\r\n        )}\r\n      >\r\n        {date.day}\r\n      </span>\r\n      {isHighlighted && sameMonth && (\r\n        <span\r\n          className={clsx(\r\n            'absolute inset-0 h-full w-full bg-primary/focus',\r\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\r\n              'rounded-l-full',\r\n            (isRangeEnd ||\r\n              dayOfWeek === 6 ||\r\n              date.day ===\r\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\r\n              'rounded-r-full',\r\n          )}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {m} from 'framer-motion';\r\nimport {\r\n  CalendarDate,\r\n  endOfMonth,\r\n  getWeeksInMonth,\r\n  startOfMonth,\r\n  startOfWeek,\r\n} from '@internationalized/date';\r\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\r\nimport {IconButton} from '@ui/buttons/icon-button';\r\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\r\nimport {CalendarCell} from './calendar-cell';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\r\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\r\nimport {dateIsInvalid} from '../utils';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\nexport interface CalendarMonthProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  startDate: CalendarDate;\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n}\r\nexport function CalendarMonth({\r\n  startDate,\r\n  state,\r\n  isFirst,\r\n  isLast,\r\n}: CalendarMonthProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\r\n  const monthStart = startOfWeek(startDate, localeCode);\r\n\r\n  return (\r\n    <div className=\"w-280 flex-shrink-0\">\r\n      <CalendarMonthHeader\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        state={state}\r\n        currentMonth={startDate}\r\n      />\r\n      <div className=\"block\" role=\"grid\">\r\n        <WeekdayHeader state={state} startDate={startDate} />\r\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\r\n          <m.div className=\"mb-6 flex\" key={weekIndex}>\r\n            {[...new Array(7).keys()].map(dayIndex => (\r\n              <CalendarCell\r\n                key={dayIndex}\r\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\r\n                currentMonth={startDate}\r\n                state={state}\r\n              />\r\n            ))}\r\n          </m.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CalendarMonthHeaderProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  currentMonth: CalendarDate;\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n}\r\nfunction CalendarMonthHeader({\r\n  currentMonth,\r\n  isFirst,\r\n  isLast,\r\n  state: {calendarDates, setCalendarDates, timezone, min, max},\r\n}: CalendarMonthHeaderProps) {\r\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\r\n    const count = calendarDates.length;\r\n    let newDates: CalendarDate[];\r\n    if (direction === 'forward') {\r\n      newDates = calendarDates.map(date =>\r\n        endOfMonth(date.add({months: count})),\r\n      );\r\n    } else {\r\n      newDates = calendarDates.map(date =>\r\n        endOfMonth(date.subtract({months: count})),\r\n      );\r\n    }\r\n    setCalendarDates(newDates);\r\n  };\r\n\r\n  const monthFormatter = useDateFormatter({\r\n    month: 'long',\r\n    year: 'numeric',\r\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\r\n    calendar: currentMonth.calendar.identifier,\r\n  });\r\n\r\n  const isBackwardDisabled = dateIsInvalid(\r\n    currentMonth.subtract({days: 1}),\r\n    min,\r\n    max,\r\n  );\r\n  const isForwardDisabled = dateIsInvalid(\r\n    startOfMonth(currentMonth.add({months: 1})),\r\n    min,\r\n    max,\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between gap-10\">\r\n      <IconButton\r\n        size=\"md\"\r\n        className={clsx('text-muted', !isFirst && 'invisible')}\r\n        disabled={!isFirst || isBackwardDisabled}\r\n        aria-hidden={!isFirst}\r\n        onClick={() => {\r\n          shiftCalendars('backward');\r\n        }}\r\n      >\r\n        <KeyboardArrowLeftIcon />\r\n      </IconButton>\r\n      <div className=\"select-none text-sm font-semibold\">\r\n        {monthFormatter.format(currentMonth.toDate(timezone))}\r\n      </div>\r\n      <IconButton\r\n        size=\"md\"\r\n        className={clsx('text-muted', !isLast && 'invisible')}\r\n        disabled={!isLast || isForwardDisabled}\r\n        aria-hidden={!isLast}\r\n        onClick={() => {\r\n          shiftCalendars('forward');\r\n        }}\r\n      >\r\n        <KeyboardArrowRightIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface WeekdayHeaderProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  startDate: CalendarDate;\r\n}\r\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const dayFormatter = useDateFormatter({weekday: 'short'});\r\n\r\n  const monthStart = startOfWeek(startDate, localeCode);\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      {[...new Array(7).keys()].map(index => {\r\n        const date = monthStart.add({days: index});\r\n        const dateDay = date.toDate(timezone);\r\n        const weekday = dayFormatter.format(dateDay);\r\n        return (\r\n          <div\r\n            className=\"relative h-40 w-40 flex-shrink-0 text-sm font-semibold\"\r\n            key={index}\r\n          >\r\n            <div className=\"absolute flex h-full w-full select-none items-center justify-center\">\r\n              {weekday}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\r\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\r\nimport {CalendarMonth} from './calendar-month';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\ninterface CalendarProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  visibleMonths?: 1 | 2;\r\n}\r\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  if (isMobile) {\r\n    visibleMonths = 1;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {[...new Array(visibleMonths).keys()].map(index => {\r\n        const startDate = toCalendarDate(\r\n          startOfMonth(state.calendarDates[index])\r\n        );\r\n        const isFirst = index === 0;\r\n        const isLast = index === visibleMonths - 1;\r\n        return (\r\n          <CalendarMonth\r\n            key={index}\r\n            state={state}\r\n            startDate={startDate}\r\n            isFirst={isFirst}\r\n            isLast={isLast}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {DateValue, parseAbsolute} from '@internationalized/date';\r\nimport {Fragment, memo} from 'react';\r\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\r\nimport {useSettings} from '@ui/settings/use-settings';\r\nimport {shallowEqual} from '@ui/utils/shallow-equal';\r\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\r\nimport {DateFormatPresets} from '@ui/i18n/formatted-date';\r\n\r\ninterface FormattedDateTimeRangeProps {\r\n  start?: string | DateValue | Date;\r\n  end?: string | DateValue | Date;\r\n  options?: Intl.DateTimeFormatOptions;\r\n  preset?: keyof typeof DateFormatPresets;\r\n  timezone?: string;\r\n}\r\nexport const FormattedDateTimeRange = memo(\r\n  ({\r\n    start,\r\n    end,\r\n    options,\r\n    preset,\r\n    timezone: propsTimezone,\r\n  }: FormattedDateTimeRangeProps) => {\r\n    const {dates} = useSettings();\r\n    const userTimezone = useUserTimezone();\r\n    const timezone = propsTimezone || options?.timeZone || userTimezone;\r\n    const formatter = useDateFormatter(\r\n      options ||\r\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\r\n          preset || dates?.format\r\n        ],\r\n    );\r\n\r\n    if (!start || !end) {\r\n      return null;\r\n    }\r\n\r\n    let value: string;\r\n\r\n    try {\r\n      value = formatter.formatRange(\r\n        castToDate(start, timezone),\r\n        castToDate(end, timezone),\r\n      );\r\n    } catch (e) {\r\n      value = '';\r\n    }\r\n\r\n    return <Fragment>{value}</Fragment>;\r\n  },\r\n  shallowEqual,\r\n);\r\n\r\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\r\n  if (typeof date === 'string') {\r\n    return parseAbsolute(date, timezone).toDate();\r\n  }\r\n  if ('toDate' in date) {\r\n    return date.toDate(timezone);\r\n  }\r\n  return date;\r\n}\r\n","import {List, ListItem} from '@ui/list/list';\r\nimport {DateRangePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\r\n\r\ninterface DateRangePresetList {\r\n  onPresetSelected: (value: DateRangeValue) => void;\r\n  selectedValue?: DateRangeValue | null;\r\n}\r\nexport function DatePresetList({\r\n  onPresetSelected,\r\n  selectedValue,\r\n}: DateRangePresetList) {\r\n  return (\r\n    <List>\r\n      {DateRangePresets.map(preset => (\r\n        <ListItem\r\n          borderRadius=\"rounded-none\"\r\n          capitalizeFirst\r\n          key={preset.key}\r\n          isSelected={selectedValue?.preset === preset.key}\r\n          onSelected={() => {\r\n            const newValue = preset.getRangeValue();\r\n            onPresetSelected(newValue);\r\n          }}\r\n        >\r\n          <Trans {...preset.label} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import {\r\n  useMediaQuery,\r\n  UseMediaQueryOptions,\r\n} from '@ui/utils/hooks/use-media-query';\r\n\r\nexport function useIsTabletMediaQuery(options?: UseMediaQueryOptions) {\r\n  return useMediaQuery('(max-width: 1024px)', options);\r\n}\r\n","import React, {ComponentPropsWithoutRef, ReactNode, useId} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useController} from 'react-hook-form';\r\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\r\nimport {InputSize} from '../input-field/input-size';\r\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\r\nimport {AutoFocusProps, useAutoFocus} from '@ui/focus/use-auto-focus';\r\n\r\ninterface SwitchProps\r\n  extends AutoFocusProps,\r\n    Omit<ComponentPropsWithoutRef<'input'>, 'size'> {\r\n  size?: InputSize;\r\n  className?: string;\r\n  description?: ReactNode;\r\n  invalid?: boolean;\r\n  errorMessage?: string;\r\n  iconRight?: ReactNode;\r\n}\r\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\r\n  (props, ref) => {\r\n    const {\r\n      children,\r\n      size = 'sm',\r\n      description,\r\n      className,\r\n      invalid,\r\n      autoFocus,\r\n      errorMessage,\r\n      iconRight,\r\n      ...domProps\r\n    } = props;\r\n\r\n    const inputRef = useObjectRef(ref);\r\n    useAutoFocus({autoFocus}, inputRef);\r\n\r\n    const style = getSizeClassName(size);\r\n    const fieldClassNames = getInputFieldClassNames(props);\r\n\r\n    const descriptionId = useId();\r\n\r\n    return (\r\n      <div className={clsx(className, 'isolate')}>\r\n        <label className=\"flex select-none items-center\">\r\n          <input\r\n            {...domProps}\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            aria-invalid={invalid || undefined}\r\n            aria-describedby={description ? descriptionId : undefined}\r\n            ref={inputRef}\r\n            aria-checked={domProps.checked}\r\n            className={clsx(\r\n              style,\r\n              !invalid &&\r\n                'checked:border-primary checked:bg-primary dark:checked:border-primary-dark dark:checked:bg-primary-dark',\r\n              invalid && 'checked:border-danger checked:bg-danger',\r\n              'relative flex flex-shrink-0 cursor-pointer appearance-none items-center overflow-hidden rounded-3xl border border-chip bg-chip p-0 outline-none transition-colors checked:border-primary checked:bg-primary',\r\n              'before:z-10 before:block before:translate-x-2 before:rounded-3xl before:border before:bg-white before:transition-transform',\r\n              'checked:before:border-white',\r\n              'focus-visible:ring',\r\n              props.disabled && 'cursor-not-allowed opacity-80',\r\n            )}\r\n          />\r\n          {children && (\r\n            <span\r\n              className={clsx(\r\n                fieldClassNames.size.font,\r\n                'ml-12',\r\n                invalid && 'text-danger',\r\n                props.disabled && 'text-disabled',\r\n              )}\r\n            >\r\n              {children}\r\n            </span>\r\n          )}\r\n          {iconRight}\r\n        </label>\r\n        {description && !errorMessage && (\r\n          <div id={descriptionId} className={fieldClassNames.description}>\r\n            {description}\r\n          </div>\r\n        )}\r\n        {errorMessage && (\r\n          <div id={descriptionId} className={fieldClassNames.error}>\r\n            {errorMessage}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface FormSwitchProps extends SwitchProps {\r\n  name: string;\r\n}\r\nexport function FormSwitch(props: FormSwitchProps) {\r\n  const {\r\n    field: {onChange, onBlur, value = false, ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name: props.name,\r\n  });\r\n\r\n  const formProps: Partial<SwitchProps> = {\r\n    onChange: e => {\r\n      if (e.target.value && e.target.value !== 'on') {\r\n        onChange(e.target.checked ? e.target.value : false);\r\n      } else {\r\n        onChange(e);\r\n      }\r\n    },\r\n    onBlur,\r\n    checked: !!value,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n    name: props.name,\r\n  };\r\n\r\n  return <Switch ref={ref} {...mergeProps(props, formProps)} />;\r\n}\r\n\r\nfunction getSizeClassName(size: InputSize): string {\r\n  switch (size) {\r\n    case 'xl':\r\n      return 'w-68 h-36 before:w-28 before:h-28 checked:before:translate-x-36';\r\n    case 'lg':\r\n      return 'w-56 h-30 before:w-22 before:h-22 checked:before:translate-x-30';\r\n    case 'md':\r\n      return 'w-46 h-24 before:w-18 before:h-18 checked:before:translate-x-24';\r\n    case 'xs':\r\n      return 'w-30 h-18 before:w-12 before:h-12 checked:before:translate-x-14';\r\n    default:\r\n      return 'w-38 h-20 before:w-14 before:h-14 checked:before:translate-x-20';\r\n  }\r\n}\r\n","import {message} from '@ui/i18n/message';\r\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\r\n\r\nexport interface DateRangeComparePreset {\r\n  key: number;\r\n  label: MessageDescriptor;\r\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\r\n}\r\n\r\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\r\n  {\r\n    key: 0,\r\n    label: message('Preceding period'),\r\n    getRangeValue: (range: DateRangeValue) => {\r\n      const startDate = range.start;\r\n      const endDate = range.end;\r\n\r\n      const diffInMilliseconds =\r\n        endDate.toDate().getTime() - startDate.toDate().getTime();\r\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\r\n      const newStart = startDate.subtract({minutes: diffInMinutes});\r\n      return {\r\n        preset: 0,\r\n        start: newStart,\r\n        end: startDate,\r\n      };\r\n    },\r\n  },\r\n  {\r\n    key: 1,\r\n    label: message('Same period last year'),\r\n    getRangeValue: (range: DateRangeValue) => {\r\n      return {\r\n        start: range.start.subtract({years: 1}),\r\n        end: range.end.subtract({years: 1}),\r\n        preset: 1,\r\n      };\r\n    },\r\n  },\r\n  {\r\n    key: 2,\r\n    label: message('Custom'),\r\n    getRangeValue: (range: DateRangeValue) => {\r\n      return {\r\n        start: range.start.subtract({weeks: 1}),\r\n        end: range.end.subtract({weeks: 1}),\r\n        preset: 2,\r\n      };\r\n    },\r\n  },\r\n];\r\n","import {List, ListItem} from '@ui/list/list';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {DateRangeComparePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\r\n\r\ninterface DateRangePresetList {\r\n  originalRangeValue: DateRangeValue;\r\n  onPresetSelected: (value: DateRangeValue) => void;\r\n  selectedValue?: DateRangeValue | null;\r\n}\r\nexport function DateRangeComparePresetList({\r\n  originalRangeValue,\r\n  onPresetSelected,\r\n  selectedValue,\r\n}: DateRangePresetList) {\r\n  return (\r\n    <List>\r\n      {DateRangeComparePresets.map(preset => (\r\n        <ListItem\r\n          borderRadius=\"rounded-none\"\r\n          capitalizeFirst\r\n          key={preset.key}\r\n          isSelected={selectedValue?.preset === preset.key}\r\n          onSelected={() => {\r\n            const newValue = preset.getRangeValue(originalRangeValue);\r\n            onPresetSelected(newValue);\r\n          }}\r\n        >\r\n          <Trans {...preset.label} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {DatePickerField} from '../date-picker-field';\r\nimport {DateRangePickerState} from '../use-date-range-picker-state';\r\nimport {Calendar} from '../../calendar/calendar';\r\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@ui/buttons/button';\r\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@ui/overlays/dialog/dialog';\r\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\r\nimport {ArrowRightAltIcon} from '@ui/icons/material/ArrowRightAlt';\r\nimport {DateSegmentList} from '../../segments/date-segment-list';\r\nimport {Trans} from '@ui/i18n/trans';\r\nimport {FormattedDateTimeRange} from '@ui/i18n/formatted-date-time-range';\r\nimport {DatePresetList} from './date-range-preset-list';\r\nimport {useIsTabletMediaQuery} from '@ui/utils/hooks/is-tablet-media-query';\r\nimport {Switch} from '@ui/forms/toggle/switch';\r\nimport {DateRangeComparePresetList} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\r\n\r\ninterface DateRangeDialogProps {\r\n  state: DateRangePickerState;\r\n  compareState?: DateRangePickerState;\r\n  compareVisibleDefault?: boolean;\r\n  showInlineDatePickerField?: boolean;\r\n}\r\nexport function DateRangeDialog({\r\n  state,\r\n  compareState,\r\n  showInlineDatePickerField = false,\r\n  compareVisibleDefault = false,\r\n}: DateRangeDialogProps) {\r\n  const isTablet = useIsTabletMediaQuery();\r\n  const {close} = useDialogContext();\r\n  const initialStateRef = useRef<DateRangePickerState>(state);\r\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\r\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\r\n\r\n  const footer = (\r\n    <DialogFooter\r\n      dividerTop\r\n      startAction={\r\n        !hasPlaceholder && !isTablet ? (\r\n          <div className=\"text-xs\">\r\n            <FormattedDateTimeRange\r\n              start={state.selectedValue.start.toDate()}\r\n              end={state.selectedValue.end.toDate()}\r\n              options={{dateStyle: 'medium'}}\r\n            />\r\n          </div>\r\n        ) : undefined\r\n      }\r\n    >\r\n      <Button\r\n        variant=\"text\"\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          state.setSelectedValue(initialStateRef.current.selectedValue);\r\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\r\n          close();\r\n        }}\r\n      >\r\n        <Trans message=\"Cancel\" />\r\n      </Button>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          const value = state.selectedValue;\r\n          if (compareState && compareVisible) {\r\n            value.compareStart = compareState.selectedValue.start;\r\n            value.compareEnd = compareState.selectedValue.end;\r\n          }\r\n          close(value);\r\n        }}\r\n      >\r\n        <Trans message=\"Select\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n\r\n  return (\r\n    <Dialog size=\"auto\">\r\n      <DialogBody className=\"flex\" padding=\"p-0\">\r\n        {!isTablet && (\r\n          <div className=\"min-w-192 py-14\">\r\n            <DatePresetList\r\n              selectedValue={state.selectedValue}\r\n              onPresetSelected={preset => {\r\n                state.setSelectedValue(preset);\r\n                if (state.closeDialogOnSelection) {\r\n                  close(preset);\r\n                }\r\n              }}\r\n            />\r\n            {!!compareState && (\r\n              <Fragment>\r\n                <Switch\r\n                  className=\"mx-20 mb-10 mt-14\"\r\n                  checked={compareVisible}\r\n                  onChange={e => setCompareVisible(e.target.checked)}\r\n                >\r\n                  <Trans message=\"Compare\" />\r\n                </Switch>\r\n                {compareVisible && (\r\n                  <DateRangeComparePresetList\r\n                    originalRangeValue={state.selectedValue}\r\n                    selectedValue={compareState.selectedValue}\r\n                    onPresetSelected={preset => {\r\n                      compareState.setSelectedValue(preset);\r\n                    }}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        )}\r\n        <AnimatePresence initial={false}>\r\n          <Calendars\r\n            state={state}\r\n            compareState={compareState}\r\n            showInlineDatePickerField={showInlineDatePickerField}\r\n            compareVisible={compareVisible}\r\n          />\r\n        </AnimatePresence>\r\n      </DialogBody>\r\n      {!state.closeDialogOnSelection && footer}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface CustomRangePanelProps {\r\n  state: DateRangePickerState;\r\n  compareState?: DateRangePickerState;\r\n  showInlineDatePickerField?: boolean;\r\n  compareVisible: boolean;\r\n}\r\nfunction Calendars({\r\n  state,\r\n  compareState,\r\n  showInlineDatePickerField,\r\n  compareVisible,\r\n}: CustomRangePanelProps) {\r\n  return (\r\n    <m.div\r\n      initial={{width: 0, overflow: 'hidden'}}\r\n      animate={{width: 'auto'}}\r\n      exit={{width: 0, overflow: 'hidden'}}\r\n      transition={{type: 'tween', duration: 0.125}}\r\n      className=\"border-l px-20 pb-20 pt-10\"\r\n    >\r\n      {showInlineDatePickerField && (\r\n        <div>\r\n          <InlineDatePickerField state={state} />\r\n          {!!compareState && compareVisible && (\r\n            <InlineDatePickerField\r\n              state={compareState}\r\n              label={<Trans message=\"Compare\" />}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"flex items-start gap-36\">\r\n        <Calendar state={state} visibleMonths={2} />\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface InlineDatePickerFieldProps {\r\n  state: DateRangePickerState;\r\n  label?: ReactNode;\r\n}\r\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\r\n  const {selectedValue, setSelectedValue} = state;\r\n  return (\r\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\r\n      <DateSegmentList\r\n        state={state}\r\n        value={selectedValue.start}\r\n        onChange={newValue => {\r\n          setSelectedValue({...selectedValue, start: newValue});\r\n        }}\r\n      />\r\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\r\n      <DateSegmentList\r\n        state={state}\r\n        value={selectedValue.end}\r\n        onChange={newValue => {\r\n          setSelectedValue({...selectedValue, end: newValue});\r\n        }}\r\n      />\r\n    </DatePickerField>\r\n  );\r\n}\r\n","import {Fragment, memo} from 'react';\r\nimport {useNumberFormatter} from '@ui/i18n/use-number-formatter';\r\nimport {NumberFormatOptions} from '@internationalized/number';\r\nimport {shallowEqual} from '@ui/utils/shallow-equal';\r\n\r\ninterface FormattedNumberProps extends NumberFormatOptions {\r\n  value: number;\r\n}\r\nexport const FormattedNumber = memo(\r\n  ({value, ...options}: FormattedNumberProps) => {\r\n    const formatter = useNumberFormatter(options);\r\n\r\n    if (isNaN(value)) {\r\n      value = 0;\r\n    }\r\n\r\n    return <Fragment>{formatter.format(value)}</Fragment>;\r\n  },\r\n  shallowEqual,\r\n);\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ArrowBackIcon = createSvgIcon(\r\n  <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\r\n, 'ArrowBackOutlined');\r\n"],"names":["Input","React","props","ref","children","inputProps","wrapperProps","className","autoFocus","style","onClick","jsx","clsx","FocusScope","startOfDay","date","endOfDay","getUserTimezone","defaultTimezone","_a","getBootstrapData","preferredTimezone","_c","_b","getLocalTimeZone","useCurrentDateTime","timezone","useUserTimezone","useMemo","now","getCurrentDateTime","Now","locale","DateRangePresets","message","startOfWeek","endOfWeek","start","startOfMonth","endOfMonth","startOfYear","endOfYear","DateRangeIcon","createSvgIcon","DatePickerField","inputRef","onBlur","other","fieldClassNames","getInputFieldClassNames","objRef","useObjectRef","fieldProps","useField","Field","mergeProps","e","focusManager","createFocusManager","getDefaultGranularity","CalendarDate","dateIsInvalid","min","max","toSafeZoned","timeZone","disambiguation","toZoned","useBaseDatePickerState","selectedDate","calendarIsOpen","setCalendarIsOpen","useState","closeDialogOnSelection","granularity","useDateRangePickerState","isPlaceholder","setIsPlaceholder","setStateValue","internalValue","setInternalValue","useControlledState","completeRange","value","clear","useCallback","anchorDate","setAnchorDate","isHighlighting","setIsHighlighting","highlightedRange","setHighlightedRange","calendarDates","setCalendarDates","rangeToCalendarDates","constrainRange","range","end","maxDate","startMax","minDate","endMin","setSelectedValue","newRange","dayIsActive","day","isSameDay","dayIsHighlighted","dayIsRangeStart","dayIsRangeEnd","getCellProps","isSameMonth","makeRange","finalRange","toCalendarDate","ArrowRightAltIcon","adjustSegment","part","amount","options","hours","isPM","setSegment","segmentValue","wasPM","PAGE_STEP","EditableDateSegment","segment","domProps","onChange","isMobile","useIsMobileMediaQuery","enteredKeys","useRef","localeCode","useSelectedLocale","useFocusManager","formatter","useDateFormatter","parser","NumberParser","setSegmentValue","newValue","adjustSegmentValue","backspace","parsed","today","onKeyDown","onInput","amPmFormatter","am","amDate","pm","pmDate","key","numberValue","allowsZero","shouldSetValue","spinButtonProps","LiteralDateSegment","getSegmentLimits","type","getMinimumMonthInYear","getMinimumDayInMonth","DateSegmentList","segmentProps","state","memoOptions","dateValue","segments","limits","textValue","index","KeyboardArrowRightIcon","CalendarCell","currentMonth","dayOfWeek","getDayOfWeek","isActive","isHighlighted","isRangeStart","isRangeEnd","dayIsToday","isToday","sameMonth","isDisabled","jsxs","CalendarMonth","startDate","isFirst","isLast","weeksInMonth","getWeeksInMonth","monthStart","CalendarMonthHeader","WeekdayHeader","weekIndex","m","dayIndex","shiftCalendars","direction","count","newDates","monthFormatter","isBackwardDisabled","isForwardDisabled","IconButton","KeyboardArrowLeftIcon","dayFormatter","dateDay","weekday","Calendar","visibleMonths","Fragment","FormattedDateTimeRange","memo","preset","propsTimezone","dates","useSettings","userTimezone","DateFormatPresets","castToDate","shallowEqual","parseAbsolute","DatePresetList","onPresetSelected","selectedValue","List","ListItem","Trans","useIsTabletMediaQuery","useMediaQuery","Switch","size","description","invalid","errorMessage","iconRight","useAutoFocus","getSizeClassName","descriptionId","useId","FormSwitch","error","useController","formProps","DateRangeComparePresets","diffInMinutes","DateRangeComparePresetList","originalRangeValue","DateRangeDialog","compareState","showInlineDatePickerField","compareVisibleDefault","isTablet","close","useDialogContext","initialStateRef","hasPlaceholder","compareVisible","setCompareVisible","footer","DialogFooter","Button","Dialog","DialogBody","AnimatePresence","Calendars","InlineDatePickerField","label","FormattedNumber","useNumberFormatter","ArrowBackIcon"],"mappings":"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"}